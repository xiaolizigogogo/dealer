<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.utonw.utonerp.mapper.DeptMapper">
    <resultMap id="BaseResultMap" type="com.utonw.dealer.api.entity.erp.Dept">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="company_id" property="companyId" jdbcType="INTEGER"/>
        <result column="parent_id" property="parentId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="principal_id" property="principalId" jdbcType="VARCHAR"/>
        <result column="dept_type" property="deptType" jdbcType="VARCHAR"/>
        <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
        <result column="is_valid" property="isValid" jdbcType="BIT"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="created_by_id" property="createdById" jdbcType="VARCHAR"/>
    </resultMap>


    <resultMap id="ResultMapWithBLOBs" type="com.utonw.dealer.api.entity.erp.Dept" extends="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="remark" property="remark" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, company_id, parent_id, name, principal_id, dept_type, telephone, is_valid, created_at,
        created_by_id
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        remark
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
            parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from dept
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from dept
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.utonw.dealer.api.entity.erp.Dept">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into dept (id, company_id, parent_id,
        name, principal_id, dept_type,
        telephone, is_valid, created_at,
        created_by_id, remark)
        values (#{id,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER},
        #{name,jdbcType=VARCHAR}, #{principalId,jdbcType=VARCHAR}, #{deptType,jdbcType=VARCHAR},
        #{telephone,jdbcType=VARCHAR}, #{isValid,jdbcType=BIT}, #{createdAt,jdbcType=TIMESTAMP},
        #{createdById,jdbcType=VARCHAR}, #{remark,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.utonw.dealer.api.entity.erp.Dept">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into dept
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="principalId != null">
                principal_id,
            </if>
            <if test="deptType != null">
                dept_type,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="isValid != null">
                is_valid,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="createdById != null">
                created_by_id,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="principalId != null">
                #{principalId,jdbcType=VARCHAR},
            </if>
            <if test="deptType != null">
                #{deptType,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="isValid != null">
                #{isValid,jdbcType=BIT},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="createdById != null">
                #{createdById,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.utonw.dealer.api.entity.erp.Dept">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update dept
        <set>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="principalId != null">
                principal_id = #{principalId,jdbcType=VARCHAR},
            </if>
            <if test="deptType != null">
                dept_type = #{deptType,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="isValid != null">
                is_valid = #{isValid,jdbcType=BIT},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="createdById != null">
                created_by_id = #{createdById,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.utonw.dealer.api.entity.erp.Dept">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update dept
        set company_id = #{companyId,jdbcType=INTEGER},
        parent_id = #{parentId,jdbcType=INTEGER},
        name = #{name,jdbcType=VARCHAR},
        principal_id = #{principalId,jdbcType=VARCHAR},
        dept_type = #{deptType,jdbcType=VARCHAR},
        telephone = #{telephone,jdbcType=VARCHAR},
        is_valid = #{isValid,jdbcType=BIT},
        created_at = #{createdAt,jdbcType=TIMESTAMP},
        created_by_id = #{createdById,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.utonw.dealer.api.entity.erp.Dept">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update dept
        set company_id = #{companyId,jdbcType=INTEGER},
        parent_id = #{parentId,jdbcType=INTEGER},
        name = #{name,jdbcType=VARCHAR},
        principal_id = #{principalId,jdbcType=VARCHAR},
        dept_type = #{deptType,jdbcType=VARCHAR},
        telephone = #{telephone,jdbcType=VARCHAR},
        is_valid = #{isValid,jdbcType=BIT},
        created_at = #{createdAt,jdbcType=TIMESTAMP},
        created_by_id = #{createdById,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <resultMap extends="ResultMapWithBLOBs" id="BaseComUserMap" type="com.utonw.dealer.api.entity.erp.Dept">
        <association property="company" column="company_id"
                     javaType="com.utonw.dealer.api.entity.erp.Company">
            <id column="companyId" property="id" jdbcType="INTEGER"/>
            <result column="companyName" property="name" jdbcType="VARCHAR"/>

        </association>
        <association property="user" column="uuid" javaType="com.utonw.dealer.api.entity.erp.User">
            <id column="uuid" property="uuid" jdbcType="VARCHAR"/>
            <result column="userId" property="id" jdbcType="INTEGER"/>
            <result column="realname" property="realname" jdbcType="VARCHAR"/>
            <result column="principal" property="nickname" jdbcType="VARCHAR"/>
        </association>
    </resultMap>

    <select id="queryDeptList" resultMap="BaseComUserMap">
        SELECT dP.*, com.id as companyId, com.name as companyName , u.id as userId,
        u.realname as realname,
        u2.realname as principal
        FROM dept
        dp LEFT JOIN  company com ON com.id = dp.company_id
        LEFT JOIN user u ON dp.created_by_id = u.uuid
        LEFT JOIN USER u2 ON dp.principal_id = u2.uuid
        WHERE dp.is_valid = 1
        And u.active_flg =1
        <if test="dataAccessLevel != 4">
        AND com.id IN (
		SELECT 
		company_id FROM USER WHERE active_flg = 1
       		AND uuid = #{userId,jdbcType=VARCHAR}
		)
	    </if> 
        <if test="companyId != null and companyId != ''">
            AND dp.company_id = #{companyId}
        </if>
        <if test="nickname != null and nickname != ''">
            AND u2.realname like concat('%',#{nickname},'%')
        </if>
        <if test="telephone != null and telephone != ''">
            AND dp.telephone like concat('%',#{telephone},'%')
        </if>
    </select>

    <select id="queryDeptById" resultMap="BaseComUserMap">
        SELECT dP.*, com.id as companyId, com.name as companyName
        FROM dept
        dp LEFT JOIN
        company com ON
        com.id
        = dp.company_id  WHERE dp.is_valid = '1'
            AND  dp.id = #{id,jdbcType=INTEGER}
    </select>

    <select id="queryDeptComById" resultMap="BaseResultMap">
        SELECT * FROM dept d WHERE d.company_id= #{companyId}
        AND d.is_valid = 1
        <if test="type != null and type != ''">
            and d.name LIKE '%业务%'
        </if>

    </select>
	<select id="queryDeptAll" resultMap="BaseResultMap">
		SELECT * FROM dept d WHERE d.company_id= #{companyId}
        AND d.is_valid = 1
	</select>
    <select id="selectDeptPrincipalIdByLoanId" resultType="String" parameterType="String">
      SELECT d.principal_id FROM dept d LEFT JOIN loan_info li ON li.dept_id = d.id WHERE
       li.uuid = #{loanId}
    </select>
    <select id="queryDepByCompIdAndCompName" resultMap="BaseResultMap" parameterType="Map">
        SELECT * FROM dept d WHERE d.company_id= #{companyId}
        AND d.is_valid = 1
        <if test="name != null and name != ''">
            and d.name LIKE CONCAT('%', #{name},'%')
        </if>

    </select>


</mapper>