<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.utonw.utonerp.mapper.RoleManageMapper">
    <resultMap id="BaseResultMap" type="com.utonw.dealer.api.entity.erp.RoleManage">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="is_show" property="isShow" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        role_id, role_name, is_show
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from role_manage
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from role_manage
        where role_id = #{roleId,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.utonw.dealer.api.entity.erp.RoleManage">
        insert into role_manage (role_id, role_name, is_show
        )
        values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{isShow,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertSelective" parameterType="com.utonw.dealer.api.entity.erp.RoleManage"
            useGeneratedKeys="true" keyProperty="roleId">
        <!--
            返回添加的主键ID
         -->
        insert into role_manage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="isShow != null">
                is_show,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="isShow != null">
                #{isShow,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.utonw.dealer.api.entity.erp.RoleManage">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update role_manage
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="isShow != null">
                is_show = #{isShow,jdbcType=VARCHAR},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.utonw.dealer.api.entity.erp.RoleManage">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update role_manage
        set role_name = #{roleName,jdbcType=VARCHAR},
        is_show = #{isShow,jdbcType=VARCHAR}
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>
    
    <!--查询角色列表-->
    <select id="getListByParam" resultMap="BaseResultMap" parameterType="java.lang.String">
        select<include refid="Base_Column_List"/>from role_manage
        where is_show ="Y"
        <if test="roleName != null">
            and role_name LIKE CONCAT('%',#{roleName},'%')
        </if>
    </select>

   <!--查询角色列表-->
    <select id="findRoleManageNotInRoleUser" resultMap="BaseResultMap">
        select 
       <include refid="Base_Column_List"/>from role_manage rm where rm.role_id  in 
       (select ra.ra_role_id from role_assign ra where ra.ra_role_id not in 
       (select ru.rb_role_id from role_user ru where 1=1
       <if test="userId != null">
            and ru.rb_user_id=#{customerId,jdbcType=INTEGER}
        </if>
			)
	   <if test="userId != null">
            and ra.ra_customer_id=#{userId,jdbcType=INTEGER}
        </if>
		) 
    </select>
    
      <!--查询分配角色列表-->
    <select id="findRoleManageNotInRoleAssign" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>from role_manage
        where role_id  in (select ra.ra_role_id from role_assign ra where ra.ra_role_id not in (
        select ra.ra_role_id from  role_assign ra where 1=1
        <if test="customerId != null">
            and ra.ra_customer_id=#{customerId,jdbcType=INTEGER}
        </if>
        )
         <if test="userId != null">
            and ra.ra_customer_id=#{userId,jdbcType=INTEGER}
        </if>
        )
    </select>
</mapper>