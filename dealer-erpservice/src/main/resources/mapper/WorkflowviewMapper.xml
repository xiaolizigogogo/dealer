<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.utonw.utonerp.mapper.WorkflowviewMapper">
    <resultMap id="WorkFlowResultMap" type="com.utonw.dealer.api.entity.workflowtask">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="ASSIGNEE_" property="assignee" jdbcType="VARCHAR"/>
        <result column="NAME_" property="name" jdbcType="VARCHAR" />
        <result column="TASK_DEF_KEY_" property="task_def_key" jdbcType="VARCHAR" />
        <result column="GROUP_ID_" property="groupid" jdbcType="VARCHAR" />
        <result column="BUSINESS_KEY_" property="businesskey" jdbcType="VARCHAR" />
        <result column="TASKID" property="taskid" jdbcType="VARCHAR" />
        <result column="PROC_KEY" property="prockey" jdbcType="VARCHAR" />
        <result column="CREATE_TIME_" property="createtime" jdbcType="TIMESTAMP" />
        <result column="review_status" property="review_status" jdbcType="VARCHAR" />
        <result column="review_conclusion" property="review_conclusion" jdbcType="VARCHAR" />
    </resultMap>

    <select id="querywithCapital" parameterType="java.util.Map" resultMap="WorkFlowResultMap">
        SELECT *,c.approvalConclusion FROM workflowview wfw LEFT JOIN   (SELECT  a.approvalStatus,a.orderId,approvalConclusion
		FROM csd_approval_info a
		INNER JOIN   (SELECT MAX(b.id) AS ids FROM csd_approval_info b GROUP BY b.orderId) c
		 ON c.ids=a.id) c ON  c.orderId=wfw.BUSINESS_KEY_
		 where wfw.ASSIGNEE_ = #{prockey, jdbcType=VARCHAR} AND TASK_DEF_KEY_ IN ('information_verification','installCamera_signContract','evaluate_install_collateral'
       ,'sign_contract','dismantling')
    </select>

    <select id="queryTaskByUserId" parameterType="java.util.Map" resultMap="WorkFlowResultMap">
      SELECT * FROM workflowview wfv where wfv.ASSIGNEE_ = #{userId, jdbcType=VARCHAR}
       AND wfv.PROC_KEY = #{prockey, jdbcType=VARCHAR} AND TASK_DEF_KEY_ NOT IN ('information_verification','installCamera_signContract','evaluate_install_collateral'
       ,'sign_contract','dismantling')
      UNION
      SELECT * FROM workflowview wfv WHERE  wfv.ASSIGNEE_ is null AND wfv.GROUP_ID_ in
      (
        SELECT DISTINCT rb_role_id FROM role_user WHERE rb_user_id = #{userId, jdbcType=VARCHAR}
      )  AND wfv.PROC_KEY = #{prockey, jdbcType=VARCHAR} AND TASK_DEF_KEY_  NOT IN ('information_verification','installCamera_signContract','evaluate_install_collateral'
       ,'sign_contract','dismantling')
    </select>
    <select id="queryTaskByUuId" parameterType="java.lang.String" resultMap="WorkFlowResultMap">
     SELECT *,c.review_conclusion FROM workflowview wfw LEFT JOIN   (SELECT  a.review_status,a.loan_id,review_conclusion
		FROM loan_review_info a
		INNER JOIN   (SELECT MAX(b.id) AS ids FROM loan_review_info b GROUP BY b.loan_id) c
		 ON c.ids=a.id) c ON  c.loan_id=wfw.BUSINESS_KEY_
		 where wfw.ASSIGNEE_ = #{uuid,jdbcType=VARCHAR} AND TASK_DEF_KEY_ IN ('information_verification','installCamera_signContract','evaluate_install_collateral'
       ,'sign_contract','dismantling') order by CREATE_TIME_ DESC
    </select>
    
    <select id="queryTaskByUuIdcount"  resultType="java.lang.Integer">
   select count(1) from(
     SELECT * FROM workflowview wfv where wfv.ASSIGNEE_ = #{uuid}
      UNION
      SELECT * FROM workflowview wfv WHERE  wfv.ASSIGNEE_ is null AND wfv.GROUP_ID_ in
      (
        SELECT DISTINCT rb_role_id FROM role_user WHERE rb_user_id = #{uuid}
      ) ) a
    </select>
    
    <select id="getTaskId" parameterType="java.lang.String" resultMap="WorkFlowResultMap">
        SELECT * FROM workflowview  where BUSINESS_KEY_ = #{appylId,jdbcType=VARCHAR} AND TASK_DEF_KEY_ = 'audit_camera_contract'
    </select>
    <select id="selectByBussinessKeys" parameterType="java.lang.String" resultMap="WorkFlowResultMap">
    select c.*,wfw.* from  (SELECT  a.review_status,a.loan_id,review_conclusion
    FROM loan_review_info a
    INNER JOIN   (SELECT MAX(b.id) AS ids FROM loan_review_info b GROUP BY b.loan_id) c
    ON c.ids=a.id) c LEFT JOIN workflowview wfw  ON  c.loan_id=wfw.BUSINESS_KEY_
    where
    c.loan_id in
    <foreach collection="list" open="(" close=")" item="item" separator=",">
        #{item}
    </foreach>
    order by CREATE_TIME_ DESC
</select>
    <select id="selectApplyByApplyIds" parameterType="java.lang.String" resultMap="WorkFlowResultMap">
        select wfw.*
        FROM  workflowview wfw
        where
        wfw.BUSINESS_KEY_ in
        <foreach collection="list" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
        order by CREATE_TIME_ DESC
    </select>
    <select id="selectByBussinessKey" parameterType="java.lang.String" resultMap="WorkFlowResultMap">
     SELECT * FROM workflowview  where BUSINESS_KEY_ = #{appylId,jdbcType=VARCHAR}  order by CREATE_TIME_ DESC limit 1
    </select>
    <select id="selectMerchantCount" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT wfv.TASK_DEF_KEY_,IFNULL(COUNT(wfv.TASK_DEF_KEY_),0) count
        FROM workflowview wfv
        WHERE wfv.ASSIGNEE_ = #{param1, jdbcType=VARCHAR}
        AND wfv.PROC_KEY = #{param2, jdbcType=VARCHAR}
        AND wfv.TASK_DEF_KEY_  NOT IN ('information_verification','installCamera_signContract','evaluate_install_collateral'
       ,'sign_contract','dismantling')
        GROUP BY wfv.TASK_DEF_KEY_
        UNION
        SELECT wfv.TASK_DEF_KEY_,IFNULL(COUNT(wfv.TASK_DEF_KEY_),0)
        FROM workflowview wfv WHERE  wfv.ASSIGNEE_ is null AND wfv.GROUP_ID_ in
        (
        	SELECT DISTINCT rb_role_id
        	FROM role_user
        	WHERE rb_user_id = #{param1, jdbcType=VARCHAR}
        )
        AND wfv.PROC_KEY = #{param2, jdbcType=VARCHAR}
        AND wfv.TASK_DEF_KEY_  NOT IN ('information_verification','installCamera_signContract','evaluate_install_collateral'
       ,'sign_contract','dismantling')
        GROUP BY wfv.TASK_DEF_KEY_
    </select>
    <select id="selectWorkflowtask" parameterType="java.util.Map" resultMap="WorkFlowResultMap">
        SELECT *,c.approvalConclusion FROM workflowview wfw LEFT JOIN   (SELECT  a.approvalStatus,a.orderId,approvalConclusion
        FROM csd_approval_info a
        INNER JOIN   (SELECT MAX(b.id) AS ids FROM csd_approval_info b GROUP BY b.orderId) c
        ON c.ids=a.id) c ON  c.orderId=wfw.BUSINESS_KEY_
        where wfw.BUSINESS_KEY_ IN 	<foreach collection="list" open="(" close=")" item="item" separator=",">
               #{item}
          </foreach>
    </select>

    <select id="selectTaskByTaskKey" resultMap="WorkFlowResultMap">
      select * from  workflowview wfw where wfw.TASK_DEF_KEY_=#{param1} and wfw.PROC_KEY=#{param2}
    </select>
    <select id="selectApplyCount" resultType="java.util.Map">
      select
       count(*) num,wfw.TASK_DEF_KEY_ as taskKey
       from workflowview wfw where wfw.PROC_KEY=#{param1} GROUP BY wfw.TASK_DEF_KEY_
    </select>
    <select id="selectRepaymentCount" resultType="java.util.Map">
    select count(*) num,a.TASK_DEF_KEY_ as taskKey from (
     SELECT * FROM workflowview wfv where wfv.ASSIGNEE_ = #{param1, jdbcType=VARCHAR}
       AND wfv.PROC_KEY = #{param2, jdbcType=VARCHAR}
      UNION
      SELECT * FROM workflowview wfv WHERE  wfv.ASSIGNEE_ is null AND wfv.GROUP_ID_ in
      (
        SELECT DISTINCT rb_role_id FROM role_user WHERE rb_user_id = #{param1, jdbcType=VARCHAR}
      )  AND wfv.PROC_KEY = #{param2, jdbcType=VARCHAR}
      ) a group by a.TASK_DEF_KEY_
    </select>
    <select id="selectByBussinessKeysAndKey" resultMap="WorkFlowResultMap">
    	 select wfw.*
        FROM  workflowview wfw
        where
        wfw.BUSINESS_KEY_ in
        <foreach collection="param1" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
        and wfw.PROC_KEY=#{param2}
        order by CREATE_TIME_ DESC
    </select>
    <select id="selectByTaskId" resultMap="WorkFlowResultMap">
    select * from workflowview where TASKID=#{param1} 
    </select>
    <select id="selectCountBynode" resultType="java.util.Map">
    	SELECT 
		<foreach collection="nodeList" item="node"
		                    index="index"  separator=",">
		(SELECT COUNT(*) FROM workflowview w WHERE w.PROC_KEY = 'CarDealerLoan' AND w.TASK_DEF_KEY_=#{node}) as ${node}Loancount
		</foreach>
		FROM DUAL
    </select>
    <select id="selectTaskkeyByProcKey" resultMap="WorkFlowResultMap">
      select * from  workflowview wfw where wfw.TASK_DEF_KEY_=#{param1} and wfw.PROC_KEY=#{param2}
    </select>
    <select id="selectOverdueCount" resultType="java.util.Map">
    	 select count(*) num , 
    	 case
     	when wfv.TASK_DEF_KEY_ is null then 'overdue'
        else wfv.TASK_DEF_KEY_ end  as taskKey
    	 FROM   repayment_plan rp LEFT JOIN (SELECT * FROM workflowview wfv where wfv.ASSIGNEE_ = #{param1, jdbcType=VARCHAR}
       AND wfv.PROC_KEY ='CarDealerRepayment'
      UNION
      SELECT * FROM workflowview wfv WHERE  wfv.ASSIGNEE_ is null AND wfv.GROUP_ID_ in
      (
        SELECT DISTINCT rb_role_id FROM role_user WHERE rb_user_id = #{param1, jdbcType=VARCHAR}
      )  AND wfv.PROC_KEY = 'CarDealerRepayment') wfv on rp.order_id=wfv.BUSINESS_KEY_
      where
      ((rp.end_time is  null and  DATEDIFF(now(),DATE_FORMAT(rp.repaymen_time,'%Y-%m-%d'))>0)) and wfv.TASK_DEF_KEY_ is null 
          
    </select>
    <delete id="deleteByBusinessKey" >
      set foreign_key_checks=0  ;
      delete ahp.*,aht.*,ahv.*,arue.*,art.*,arv.* from  act_hi_procinst ahp left join act_hi_taskinst aht on ahp.PROC_INST_ID_=aht.PROC_INST_ID_
			  left join act_hi_varinst ahv on ahp.PROC_INST_ID_=ahv.PROC_INST_ID_
        left join act_ru_task art on ahp.PROC_INST_ID_=art.PROC_INST_ID_
        left join act_ru_execution arue on ahp.PROC_INST_ID_=arue.PROC_INST_ID_
        left join act_ru_variable arv on ahp.PROC_INST_ID_=arv.PROC_INST_ID_
        where ahp.BUSINESS_KEY_=#{param1};
        set foreign_key_checks=1 ;
    </delete>
</mapper>