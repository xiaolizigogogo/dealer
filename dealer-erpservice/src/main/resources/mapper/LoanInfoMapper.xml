<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.utonw.utonerp.mapper.LoanInfoMapper">
	<resultMap id="BaseResultMap" type="com.utonw.dealer.api.entity.erp.LoanInfo">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		<id column="uuid" jdbcType="VARCHAR" property="uuid" />
		<result column="id" jdbcType="INTEGER" property="id" />
		<result column="customer_id" jdbcType="VARCHAR" property="customerId" />
		<result column="processinsId" jdbcType="VARCHAR" property="processinsId" />
		<result column="id_card" jdbcType="VARCHAR" property="idCard" />
		<result column="mobile" jdbcType="VARCHAR" property="mobile" />
		<result column="loan_money" jdbcType="DECIMAL" property="loanMoney" />
		<result column="apply_money" jdbcType="DECIMAL" property="applyMoney" />
		<result column="loan_type" jdbcType="VARCHAR" property="loanType" />
		<result column="loan_status" jdbcType="VARCHAR" property="loanStatus" />
		<result column="loan_way" jdbcType="VARCHAR" property="loanWay" />
		<result column="loan_purpose" jdbcType="VARCHAR" property="loanPurpose" />
		<result column="repay_source" jdbcType="VARCHAR" property="repaySource" />
		<result column="loan_rate" jdbcType="DECIMAL" property="loanRate" />
		<result column="loan_limit_time" jdbcType="INTEGER" property="loanLimitTime" />
		<result column="loan_limit_time_unit" jdbcType="VARCHAR"
				property="loanLimitTimeUnit" />
		<result column="repay_way" jdbcType="VARCHAR" property="repayWay" />
		<result column="contract_num" jdbcType="VARCHAR" property="contractNum" />
		<result column="pledge_num" jdbcType="VARCHAR" property="pledgeNum" />
		<result column="guaranty_num" jdbcType="VARCHAR" property="guarantyNum" />
		<result column="customer_account_num_id" jdbcType="INTEGER"
				property="customerAccountNumId" />
		<result column="customer_repayment_num_id" jdbcType="INTEGER"
				property="customerRepaymentNumId" />
		<result column="dept_id" jdbcType="INTEGER" property="deptId" />
		<result column="company_id" jdbcType="INTEGER" property="companyId" />
		<result column="is_ended" jdbcType="BIT" property="isEnded" />
		<result column="ended_at" jdbcType="TIMESTAMP" property="endedAt" />
		<result column="is_destoryed" jdbcType="BIT" property="isDestoryed" />
		<result column="destoryed_at" jdbcType="TIMESTAMP" property="destoryedAt" />
		<result column="is_extended" jdbcType="BIT" property="isExtended" />
		<result column="extend_time" jdbcType="TIMESTAMP" property="extendTime" />
		<result column="extend_loan_id" jdbcType="VARCHAR" property="extendLoanId" />
		<result column="first_repayment_at" jdbcType="DATE" property="firstRepaymentAt" />
		<result column="withhold_money" jdbcType="DECIMAL" property="withholdMoney" />
		<result column="is_chargedoff" jdbcType="BIT" property="isChargedoff" />
		<result column="chargedof_money" jdbcType="DECIMAL" property="chargedofMoney" />
		<result column="chargedoff_at" jdbcType="DATE" property="chargedoffAt" />
		<result column="chargedoff_way" jdbcType="VARCHAR" property="chargedoffWay" />
		<result column="create_cm_id" jdbcType="VARCHAR" property="createCmId" />
		<result column="responsible_cm_id" jdbcType="VARCHAR" property="responsibleCmId" />
		<result column="assisted_user_id" jdbcType="VARCHAR" property="assistedUserId" />
		<result column="applyed_at" jdbcType="TIMESTAMP" property="applyedAt" />
		<result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
		<result column="updatedBy" jdbcType="VARCHAR" property="updatedby" />
		<result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
		<result column="processinsId" jdbcType="VARCHAR" property="processinsId" />
		<result column="surplus_reimbursement_amount" jdbcType="DECIMAL"
				property="surplusReimbursementAmount" />
		<result column="pledge_type" jdbcType="VARCHAR" property="pledgeType" />
		<result column="depreciationFee" property="depreciationFee"
				jdbcType="DECIMAL" />
		<result column="drunkDrive" property="drunkDrive" jdbcType="DECIMAL" />
		<result column="cashdepositFee" property="cashdepositFee"
				jdbcType="DECIMAL" />
		<result column="certificatefee" property="certificatefee"
				jdbcType="DECIMAL" />
		<result column="orderid" property="orderid" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="teamleader_id" property="teamLeaderId"
				jdbcType="VARCHAR" />
		<result column="parkCost" property="parkCost" jdbcType="DECIMAL" />
		<result column="manageCost" property="manageCost" jdbcType="DECIMAL" />
		<result column="buy_car_method" property="buy_car_method"
				jdbcType="TINYINT" />
		<result column="plantype" property="plantype" jdbcType="TINYINT" />
		<result column="gpsPattern" property="gpsPattern" jdbcType="VARCHAR" />
		<result column="loan_product" property="loan_product" jdbcType="VARCHAR" />
		<result column="gpsCost" property="gpsCost" jdbcType="DECIMAL" />

	</resultMap>
	<!-- 入库List查询用字段 -->
	<resultMap id="ResultMapOfInCarStock" type="com.utonw.dealer.api.entity.erp.CarStock">
		<result column="orderid" property="orderid" jdbcType="VARCHAR" />
		<result column="customer_name" property="customer_name"
				jdbcType="VARCHAR" />
		<result column="stockobjectnumber" property="stockobjectnumber"
				jdbcType="VARCHAR" />
		<result column="instockstuff" property="instockstuff" jdbcType="VARCHAR" />
		<result column="parklot" property="parklot" jdbcType="VARCHAR" />
		<result column="stockstatus" property="stockstatus" jdbcType="TINYINT" />
		<result column="instocktime" property="instocktime" jdbcType="TIMESTAMP" />
		<result column="pledge_type" property="pledge_type" jdbcType="VARCHAR" />
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="ID_" property="taskId" jdbcType="VARCHAR"/>
		<result column="TASK_DEF_KEY_" property="taskDefKey" jdbcType="VARCHAR"/>
	</resultMap>
	<!-- 出库List查询用字段 -->
	<resultMap id="ResultMapOfOutCarStock" type="com.utonw.dealer.api.entity.erp.CarOutStock">
		<result column="orderid" property="orderid" jdbcType="VARCHAR" />
		<result column="customer_name" property="customer_name"
				jdbcType="VARCHAR" />
		<result column="stockobjectnumber" property="stockobjectnumber"
				jdbcType="VARCHAR" />
		<result column="outstockstuff" property="outstockstuff"
				jdbcType="VARCHAR" />
		<result column="parklot" property="parklot" jdbcType="VARCHAR" />
		<result column="stockstatus" property="stockstatus" jdbcType="TINYINT" />
		<result column="outstocktime" property="outstocktime" jdbcType="TIMESTAMP" />
		<result column="pledge_type" property="pledge_type" jdbcType="VARCHAR" />
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="customer_id" property="customerId" jdbcType="VARCHAR" />
	</resultMap>
	<!-- 出库List查询用字段 -->
	<resultMap id="ResultMapOfCarOutStock" type="com.utonw.dealer.api.entity.erp.CarStock">
		<result column="orderid" property="orderid" jdbcType="VARCHAR" />
		<result column="customer_name" property="customer_name"
				jdbcType="VARCHAR" />
		<result column="stockobjectnumber" property="stockobjectnumber"
				jdbcType="VARCHAR" />
		<result column="instockstuff" property="instockstuff" jdbcType="VARCHAR" />
		<result column="parklot" property="parklot" jdbcType="VARCHAR" />
		<result column="stockstatus" property="stockstatus" jdbcType="TINYINT" />
		<result column="instocktime" property="instocktime" jdbcType="TIMESTAMP" />
		<result column="pledge_type" property="pledge_type" jdbcType="VARCHAR" />
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
	</resultMap>
	<!-- 车辆入库用信息查询 -->
	<resultMap id="ResultMapOfCarInfoOfStock" type="com.utonw.dealer.api.entity.erp.CarStockInfo">
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="pledge_type" property="pledge_type" jdbcType="VARCHAR" />
		<result column="orderid" property="orderid" jdbcType="VARCHAR" />
		<result column="customer_name" property="customer_name"
				jdbcType="VARCHAR" />
		<result column="stockobjectnumber" property="stockobjectnumber"
				jdbcType="VARCHAR" />
		<result column="instockstuff" property="instockstuff" jdbcType="VARCHAR" />
		<result column="parklot" property="parklot" jdbcType="VARCHAR" />
		<result column="stockstatus" property="stockstatus" jdbcType="TINYINT" />
		<result column="instocktime" property="instocktime" jdbcType="TIMESTAMP" />
		<result column="vehicle_no" property="vehicle_no" jdbcType="VARCHAR" />
		<result column="vehicleModels" property="vehicleModels"
				jdbcType="VARCHAR" />
		<result column="color" property="color" jdbcType="VARCHAR" />
		<result column="mileaged" property="mileaged" jdbcType="VARCHAR" />
		<result column="steeringlocknumber" property="steeringlocknumber"
				jdbcType="VARCHAR" />
		<result column="wheellocknumber" property="wheellocknumber"
				jdbcType="VARCHAR" />
		<result column="parkspace" property="parkspace" jdbcType="VARCHAR" />
		<result column="instockparkerstuff" property="instockparkerstuff"
				jdbcType="VARCHAR" />
		<result column="outstocktime" property="outstocktime" jdbcType="TIMESTAMP" />
		<result column="outstockstuff" property="outstockstuff"
				jdbcType="VARCHAR" />
		<result column="outstockparkerstuff" property="outstockparkerstuff"
				jdbcType="VARCHAR" />
		<result column="reviewconclusion_instock" property="reviewconclusion_instock"
				jdbcType="VARCHAR" />
		<result column="remark_instoke" property="remark_instoke"
				jdbcType="VARCHAR" />
		<result column="reviewconclusion_outstock" property="reviewconclusion_outstock"
				jdbcType="VARCHAR" />
		<result column="remark_outstoke" property="remark_outstoke"
				jdbcType="VARCHAR" />
	</resultMap>

	<!-- 收入信息查询结果 -->
	<resultMap id="ResultMapOfIncomeInfo" type="com.utonw.dealer.api.entity.erp.IncomeInfo">
		<result column="orderid" property="orderid" jdbcType="VARCHAR" />
		<result column="account_name" property="account_name" jdbcType="VARCHAR" />
		<result column="loan_money" property="loan_money" jdbcType="DECIMAL" />
		<result column="loan_limit_time" property="loan_limit_time"
				jdbcType="INTEGER" />
		<result column="ended_at" property="ended_at" jdbcType="TIMESTAMP" />
		<result column="cur_period" property="cur_period" jdbcType="DECIMAL" />
		<result column="cur_repaycaptialsum" property="cur_repaycaptialsum"
				jdbcType="DECIMAL" />
		<result column="cur_repayinterestsum" property="cur_repayinterestsum"
				jdbcType="DECIMAL" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="is_important" property="is_important" jdbcType="DECIMAL" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
			   type="com.utonw.dealer.api.entity.erp.LoanInfoWithBLOBs">

		<result column="host_opinion" jdbcType="LONGVARCHAR" property="hostOpinion" />
		<result column="assisted_opinion" jdbcType="LONGVARCHAR"
				property="assistedOpinion" />
		<result column="remark" jdbcType="LONGVARCHAR" property="remark" />
		<result column="review_by" jdbcType="VARCHAR" property="reviewedBy" />
	</resultMap>

	<resultMap extends="ResultMapWithBLOBs" id="endLoanResultMap"
			   type="com.utonw.dealer.api.vo.EndedLoan">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		<result column="deptName" jdbcType="VARCHAR" property="deptName" />
		<result column="companyName" jdbcType="VARCHAR" property="companyName" />
		<association property="customerRegisterInfo" column="customerId"
					 javaType="com.utonw.dealer.api.entity.erp.CustomerRegisterInfo">
			<id column="customerId" jdbcType="VARCHAR" property="uuid" />
			<result column="customer_name" jdbcType="VARCHAR" property="customerName" />
			<result column="id_card" jdbcType="VARCHAR" property="idCard" />
			<result column="mobile" jdbcType="VARCHAR" property="mobile" />
			<result column="age" jdbcType="INTEGER" property="age" />
			<result column="sex" jdbcType="VARCHAR" property="sex" />
			<result column="education" jdbcType="VARCHAR" property="education" />
			<result column="marital_status" jdbcType="VARCHAR" property="maritalStatus" />
			<result column="register_status" jdbcType="VARCHAR" property="registerStatus" />
			<result column="house" jdbcType="VARCHAR" property="house" />
			<result column="rental" jdbcType="DECIMAL" property="rental" />
			<result column="live_number" jdbcType="INTEGER" property="liveNumber" />
			<result column="koseki_address" jdbcType="VARCHAR" property="kosekiAddress" />
			<result column="live_address" jdbcType="VARCHAR" property="liveAddress" />
			<result column="create_cm_id" jdbcType="VARCHAR" property="createCmId" />
			<result column="responsible_cm_id" jdbcType="VARCHAR"
					property="responsibleCmId" />
			<result column="dept_id" jdbcType="INTEGER" property="deptId" />
			<result column="company_id" jdbcType="INTEGER" property="companyId" />
			<result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
			<result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
			<result column="credit_card_bankname" jdbcType="VARCHAR"
					property="creditCardBankName" />
			<result column="credit_card" jdbcType="VARCHAR" property="creditCard" />
			<result column="credit_card_num" jdbcType="INTEGER" property="creditCardNum" />
			<result column="credit_card_quota" jdbcType="VARCHAR"
					property="creditCardQuota" />

		</association>

		<association property="guaranteeEvaluateInfo" column="guaranteeId"
					 javaType="com.utonw.dealer.api.entity.erp.GuaranteeEvaluateInfo">
			<id column="guaranteeId" jdbcType="INTEGER" property="id" />
			<result column="loan_id" jdbcType="VARCHAR" property="loanId" />
			<result column="vehicle_brand" jdbcType="VARCHAR" property="vehicleBrand" />
			<result column="vehicle_no" jdbcType="VARCHAR" property="vehicleNo" />
			<result column="mileaged" jdbcType="VARCHAR" property="mileaged" />
			<result column="purchase_date" jdbcType="TIMESTAMP" property="purchaseDate" />
			<result column="vehicle_identification" jdbcType="VARCHAR"
					property="vehicleIdentification" />
			<result column="engine_no" jdbcType="VARCHAR" property="engineNo" />
			<result column="transmission" jdbcType="VARCHAR" property="transmission" />
			<result column="is_examined" jdbcType="VARCHAR" property="isExamined" />
			<result column="is_insure" jdbcType="VARCHAR" property="isInsure" />
			<result column="is_province" jdbcType="VARCHAR" property="isProvince" />
			<result column="indoor" jdbcType="VARCHAR" property="indoor" />
			<result column="configuration" jdbcType="VARCHAR" property="configuration" />
			<result column="color" jdbcType="VARCHAR" property="color" />
			<result column="tire" jdbcType="VARCHAR" property="tire" />
			<result column="displacement" jdbcType="VARCHAR" property="displacement" />
			<result column="tool" jdbcType="VARCHAR" property="tool" />
			<result column="dark_locks" jdbcType="VARCHAR" property="darkLocks" />
			<result column="dark_locks_position" jdbcType="VARCHAR"
					property="darkLocksPosition" />
			<result column="engine" jdbcType="VARCHAR" property="engine" />
			<result column="price" jdbcType="DECIMAL" property="price" />
			<result column="buy_the_way" jdbcType="VARCHAR" property="buyTheWay" />
			<result column="evaluate_price" jdbcType="DECIMAL" property="evaluatePrice" />
			<result column="evaluate_conclusion" jdbcType="VARCHAR"
					property="evaluateConclusion" />
			<result column="evaluateBy" jdbcType="VARCHAR" property="evaluateby" />
			<result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
			<result column="updatedBy" jdbcType="VARCHAR" property="updatedby" />
			<result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
			<result column="towStatus" jdbcType="VARCHAR" property="towStatus" />
			<result column="saleMoney" jdbcType="DECIMAL" property="saleMoney" />
			<result column="vehicleModels" jdbcType="VARCHAR" property="vehicleModels" />
			<result column="vehicleRegisterCode" jdbcType="VARCHAR" property="vehicleRegisterCode" />
		</association>

		<association property="user" column="responsibleUserId"
					 javaType="com.utonw.dealer.api.entity.erp.User">
			<id column="responsibleUserId" jdbcType="VARCHAR" property="uuid" />
			<result column="job_number" property="jobNumber" jdbcType="VARCHAR" />
			<result column="password" property="password" jdbcType="VARCHAR" />
			<result column="sex" property="sex" jdbcType="VARCHAR" />
			<result column="active_flg" property="activeFlg" jdbcType="INTEGER" />
			<result column="user_type" property="userType" jdbcType="VARCHAR" />
			<result column="company_id" property="companyId" jdbcType="INTEGER" />
			<result column="dept_id" property="deptId" jdbcType="INTEGER" />
			<result column="id_card" property="idCard" jdbcType="VARCHAR" />
			<result column="realname" property="realname" jdbcType="VARCHAR" />
			<result column="nickname" property="nickname" jdbcType="VARCHAR" />
			<result column="date_joined" property="dateJoined" jdbcType="DATE" />
			<result column="position" property="position" jdbcType="VARCHAR" />
			<result column="userMobile" property="mobile" jdbcType="VARCHAR" />
			<result column="email" property="email" jdbcType="VARCHAR" />
			<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
		</association>
	</resultMap>

	<!-- 动态查询所属公司 -->
	<resultMap id="queryCompanyInfo" type="com.utonw.dealer.api.entity.erp.Company_Simplification">
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
	</resultMap>

	<!-- 根据公司ID查询部门 -->
	<resultMap id="queryDeptInfo" type="com.utonw.dealer.api.entity.erp.Dept_Simplification">
		<result column="company_id" property="companyId" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
	</resultMap>

	<!-- 根据公司ID查询客户经理 -->
	<resultMap id="queryManagerName" type="com.utonw.dealer.api.entity.erp.User_Simplification">
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="realname" property="realName" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap type="com.utonw.dealer.api.entity.erp.LoanB2BInfo" id="loanB2BInfo">
		<result column="orderid" property="orderId" jdbcType="VARCHAR" />
		<result column="customer_name" property="customerName"
				jdbcType="VARCHAR" />
		<result column="loan_money" property="loanMoney" jdbcType="DECIMAL" />
		<result column="name" property="companyName" jdbcType="VARCHAR" />
		<result column="loan_status" property="loanStatus" jdbcType="VARCHAR" />
		<result column="isReminder" property="urgeRepayment" jdbcType="INTEGER" />
		<result column="period" property="period" jdbcType="INTEGER" />
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="customer_id" property="customerId" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap type="com.utonw.dealer.api.entity.erp.MainCount" id="mainCount">
		<result column="monthReality" property="monthReality" jdbcType="INTEGER"/>
		<result column="monthIncreased" property="monthIncreased" jdbcType="INTEGER"/>
	</resultMap>
	<resultMap id="loanInfoSumaryResultMap" type="com.utonw.dealer.api.entity.erp.loanInfoSumary">
		<result column="managerName" property="managerName" jdbcType="VARCHAR" />
		<result column="customerName" property="customerName" jdbcType="VARCHAR" />
		<result column="pledge_type" property="pledge_type" jdbcType="VARCHAR" />
		<result column="loan_status" property="loanStatus" jdbcType="VARCHAR" />
		<result column="repay_way" jdbcType="VARCHAR" property="repayWay" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="orderid" property="orderId" jdbcType="VARCHAR" />
		<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="teamLeader" property="teamLeader" jdbcType="VARCHAR" />
		<result column="assigner" property="assigner" jdbcType="VARCHAR" />
		<result column="workflowName" property="workflowName" jdbcType="VARCHAR" />
		<result column="is_important" property="isImportant" jdbcType="INTEGER" />
		<result column="loan_money" jdbcType="DECIMAL" property="loanMoney" />
		<result column="endLeader" property="endLeader" jdbcType="VARCHAR"/>
		<result column="is_ended" property="isEnded" jdbcType="BIT"/>
		<result column="customer_id" property="customerId" jdbcType="VARCHAR"/>
		<result column="contract_num" property="contractNum" jdbcType="VARCHAR"/>
	</resultMap>

	<resultMap id="afterStatusCount" type="com.utonw.dealer.api.entity.erp.AfterStatusCount">
		<result column="allCount" property="allCount" jdbcType="INTEGER"/>
		<result column="todayCount" property="todayCount" jdbcType="INTEGER"/>
		<result column="weekCount" property="weekCount" jdbcType="INTEGER"/>
		<result column="overdueCount" property="overdueCount" jdbcType="INTEGER"/>
	</resultMap>
	
	<resultMap id="selectOverdueList" type="com.utonw.dealer.api.entity.erp.OverdueList">
		<result column="customer_name" property="customerName" jdbcType="VARCHAR"/>
		<result column="repayTotal" property="repayTotal" jdbcType="DECIMAL"/>
		<result column="overdueDay" property="overdueDay" jdbcType="VARCHAR"/>
		<result column="realname" property="realName" jdbcType="VARCHAR"/>
		<result column="uuid" property="uuid" jdbcType="VARCHAR"/>
		<result column="customer_id" property="customerId" jdbcType="VARCHAR"/>
		<result column="loan_status" property="loanStatus" jdbcType="VARCHAR"/>
	</resultMap>

	<resultMap id="selectOverdueDaysAndCount" type="com.utonw.dealer.api.entity.erp.OverdueCountAndMoney">
		<result column="count" property="count" jdbcType="INTEGER"/>
		<result column="repayCapital" property="repayCapital" jdbcType="DECIMAL"/>
		<result column="type" property="type" jdbcType="VARCHAR"/>
	</resultMap>
	<!-- 爱车帮数据推送给平台-->
	<resultMap id="queryLoanerInformation" type="com.utonw.dealer.api.entity.erp.SendDateToPlatForm">
		<result column="real_name" property="real_name" jdbcType="VARCHAR"/>
		<result column="phone" property="phone" jdbcType="VARCHAR"/>	
		<result column="id_card" property="id_card" jdbcType="VARCHAR"/>
		<result column="borrow_time" property="borrow_time" jdbcType="INTEGER"/>
		<result column="borrow_apr" property="borrow_apr" jdbcType="INTEGER"/>	
		<result column="borrow_money" property="borrow_money" jdbcType="DECIMAL"/>
		<result column="borrow_style" property="borrow_style" jdbcType="INTEGER"/>
		<result column="receiptaccount_id_card" property="receiptaccount_id_card" jdbcType="VARCHAR"/>
		<result column="receiptaccount_real_name" property="receiptaccount_real_name" jdbcType="VARCHAR"/>
		<result column="car_brand" property="car_brand" jdbcType="VARCHAR"/>	
		<result column="car_version" property="car_version" jdbcType="VARCHAR"/>
		<result column="car_color" property="car_color" jdbcType="VARCHAR"/>
		<result column="car_displacement" property="car_displacement" jdbcType="VARCHAR"/>	
		<result column="car_km" property="car_km" jdbcType="VARCHAR"/>
		<result column="car_date" property="car_date" jdbcType="VARCHAR"/>
		<result column="car_evaluate" property="car_evaluate" jdbcType="VARCHAR"/>	
		<result column="car_assess" property="car_assess" jdbcType="VARCHAR"/>
		<result column="car_xsb" property="car_xsb" jdbcType="VARCHAR"/>
		<result column="car_card" property="car_card" jdbcType="VARCHAR"/>	
		<result column="car_dyht" property="car_dyht" jdbcType="VARCHAR"/>
		<result column="car_cciaa" property="car_cciaa" jdbcType="VARCHAR"/>
		<result column="car_key" property="car_key" jdbcType="VARCHAR"/>	
		<result column="car_wszm" property="car_wszm" jdbcType="VARCHAR"/>
		<result column="car_sali" property="car_sali" jdbcType="VARCHAR"/>
		<result column="car_syx" property="car_syx" jdbcType="VARCHAR"/>	
		<result column="car_invoice" property="car_invoice" jdbcType="VARCHAR"/>
		<collection ofType="com.utonw.dealer.api.entity.erp.CarImage" property="car_image_list">
			<result column="name" jdbcType="VARCHAR" property="name"/>
            <result column="url" jdbcType="VARCHAR" property="url"/>
		</collection>
	</resultMap>

	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		uuid, id, customer_id, id_card, mobile, loan_money, apply_money,
		loan_type, loan_status,
		loan_way, loan_purpose, repay_source,
		loan_rate, loan_limit_time,
		loan_limit_time_unit,
		repay_way,
		contract_num, pledge_num, guaranty_num, customer_account_num_id,
		customer_repayment_num_id,
		dept_id, company_id, is_ended, ended_at,
		is_destoryed, destoryed_at,
		is_extended,
		extend_time, extend_loan_id,
		first_repayment_at, withhold_money, is_chargedoff,
		chargedof_money,state,
		chargedoff_at, chargedoff_way, create_cm_id,
		responsible_cm_id, assisted_user_id,
		applyed_at, created_at, updatedBy,
		updated_at,processinsId,
		surplus_reimbursement_amount,pledge_type,
		depreciationFee, drunkDrive,
		cashdepositFee, certificatefee,
		orderid,parkCost,manageCost, plantype,
		buy_car_method,
		gpsPattern,loan_product,gpsCost
	</sql>
	<sql id="Blob_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		host_opinion, assisted_opinion, remark
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
			resultMap="ResultMapWithBLOBs">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from loan_info
		where uuid = #{uuid,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		delete from loan_info
		where uuid = #{uuid,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.utonw.dealer.api.entity.erp.LoanInfoWithBLOBs">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		insert into loan_info (uuid, id, customer_id,
		id_card, mobile,
		loan_money,
		apply_money, loan_type, loan_status,
		loan_way, loan_purpose,
		repay_source,
		loan_rate, loan_limit_time, loan_limit_time_unit,
		repay_way, contract_num, pledge_num,
		guaranty_num,
		customer_account_num_id, customer_repayment_num_id,
		dept_id,
		company_id, is_ended,
		ended_at, is_destoryed, destoryed_at,
		is_extended, extend_time, extend_loan_id,
		first_repayment_at,
		withhold_money, is_chargedoff,
		chargedof_money, chargedoff_at,
		chargedoff_way,
		create_cm_id, responsible_cm_id, assisted_user_id,
		applyed_at, created_at, updatedBy,
		updated_at, host_opinion,
		assisted_opinion,
		remark,processinsId,orderid,loan_product,gpsPattern,gpsCost)
		values
		(#{uuid,jdbcType=VARCHAR}, #{id,jdbcType=INTEGER},
		#{customerId,jdbcType=VARCHAR},
		#{idCard,jdbcType=VARCHAR},
		#{mobile,jdbcType=VARCHAR}, #{loanMoney,jdbcType=DECIMAL},
		#{applyMoney,jdbcType=DECIMAL}, #{loanType,jdbcType=VARCHAR},
		#{loanStatus,jdbcType=VARCHAR},
		#{loanWay,jdbcType=VARCHAR},
		#{loanPurpose,jdbcType=VARCHAR},
		#{repaySource,jdbcType=VARCHAR},
		#{loanRate,jdbcType=DECIMAL}, #{loanLimitTime,jdbcType=INTEGER},
		#{loanLimitTimeUnit,jdbcType=VARCHAR},
		#{repayWay,jdbcType=VARCHAR},
		#{contractNum,jdbcType=VARCHAR},
		#{pledgeNum,jdbcType=VARCHAR},
		#{guarantyNum,jdbcType=VARCHAR},
		#{customerAccountNumId,jdbcType=INTEGER},
		#{processinsId,jdbcType=VARCHAR}, #{orderid,jdbcType=VARCHAR},
		#{loan_product,jdbcType=VARCHAR},
		#{gpsPattern,jdbcType=VARCHAR},
		#{gpsCost,jdbcType=DECIMAL})

	</insert>
	<insert id="insertSelective" parameterType="com.utonw.dealer.api.entity.erp.LoanInfoWithBLOBs">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		insert into loan_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uuid != null">
				uuid,
			</if>
			<if test="id != null">
				id,
			</if>
			<if test="customerId != null">
				customer_id,
			</if>
			<if test="idCard != null">
				id_card,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="loanMoney != null">
				loan_money,
			</if>
			<if test="applyMoney != null">
				apply_money,
			</if>
			<if test="loanType != null">
				loan_type,
			</if>
			<if test="loanStatus != null">
				loan_status,
			</if>
			<if test="loanWay != null">
				loan_way,
			</if>
			<if test="loanPurpose != null">
				loan_purpose,
			</if>
			<if test="repaySource != null">
				repay_source,
			</if>
			<if test="loanRate != null">
				loan_rate,
			</if>
			<if test="loanLimitTime != null">
				loan_limit_time,
			</if>
			<if test="loanLimitTimeUnit != null">
				loan_limit_time_unit,
			</if>
			<if test="repayWay != null">
				repay_way,
			</if>
			<if test="contractNum != null">
				contract_num,
			</if>
			<if test="pledgeNum != null">
				pledge_num,
			</if>
			<if test="guarantyNum != null">
				guaranty_num,
			</if>
			<if test="customerAccountNumId != null">
				customer_account_num_id,
			</if>
			<if test="customerRepaymentNumId != null">
				customer_repayment_num_id,
			</if>
			<if test="deptId != null">
				dept_id,
			</if>
			<if test="companyId != null">
				company_id,
			</if>
			<if test="isEnded != null">
				is_ended,
			</if>
			<if test="endedAt != null">
				ended_at,
			</if>
			<if test="isDestoryed != null">
				is_destoryed,
			</if>
			<if test="destoryedAt != null">
				destoryed_at,
			</if>
			<if test="isExtended != null">
				is_extended,
			</if>
			<if test="extendTime != null">
				extend_time,
			</if>
			<if test="extendLoanId != null">
				extend_loan_id,
			</if>
			<if test="firstRepaymentAt != null">
				first_repayment_at,
			</if>
			<if test="withholdMoney != null">
				withhold_money,
			</if>
			<if test="isChargedoff != null">
				is_chargedoff,
			</if>
			<if test="chargedofMoney != null">
				chargedof_money,
			</if>
			<if test="chargedoffAt != null">
				chargedoff_at,
			</if>
			<if test="chargedoffWay != null">
				chargedoff_way,
			</if>
			<if test="createCmId != null">
				create_cm_id,
			</if>
			<if test="responsibleCmId != null">
				responsible_cm_id,
			</if>
			<if test="assistedUserId != null">
				assisted_user_id,
			</if>
			<if test="applyedAt != null">
				applyed_at,
			</if>
			<if test="createdAt != null">
				created_at,
			</if>
			<if test="updatedby != null">
				updatedBy,
			</if>
			<if test="updatedAt != null">
				updated_at,
			</if>
			<if test="depreciationFee != null">
				depreciationFee,
			</if>
			<if test="drunkDrive != null">
				drunkDrive,
			</if>
			<if test="cashdepositFee != null">
				cashdepositFee,
			</if>
			<if test="certificatefee != null">
				certificatefee,
			</if>
			<if test="hostOpinion != null">
				host_opinion,
			</if>
			<if test="assistedOpinion != null">
				assisted_opinion,
			</if>
			<if test="orderid != null">
				orderid,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="processinsId != null">
				processinsId,
			</if>
			<if test="pledgeType != null">
				pledge_type,
			</if>
			<if test="parkCost != null">
				parkCost,
			</if>
			<if test="teamLeaderId != null">
				teamleader_id,
			</if>
			<if test="manageCost != null">
				manageCost,
			</if>
			<if test="plantype != null">
				plantype,
			</if>
			<if test="buy_car_method != null">
				buy_car_method,
			</if>
			<if test="gpsPattern != null">
				gpsPattern,
			</if>
			<if test="loan_product != null">
				loan_product,
			</if>
			<if test="gpsCost != null">
				gpsCost,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uuid != null">
				#{uuid,jdbcType=VARCHAR},
			</if>
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="customerId != null">
				#{customerId,jdbcType=VARCHAR},
			</if>
			<if test="idCard != null">
				#{idCard,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="loanMoney != null">
				#{loanMoney,jdbcType=DECIMAL},
			</if>
			<if test="applyMoney != null">
				#{applyMoney,jdbcType=DECIMAL},
			</if>
			<if test="loanType != null">
				#{loanType,jdbcType=VARCHAR},
			</if>
			<if test="loanStatus != null">
				#{loanStatus,jdbcType=VARCHAR},
			</if>
			<if test="loanWay != null">
				#{loanWay,jdbcType=VARCHAR},
			</if>
			<if test="loanPurpose != null">
				#{loanPurpose,jdbcType=VARCHAR},
			</if>
			<if test="repaySource != null">
				#{repaySource,jdbcType=VARCHAR},
			</if>
			<if test="loanRate != null">
				#{loanRate,jdbcType=DECIMAL},
			</if>
			<if test="loanLimitTime != null">
				#{loanLimitTime,jdbcType=INTEGER},
			</if>
			<if test="loanLimitTimeUnit != null">
				#{loanLimitTimeUnit,jdbcType=VARCHAR},
			</if>
			<if test="repayWay != null">
				#{repayWay,jdbcType=VARCHAR},
			</if>
			<if test="contractNum != null">
				#{contractNum,jdbcType=VARCHAR},
			</if>
			<if test="pledgeNum != null">
				#{pledgeNum,jdbcType=VARCHAR},
			</if>
			<if test="guarantyNum != null">
				#{guarantyNum,jdbcType=VARCHAR},
			</if>
			<if test="customerAccountNumId != null">
				#{customerAccountNumId,jdbcType=INTEGER},
			</if>
			<if test="customerRepaymentNumId != null">
				#{customerRepaymentNumId,jdbcType=INTEGER},
			</if>
			<if test="deptId != null">
				#{deptId,jdbcType=INTEGER},
			</if>
			<if test="companyId != null">
				#{companyId,jdbcType=INTEGER},
			</if>
			<if test="isEnded != null">
				#{isEnded,jdbcType=BIT},
			</if>
			<if test="endedAt != null">
				#{endedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="isDestoryed != null">
				#{isDestoryed,jdbcType=BIT},
			</if>
			<if test="destoryedAt != null">
				#{destoryedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="isExtended != null">
				#{isExtended,jdbcType=BIT},
			</if>
			<if test="extendTime != null">
				#{extendTime,jdbcType=TIMESTAMP},
			</if>
			<if test="extendLoanId != null">
				#{extendLoanId,jdbcType=VARCHAR},
			</if>
			<if test="firstRepaymentAt != null">
				#{firstRepaymentAt,jdbcType=DATE},
			</if>
			<if test="withholdMoney != null">
				#{withholdMoney,jdbcType=DECIMAL},
			</if>
			<if test="isChargedoff != null">
				#{isChargedoff,jdbcType=BIT},
			</if>
			<if test="chargedofMoney != null">
				#{chargedofMoney,jdbcType=DECIMAL},
			</if>
			<if test="chargedoffAt != null">
				#{chargedoffAt,jdbcType=DATE},
			</if>
			<if test="chargedoffWay != null">
				#{chargedoffWay,jdbcType=VARCHAR},
			</if>
			<if test="createCmId != null">
				#{createCmId,jdbcType=VARCHAR},
			</if>
			<if test="responsibleCmId != null">
				#{responsibleCmId,jdbcType=VARCHAR},
			</if>
			<if test="assistedUserId != null">
				#{assistedUserId,jdbcType=VARCHAR},
			</if>
			<if test="applyedAt != null">
				#{applyedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="createdAt != null">
				#{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedby != null">
				#{updatedby,jdbcType=VARCHAR},
			</if>
			<if test="updatedAt != null">
				#{updatedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="depreciationFee != null">
				#{depreciationFee,jdbcType=DECIMAL},
			</if>
			<if test="drunkDrive != null">
				#{drunkDrive,jdbcType=DECIMAL},
			</if>
			<if test="cashdepositFee != null">
				#{cashdepositFee,jdbcType=DECIMAL},
			</if>
			<if test="certificatefee != null">
				#{certificatefee,jdbcType=DECIMAL},
			</if>
			<if test="hostOpinion != null">
				#{hostOpinion,jdbcType=LONGVARCHAR},
			</if>
			<if test="assistedOpinion != null">
				#{assistedOpinion,jdbcType=LONGVARCHAR},
			</if>
			<if test="orderid != null">
				#{orderid,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=LONGVARCHAR},
			</if>
			<if test="processinsId != null">
				#{processinsId,jdbcType=VARCHAR},
			</if>
			<if test="pledgeType != null">
				#{pledgeType,jdbcType=VARCHAR},
			</if>
			<if test="parkCost != null">
				#{parkCost,jdbcType=DECIMAL},
			</if>
			<if test="teamLeaderId != null">
				#{teamLeaderId,jdbcType=VARCHAR},
			</if>
			<if test="manageCost != null">
				#{manageCost,jdbcType=DECIMAL},
			</if>
			<if test="plantype != null">
				#{plantype,jdbcType=TINYINT},
			</if>
			<if test="buy_car_method != null">
				#{buy_car_method,jdbcType=TINYINT},
			</if>
			<if test="gpsPattern != null">
				#{gpsPattern,jdbcType=VARCHAR},
			</if>
			<if test="loan_product != null">
				#{loan_product,jdbcType=VARCHAR},
			</if>
			<if test="gpsCost != null">
				#{gpsCost,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.utonw.dealer.api.entity.erp.LoanInfoWithBLOBs">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		update loan_info
		<set>
			<if test="id != null">
				id = #{id,jdbcType=INTEGER},
			</if>
			<if test="customerId != null">
				customer_id = #{customerId,jdbcType=VARCHAR},
			</if>
			<if test="idCard != null">
				id_card = #{idCard,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="loanMoney != null">
				loan_money = #{loanMoney,jdbcType=DECIMAL},
			</if>
			<if test="applyMoney != null">
				apply_money = #{applyMoney,jdbcType=DECIMAL},
			</if>
			<if test="loanType != null">
				loan_type = #{loanType,jdbcType=VARCHAR},
			</if>
			<if test="loanStatus != null">
				loan_status = #{loanStatus,jdbcType=VARCHAR},
			</if>
			<if test="loanWay != null">
				loan_way = #{loanWay,jdbcType=VARCHAR},
			</if>
			<if test="loanPurpose != null">
				loan_purpose = #{loanPurpose,jdbcType=VARCHAR},
			</if>
			<if test="repaySource != null">
				repay_source = #{repaySource,jdbcType=VARCHAR},
			</if>
			<if test="loanRate != null">
				loan_rate = #{loanRate,jdbcType=DECIMAL},
			</if>
			<if test="loanLimitTime != null">
				loan_limit_time = #{loanLimitTime,jdbcType=INTEGER},
			</if>
			<if test="loanLimitTimeUnit != null">
				loan_limit_time_unit =
				#{loanLimitTimeUnit,jdbcType=VARCHAR},
			</if>
			<if test="repayWay != null">
				repay_way = #{repayWay,jdbcType=VARCHAR},
			</if>
			<if test="contractNum != null">
				contract_num = #{contractNum,jdbcType=VARCHAR},
			</if>
			<if test="pledgeNum != null">
				pledge_num = #{pledgeNum,jdbcType=VARCHAR},
			</if>
			<if test="guarantyNum != null">
				guaranty_num = #{guarantyNum,jdbcType=VARCHAR},
			</if>
			<if test="customerAccountNumId != null">
				customer_account_num_id =
				#{customerAccountNumId,jdbcType=INTEGER},
			</if>
			<if test="customerRepaymentNumId != null">
				customer_repayment_num_id =
				#{customerRepaymentNumId,jdbcType=INTEGER},
			</if>
			<if test="deptId != null">
				dept_id = #{deptId,jdbcType=INTEGER},
			</if>
			<if test="companyId != null">
				company_id = #{companyId,jdbcType=INTEGER},
			</if>
			<if test="isEnded != null">
				is_ended = #{isEnded,jdbcType=BIT},
			</if>
			<if test="endedAt != null">
				ended_at = #{endedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="isDestoryed != null">
				is_destoryed = #{isDestoryed,jdbcType=BIT},
			</if>
			<if test="destoryedAt != null">
				destoryed_at = #{destoryedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="isExtended != null">
				is_extended = #{isExtended,jdbcType=BIT},
			</if>
			<if test="extendTime != null">
				extend_time = #{extendTime,jdbcType=TIMESTAMP},
			</if>
			<if test="extendLoanId != null">
				extend_loan_id = #{extendLoanId,jdbcType=VARCHAR},
			</if>
			<if test="firstRepaymentAt != null">
				first_repayment_at = #{firstRepaymentAt,jdbcType=DATE},
			</if>
			<if test="withholdMoney != null">
				withhold_money = #{withholdMoney,jdbcType=DECIMAL},
			</if>
			<if test="isChargedoff != null">
				is_chargedoff = #{isChargedoff,jdbcType=BIT},
			</if>
			<if test="chargedofMoney != null">
				chargedof_money = #{chargedofMoney,jdbcType=DECIMAL},
			</if>
			<if test="chargedoffAt != null">
				chargedoff_at = #{chargedoffAt,jdbcType=DATE},
			</if>
			<if test="chargedoffWay != null">
				chargedoff_way = #{chargedoffWay,jdbcType=VARCHAR},
			</if>
			<if test="createCmId != null">
				create_cm_id = #{createCmId,jdbcType=VARCHAR},
			</if>
			<if test="responsibleCmId != null">
				responsible_cm_id = #{responsibleCmId,jdbcType=VARCHAR},
			</if>
			<if test="assistedUserId != null">
				assisted_user_id = #{assistedUserId,jdbcType=VARCHAR},
			</if>
			<if test="applyedAt != null">
				applyed_at = #{applyedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="createdAt != null">
				created_at = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedby != null">
				updatedBy = #{updatedby,jdbcType=VARCHAR},
			</if>
			<if test="updatedAt != null">
				updated_at = #{updatedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="depreciationFee != null">
				depreciationFee = #{depreciationFee,jdbcType=DECIMAL},
			</if>
			<if test="drunkDrive != null">
				drunkDrive = #{drunkDrive,jdbcType=DECIMAL},
			</if>
			<if test="cashdepositFee != null">
				cashdepositFee = #{cashdepositFee,jdbcType=DECIMAL},
			</if>
			<if test="certificatefee != null">
				certificatefee = #{certificatefee,jdbcType=DECIMAL},
			</if>
			<if test="hostOpinion != null">
				host_opinion = #{hostOpinion,jdbcType=LONGVARCHAR},
			</if>
			<if test="assistedOpinion != null">
				assisted_opinion =
				#{assistedOpinion,jdbcType=LONGVARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=LONGVARCHAR},
			</if>
			<if test="state !=null">
				state = #{state,jdbcType=VARCHAR},
			</if>
			<if test="parkCost !=null">
				parkCost = #{parkCost,jdbcType=DECIMAL},
			</if>
			<if test="manageCost !=null">
				manageCost = #{manageCost,jdbcType=DECIMAL},
			</if>
			<if test="processinsId != null">
				processinsId = #{processinsId,jdbcType=VARCHAR},
			</if>
			<if test="surplusReimbursementAmount != null">
				surplus_reimbursement_amount =
				#{surplusReimbursementAmount,jdbcType=VARCHAR},
			</if>
			<if test="pledgeType != null">
				pledge_type = #{pledgeType,jdbcType=VARCHAR},
			</if>
			<if test="plantype != null">
				plantype = #{plantype,jdbcType=TINYINT},
			</if>
			<if test="buy_car_method != null">
				buy_car_method = #{buy_car_method,jdbcType=TINYINT},
			</if>
			<if test="gpsPattern != null">
				gpsPattern = #{gpsPattern,jdbcType=VARCHAR},
			</if>
			<if test="loan_product != null">
				loan_product = #{loan_product,jdbcType=VARCHAR},
			</if>
			<if test="gpsCost != null">
				gpsCost = #{gpsCost,jdbcType=VARCHAR},
			</if>
		</set>
		where uuid = #{uuid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.utonw.dealer.api.entity.erp.LoanInfoWithBLOBs">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		update loan_info
		set id = #{id,jdbcType=INTEGER},
		customer_id =
		#{customerId,jdbcType=VARCHAR},
		id_card = #{idCard,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=VARCHAR},
		loan_money =
		#{loanMoney,jdbcType=DECIMAL},
		apply_money =
		#{applyMoney,jdbcType=DECIMAL},
		loan_type =
		#{loanType,jdbcType=VARCHAR},
		loan_status =
		#{loanStatus,jdbcType=VARCHAR},
		loan_way = #{loanWay,jdbcType=VARCHAR},
		loan_purpose = #{loanPurpose,jdbcType=VARCHAR},
		repay_source =
		#{repaySource,jdbcType=VARCHAR},
		loan_rate =
		#{loanRate,jdbcType=DECIMAL},
		loan_limit_time =
		#{loanLimitTime,jdbcType=INTEGER},
		loan_limit_time_unit =
		#{loanLimitTimeUnit,jdbcType=VARCHAR},
		repay_way =
		#{repayWay,jdbcType=VARCHAR},
		contract_num =
		#{contractNum,jdbcType=VARCHAR},
		pledge_num =
		#{pledgeNum,jdbcType=VARCHAR},
		guaranty_num =
		#{guarantyNum,jdbcType=VARCHAR},
		customer_account_num_id =
		#{customerAccountNumId,jdbcType=INTEGER},
		customer_repayment_num_id =
		#{customerRepaymentNumId,jdbcType=INTEGER},
		dept_id =
		#{deptId,jdbcType=INTEGER},
		company_id = #{companyId,jdbcType=INTEGER},
		is_ended = #{isEnded,jdbcType=BIT},
		ended_at =
		#{endedAt,jdbcType=TIMESTAMP},
		is_destoryed =
		#{isDestoryed,jdbcType=BIT},
		destoryed_at =
		#{destoryedAt,jdbcType=TIMESTAMP},
		is_extended =
		#{isExtended,jdbcType=BIT},
		extend_time =
		#{extendTime,jdbcType=TIMESTAMP},
		extend_loan_id =
		#{extendLoanId,jdbcType=VARCHAR},
		first_repayment_at =
		#{firstRepaymentAt,jdbcType=DATE},
		withhold_money =
		#{withholdMoney,jdbcType=DECIMAL},
		is_chargedoff =
		#{isChargedoff,jdbcType=BIT},
		chargedof_money =
		#{chargedofMoney,jdbcType=DECIMAL},
		chargedoff_at =
		#{chargedoffAt,jdbcType=DATE},
		chargedoff_way =
		#{chargedoffWay,jdbcType=VARCHAR},
		create_cm_id =
		#{createCmId,jdbcType=VARCHAR},
		responsible_cm_id =
		#{responsibleCmId,jdbcType=VARCHAR},
		assisted_user_id =
		#{assistedUserId,jdbcType=VARCHAR},
		applyed_at =
		#{applyedAt,jdbcType=TIMESTAMP},
		created_at =
		#{createdAt,jdbcType=TIMESTAMP},
		updatedBy =
		#{updatedby,jdbcType=VARCHAR},
		updated_at =
		#{updatedAt,jdbcType=TIMESTAMP},
		depreciationFee =
		#{depreciationFee,jdbcType=DECIMAL},
		drunkDrive =
		#{drunkDrive,jdbcType=DECIMAL},
		cashdepositFee =
		#{cashdepositFee,jdbcType=DECIMAL},
		certificatefee =
		#{certificatefee,jdbcType=DECIMAL},
		host_opinion =
		#{hostOpinion,jdbcType=LONGVARCHAR},
		assisted_opinion =
		#{assistedOpinion,jdbcType=LONGVARCHAR},
		remark =
		#{remark,jdbcType=LONGVARCHAR},
		processinsId =
		#{processinsId,jdbcType=VARCHAR},
		parkCost =
		#{parkCost,jdbcType=DECIMAL},
		manageCost =
		#{manageCost,jdbcType=DECIMAL},
		gpsPattern =
		#{gpsPattern,jdbcType=VARCHAR},
		loan_product =
		#{loan_product,jdbcType=VARCHAR},
		gpsCost =
		#{gpsCost,jdbcType=DECIMAL}
		where uuid = #{uuid,jdbcType=VARCHAR}
	</update>


	<update id="updateByPrimaryKey" parameterType="com.utonw.dealer.api.entity.erp.LoanInfo">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		update loan_info
		set id = #{id,jdbcType=INTEGER},
		customer_id =
		#{customerId,jdbcType=VARCHAR},
		id_card = #{idCard,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=VARCHAR},
		loan_money =
		#{loanMoney,jdbcType=DECIMAL},
		apply_money =
		#{applyMoney,jdbcType=DECIMAL},
		loan_type =
		#{loanType,jdbcType=VARCHAR},
		loan_status =
		#{loanStatus,jdbcType=VARCHAR},
		loan_way = #{loanWay,jdbcType=VARCHAR},
		loan_purpose = #{loanPurpose,jdbcType=VARCHAR},
		repay_source =
		#{repaySource,jdbcType=VARCHAR},
		loan_rate =
		#{loanRate,jdbcType=DECIMAL},
		loan_limit_time =
		#{loanLimitTime,jdbcType=INTEGER},
		loan_limit_time_unit =
		#{loanLimitTimeUnit,jdbcType=VARCHAR},
		repay_way =
		#{repayWay,jdbcType=VARCHAR},
		contract_num =
		#{contractNum,jdbcType=VARCHAR},
		pledge_num =
		#{pledgeNum,jdbcType=VARCHAR},
		guaranty_num =
		#{guarantyNum,jdbcType=VARCHAR},
		customer_account_num_id =
		#{customerAccountNumId,jdbcType=INTEGER},
		customer_repayment_num_id =
		#{customerRepaymentNumId,jdbcType=INTEGER},
		dept_id =
		#{deptId,jdbcType=INTEGER},
		company_id = #{companyId,jdbcType=INTEGER},
		is_ended = #{isEnded,jdbcType=BIT},
		ended_at =
		#{endedAt,jdbcType=TIMESTAMP},
		is_destoryed =
		#{isDestoryed,jdbcType=BIT},
		destoryed_at =
		#{destoryedAt,jdbcType=TIMESTAMP},
		is_extended =
		#{isExtended,jdbcType=BIT},
		extend_time =
		#{extendTime,jdbcType=TIMESTAMP},
		extend_loan_id =
		#{extendLoanId,jdbcType=VARCHAR},
		first_repayment_at =
		#{firstRepaymentAt,jdbcType=DATE},
		withhold_money =
		#{withholdMoney,jdbcType=DECIMAL},
		is_chargedoff =
		#{isChargedoff,jdbcType=BIT},
		chargedof_money =
		#{chargedofMoney,jdbcType=DECIMAL},
		chargedoff_at =
		#{chargedoffAt,jdbcType=DATE},
		chargedoff_way =
		#{chargedoffWay,jdbcType=VARCHAR},
		create_cm_id =
		#{createCmId,jdbcType=VARCHAR},
		responsible_cm_id =
		#{responsibleCmId,jdbcType=VARCHAR},
		assisted_user_id =
		#{assistedUserId,jdbcType=VARCHAR},
		applyed_at =
		#{applyedAt,jdbcType=TIMESTAMP},
		created_at =
		#{createdAt,jdbcType=TIMESTAMP},
		updatedBy =
		#{updatedby,jdbcType=VARCHAR},
		updated_at =
		#{updatedAt,jdbcType=TIMESTAMP},
		processinsId =
		#{processinsId,jdbcType=VARCHAR},
		depreciationFee =
		#{depreciationFee,jdbcType=DECIMAL},
		drunkDrive =
		#{drunkDrive,jdbcType=DECIMAL},
		cashdepositFee =
		#{cashdepositFee,jdbcType=DECIMAL},
		certificatefee =
		#{certificatefee,jdbcType=DECIMAL},
		plantype =
		#{plantype,jdbcType=TINYINT},
		buy_car_method =
		#{buy_car_method,jdbcType=TINYINT},
		gpsPattern =
		#{gpsPattern,jdbcType=VARCHAR},
		loan_product =
		#{loan_product,jdbcType=VARCHAR},
		gpsCost =
		#{gpsCost,jdbcType=DECIMAL}
		where uuid = #{uuid,jdbcType=VARCHAR}
	</update>

	<!-- 关联查询出借款信息 -->
	<resultMap id="selectJoinByPrimaryKeyResultMap" extends="ResultMapWithBLOBs"
			   type="com.utonw.dealer.api.entity.erp.LoanInfoWithBLOBs">

		<association property="customerRegisterInfo" column="customer_id"
					 javaType="com.utonw.dealer.api.entity.erp.CustomerRegisterInfo">
			<result column="customer_name" property="customerName"
					jdbcType="VARCHAR" />
			<result column="sex" property="sex" jdbcType="VARCHAR" />
			<result column="is_important" property="isImportant" jdbcType="INTEGER" />
			<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		</association>

		<association property="customerAccountInfo" column="customer_id"
					 javaType="com.utonw.dealer.api.entity.erp.CustomerAccountInfo">
			<result column="account_name" property="accountName" jdbcType="VARCHAR" />
			<result column="bank_name" property="bankName" jdbcType="VARCHAR" />
			<result column="account_num" property="accountNum" jdbcType="VARCHAR" />
		</association>

		<association property="guaranteeEvaluateInfo" column="loan_id"
					 javaType="com.utonw.dealer.api.entity.erp.GuaranteeEvaluateInfo">
			<result column="loan_id" jdbcType="VARCHAR" property="loanId" />
			<result column="vehicle_brand" jdbcType="VARCHAR" property="vehicleBrand" />
			<result column="vehicle_no" jdbcType="VARCHAR" property="vehicleNo" />
			<result column="mileaged" jdbcType="VARCHAR" property="mileaged" />
			<result column="purchase_date" jdbcType="TIMESTAMP" property="purchaseDate" />
			<result column="vehicle_identification" jdbcType="VARCHAR"
					property="vehicleIdentification" />
			<result column="engine_no" jdbcType="VARCHAR" property="engineNo" />
			<result column="transmission" jdbcType="VARCHAR" property="transmission" />
			<result column="is_examined" jdbcType="VARCHAR" property="isExamined" />
			<result column="is_insure" jdbcType="VARCHAR" property="isInsure" />
			<result column="is_province" jdbcType="VARCHAR" property="isProvince" />
			<result column="indoor" jdbcType="VARCHAR" property="indoor" />
			<result column="configuration" jdbcType="VARCHAR" property="configuration" />
			<result column="color" jdbcType="VARCHAR" property="color" />
			<result column="tire" jdbcType="VARCHAR" property="tire" />
			<result column="displacement" jdbcType="VARCHAR" property="displacement" />
			<result column="tool" jdbcType="VARCHAR" property="tool" />
			<result column="dark_locks" jdbcType="VARCHAR" property="darkLocks" />
			<result column="dark_locks_position" jdbcType="VARCHAR"
					property="darkLocksPosition" />
			<result column="engine" jdbcType="VARCHAR" property="engine" />
			<result column="price" jdbcType="DECIMAL" property="price" />
			<result column="buy_the_way" jdbcType="VARCHAR" property="buyTheWay" />
			<result column="evaluate_price" jdbcType="DECIMAL" property="evaluatePrice" />
			<result column="evaluate_conclusion" jdbcType="VARCHAR"
					property="evaluateConclusion" />
			<result column="evaluateBy" jdbcType="VARCHAR" property="evaluateby" />
			<result column="towStatus" jdbcType="VARCHAR" property="towStatus" />
			<result column="vehicleModels" jdbcType="VARCHAR" property="vehicleModels" />
		</association>

		<association property="createBy" column="create_cm_id"
					 javaType="com.utonw.dealer.api.entity.erp.User">
			<result column="create_by" property="realname" jdbcType="VARCHAR" />
		</association>

		<association property="responsibleBy" column="responsible_cm_id"
					 javaType="com.utonw.dealer.api.entity.erp.User">
			<result column="responsible_by" property="realname" jdbcType="VARCHAR" />
		</association>

		<association property="principalName" column="principal_id"
					 javaType="com.utonw.dealer.api.entity.erp.User">
			<result column="principal_name" property="realname" jdbcType="VARCHAR" />
		</association>

		<association property="company" column="company_id"
					 javaType="com.utonw.dealer.api.entity.erp.Company">
			<result column="company_name" property="name" jdbcType="VARCHAR" />
		</association>

		<association property="dept" column="dept_id"
					 javaType="com.utonw.dealer.api.entity.erp.Dept">
			<result column="dept_name" property="name" jdbcType="VARCHAR" />
		</association>

		<association property="repayPlan" column="uuid"
					 javaType="com.utonw.dealer.api.entity.erp.RepayPlan">
			<result column="loanId" property="loanId" jdbcType="VARCHAR" />
		</association>

		<association property="repayPlanDetail" column="repayPlanId"
					 javaType="com.utonw.dealer.api.entity.erp.RepayPlanDetail">
			<result column="repayPeriod" property="repayPeriod" jdbcType="INTEGER" />
			<result column="repayDate" property="repayDate" jdbcType="DATE" />
			<result column="repayTotal" property="repayTotal" jdbcType="DECIMAL" />
		</association>

		<!-- <association property="loanReviewInfo" column="loan_id" -->
		<!-- javaType="com.utonw.dealer.api.entity.erp.LoanReviewInfo"> -->
		<!-- <result column="account_name" property="accountName" jdbcType="VARCHAR"/> -->
		<!-- <result column="bank_name" property="bankName" jdbcType="VARCHAR"/> -->
		<!-- <result column="account_num" property="accountNum" jdbcType="VARCHAR"/> -->
		<!-- </association> -->

	</resultMap>

	<resultMap id="loanContractVo" extends="ResultMapWithBLOBs"
			   type="com.utonw.dealer.api.entity.erp.LoanInfoWithBLOBs">

		<association property="customerRegisterInfo" column="customer_id"
					 javaType="com.utonw.dealer.api.entity.erp.CustomerRegisterInfo">
			<result column="customer_name" property="customerName"
					jdbcType="VARCHAR" />
			<result column="live_number" property="liveNumber" jdbcType="VARCHAR" />
			<result column="koseki_address" property="kosekiAddress"
					jdbcType="VARCHAR" />
			<result column="live_address" property="liveAddress" jdbcType="VARCHAR" />
		</association>

		<association property="customerAccountInfo" column="customer_id"
					 javaType="com.utonw.dealer.api.entity.erp.CustomerAccountInfo">
			<result column="account_name" property="accountName" jdbcType="VARCHAR" />
			<result column="bank_name" property="bankName" jdbcType="VARCHAR" />
			<result column="account_num" property="accountNum" jdbcType="VARCHAR" />

		</association>

		<association property="guaranteeEvaluateInfo" column="loan_id"
					 javaType="com.utonw.dealer.api.entity.erp.GuaranteeEvaluateInfo">
			<result column="vehicle_no" jdbcType="VARCHAR" property="vehicleNo" />
			<result column="vehicle_identification" jdbcType="VARCHAR"
					property="vehicleIdentification" />
			<result column="engine_no" jdbcType="VARCHAR" property="engineNo" />
			<result column="vehicle_brand" jdbcType="VARCHAR" property="vehicleBrand" />
			<result column="evaluate_price" jdbcType="DECIMAL" property="evaluatePrice" />
			<result column="vehicleModels" jdbcType="VARCHAR" property="vehicleModels" />
			<result column="color" jdbcType="VARCHAR" property="color" />
			<result column="price" jdbcType="DECIMAL" property="price" />
			<result column="displacement" jdbcType="VARCHAR" property="displacement" />
			<result column="mileaged" jdbcType="VARCHAR" property="mileaged" />
			<result column="evaluate_price" jdbcType="DECIMAL" property="evaluatePrice" />
			<result column="vehicleRegisterCode" jdbcType="VARCHAR" property="vehicleRegisterCode" />
		</association>

		<association property="dept" column="dept_id"
					 javaType="com.utonw.dealer.api.entity.erp.Dept">
			<result column="dept_name" property="name" jdbcType="VARCHAR" />
		</association>
		<association property="company" column="company_id"
					 javaType="com.utonw.dealer.api.entity.erp.Company">
			<result column="dialect" property="dialect" jdbcType="VARCHAR" />
		</association>

	</resultMap>

	<!-- 关联查询出借款信息 -->
	<select id="selectJoinByPrimaryKey" parameterType="map"
			resultMap="selectJoinByPrimaryKeyResultMap">
		select
		li.uuid, li.customer_id, li.id_card, li.mobile, li.loan_money,
		li.apply_money,
		li.loan_type,
		li.loan_status,
		li.loan_way,
		li.loan_purpose, li.repay_source, li.loan_rate, li.loan_limit_time,
		li.loan_limit_time_unit,
		li.repay_way, li.contract_num, li.pledge_num,
		li.guaranty_num,
		li.customer_account_num_id,
		li.customer_repayment_num_id,
		li.dept_id, li.company_id, li.is_ended,
		li.ended_at, li.is_destoryed,
		li.destoryed_at,
		li.is_extended,
		li.extend_time, li.extend_loan_id, li.first_repayment_at,
		li.withhold_money,
		li.is_chargedoff,
		li.chargedoff_at,
		li.chargedoff_way, li.create_cm_id, li.responsible_cm_id,
		li.assisted_user_id,
		li.applyed_at,
		li.host_opinion,
		li.assisted_opinion,
		li.remark,li.created_at,li.pledge_type,li.depreciationFee,li.drunkDrive,li.parkCost,li.gpsCost,li.cashdepositFee,li.certificatefee,
		li.orderid,li.chargedof_money,li.state,li.loan_product,li.buy_car_method,li.plantype,
		cri.customer_name,cri.sex,cri.is_important,cri.uuid as customerId,
		cai.bank_name,cai.account_num,cai.branch_bank_name,cai.account_name,
		gei.id,
		gei.loan_id, gei.vehicle_brand,
		gei.vehicle_no, gei.mileaged,
		gei.purchase_date,
		gei.vehicle_identification, gei.engine_no,
		gei.transmission,
		gei.is_examined, is_insure, gei.is_province,
		gei.indoor, gei.configuration,gei.color,
		gei.tire,
		gei.displacement,gei.tool,
		gei.dark_locks,
		gei.dark_locks_position,gei.engine,
		gei.price, gei.buy_the_way,
		gei.evaluate_price,
		gei.evaluate_conclusion,
		gei.evaluateBy,gei.towStatus,gei.vehicleModels,

		u1.realname as
		create_by, u2.realname as responsible_by, com.name company_name,
		de.name dept_name,
		u3.realname as principal_name,
		(select nickname from
		user where id =
		(select reviewed_by_id from loan_review_info where
		loan_id = li.uuid and
		review_level = 'lended' and review_status = 'passed'))
		as review_by
		from loan_info li
		LEFT JOIN
		customer_register_info cri ON li.customer_id = cri.uuid
		LEFT JOIN
		guarantee_evaluate_info gei ON li.uuid = gei.loan_id
		LEFT JOIN user u1
		ON li.create_cm_id = u1.uuid
		LEFT JOIN user u2 ON li.responsible_cm_id = u2.uuid
		LEFT JOIN company com ON li.company_id = com.id
		LEFT JOIN dept
		de ON li.dept_id = de.id
		LEFT JOIN user u3 ON u3.uuid = de.principal_id
		LEFT JOIN customer_account_info cai on cai.id =
		li.customer_account_num_id
		LEFT JOIN loan_review_info lri on
		lri.loan_id = li.uuid
		where 1 = 1
		<if test="loanId != null and loanId != ''">
			AND li.uuid = #{loanId,jdbcType=VARCHAR}
		</if>
		<if test="mobile != null">
			AND li.mobile = #{mobile}
		</if>
		<if test="customerName != null">
			AND cri.customer_name LIKE CONCAT('%',
			#{customerName},'%')
		</if>
		<if test="loanStatus != null">
			<if test="loanStatus == 'front'">
				AND li.loan_status not in ('repayment','end','adLoanApplication',
				'signContract_rejected','saleRepayment','vehicleNoSaleRepayment',
				'departLeadAduit_rejected','trialPhase_rejected','badLoanApplication',
				'judgment_rejected','mortgage_rejected')
			</if>
			<if test="loanStatus == 'back'">
				AND li.loan_status = 'repayment'
			</if>
			<if test="loanStatus == 'end'">
				AND li.loan_status in ('end','adLoanApplication',
				'signContract_rejected','saleRepayment','vehicleNoSaleRepayment',
				'departLeadAduit_rejected','trialPhase_rejected','badLoanApplication',
				'judgment_rejected','mortgage_rejected')
			</if>
		</if>
		<if test="deptId != null">
			AND li.dept_id = #{deptId}
		</if>
		<if test="responsibleCmId != null">
			AND li.responsible_cm_id = #{responsibleCmId}
		</if>
		<if test="customerManage != null">
			AND u3.realname LIKE CONCAT('%', #{customerManage},'%')
		</if>
		<if test="pledgeType != null">
			AND li.pledge_type = #{pledgeType}
		</if>
		<if test="orderNo != null">
			AND li.orderid LIKE CONCAT('%', #{orderNo},'%')
		</if>
		<if test="startDate != null ">
			AND date_format(li.created_at,'%Y-%m-%d') = #{startDate}
		</if>
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId,
				jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{mycompanyId,jdbcType=INTEGER}
			</when>
		</choose>
		GROUP BY li.uuid
		ORDER BY li.applyed_at DESC
	</select>
	<!-- 关联查询出借款信息 -->
	<select id="selectLoanDetailInfo" parameterType="map"
			resultMap="loanInfoSumaryResultMap">
		SELECT li.loan_money,u1.realname as managerName, cri.customer_name AS customerName, li.pledge_type,flowassign.ACT_ID_ AS loanStatus,li.repay_way,li.state,li.uuid,li.contract_num,li.created_at,
		u2.realname AS teamLeader,flowassign.realname AS assigner, flowassign.NAME_ AS workflowName,cri.is_important ,u5.realname endLeader,li.is_ended,li.customer_id  FROM
		loan_info li INNER JOIN user u1 on li.responsible_cm_id = u1.uuid
		INNER JOIN customer_register_info cri ON cri.uuid = li.customer_id
		INNER JOIN dept d on d.id = li.dept_id
		INNER JOIN user u2 on u2.uuid = d.principal_id
		INNER JOIN user u5 on li.teamleader_id = u5.uuid
		LEFT JOIN
		(SELECT are.BUSINESS_KEY_,u3.realname, are.ACT_ID_,art.NAME_ FROM ((act_ru_execution are
		INNER JOIN act_ru_task art ON art.EXECUTION_ID_= are.ID_)
		INNER JOIN loan_info li2  on li2.uuid = are.BUSINESS_KEY_)
		LEFT JOIN user u3 ON u3.uuid = art.ASSIGNEE_ GROUP BY are.BUSINESS_KEY_
		UNION
		SELECT rpm.loanId,u4.realname,are2.ACT_ID_,art2.NAME_ FROM ((repayment rpm
		INNER JOIN act_ru_execution are2 ON are2.BUSINESS_KEY_= rpm.uuid)
		INNER JOIN act_ru_task art2 ON art2.EXECUTION_ID_= are2.ID_)
		LEFT JOIN user u4 ON u4.uuid=art2.ASSIGNEE_
		) AS flowassign ON flowassign.BUSINESS_KEY_=li.uuid
		where 1 = 1
		
		<if test="loanId != null and loanId != ''">
			AND li.uuid = #{loanId,jdbcType=VARCHAR}
		</if>
		<if test="mobile != null">
			AND li.mobile = #{mobile}
		</if>
		<if test="customerName != null">
			AND cri.customer_name LIKE CONCAT('%',
			#{customerName},'%')
		</if>
		<if test="loanStatus != null">
			<if test="loanStatus == 'front'">
				AND li.loan_status in ('mortgage','instock','reloanReview','reloanApprove','reloanE_Contract','reloan_lended','helploanReview',
				'helploanApprove','helploanE_Contract','reloanAduit','helploan_lended','reuploadInformatin','helploanAduit',
				'lended','reuploadInformatin','dataReview','signContract_rejected','signContract',
				'judgment_rejected','judgment','visiteCheck','callBack','trialPhase_rejected',
				'trialPhase','departLeadAduit_rejected','departLeadAduit','vehicleAssess')
			</if>
			<if test="loanStatus == 'back'">
				AND li.loan_status = 'repayment'
			</if>
			<if test="loanStatus == 'end'">
				AND li.loan_status in ('end','adLoanApplication',
				'signContract_rejected','saleRepayment','vehicleNoSaleRepayment',
				'departLeadAduit_rejected','trialPhase_rejected','badLoanApplication',
				'judgment_rejected','mortgage_rejected')
			</if>
		</if>
		<if test="deptId != null">
			AND li.dept_id = #{deptId}
		</if>
		<if test="responsibleCmId != null">
			AND li.responsible_cm_id = #{responsibleCmId}
		</if>
		<if test="customerManage != null">
			AND u1.realname LIKE CONCAT('%', #{customerManage},'%')
		</if>
		<if test="pledgeType != null">
			AND li.pledge_type = #{pledgeType}
		</if>
		<if test="orderNo != null">
			AND li.orderid LIKE CONCAT('%', #{orderNo},'%')
		</if>
		<if test="startDate != null ">
			AND date_format(li.created_at,'%Y-%m-%d') = #{startDate}
		</if>
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId,
				jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{mycompanyId,jdbcType=INTEGER}
			</when>
		</choose>
		GROUP BY li.uuid
		ORDER BY li.applyed_at DESC
	</select>

	<!-- 关联查询历史借款信息 -->
	<select id="queryHistoryLoanInfoList" parameterType="map"
			resultMap="selectJoinByPrimaryKeyResultMap">
		<![CDATA[



















        SELECT
        cri.customer_name,
        cri.id_card,
        cri.responsible_cm_id,
        li.uuid,
        li.apply_money,
        li.loan_money,
        li.applyed_at,
        li.company_id,
        li.dept_id,
        li.loan_status,
        com.name company_name,
        de.name dept_name,
        u.realname responsible_by
        FROM
        loan_info li
        LEFT JOIN customer_register_info cri ON cri.uuid = li.customer_id
        LEFT JOIN company com ON cri.company_id = com.id
        LEFT JOIN dept de ON cri.dept_id = de.id
        LEFT JOIN user u ON li.responsible_cm_id = u.uuid
        WHERE
        li.customer_id = #{customerId} AND li.uuid <> #{loanId}
        ORDER BY li.applyed_at desc




















        ]]>
	</select>


	<select id="queryBybelongUserId" parameterType="java.lang.String"
			resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from loan_info
		where responsible_cm_id = #{userId,jdbcType=VARCHAR}
	</select>


	<!-- 关联查询近期待还列表 -->
	<select id="selectRecentLoanList" parameterType="java.lang.String"
			resultMap="selectJoinByPrimaryKeyResultMap">
		select
		li.uuid, li.customer_id, li.id_card, li.mobile, li.loan_money,
		li.apply_money,
		li.loan_type,
		li.loan_status,
		li.loan_way,
		li.loan_purpose, li.repay_source, li.loan_rate, li.loan_limit_time,
		li.loan_limit_time_unit,
		li.repay_way, li.contract_num, li.pledge_num,
		li.guaranty_num,
		li.customer_account_num_id,
		li.customer_repayment_num_id,
		li.dept_id, li.company_id, li.is_ended,
		li.ended_at, li.is_destoryed,
		li.destoryed_at,
		li.is_extended,
		li.extend_time, li.extend_loan_id, li.first_repayment_at,
		li.withhold_money,
		li.is_chargedoff,
		li.chargedof_money,
		li.chargedoff_at, li.chargedoff_way, li.create_cm_id,
		li.responsible_cm_id,
		li.assisted_user_id,
		li.applyed_at,
		li.host_opinion, li.assisted_opinion, li.remark,li.created_at,
		cri.customer_name,cri.sex,
		u1.realname as create_by, u2.realname as
		responsible_by, com.name company_name,
		de.name
		dept_name,ryd.repayPeriod as repayPeriod,ryd.repayDate as
		repayDate,
		ryd.repayTotal
		from loan_info li LEFT JOIN customer_register_info cri
		ON li.customer_id =
		cri.uuid
		LEFT JOIN user u1 ON li.create_cm_id =
		u1.uuid
		LEFT JOIN user u2 ON li.responsible_cm_id = u2.uuid
		LEFT JOIN
		company com ON li.company_id = com.id
		LEFT JOIN dept de ON li.dept_id =
		de.id
		LEFT JOIN repayplan ry ON ry.loanId=li.uuid
		LEFT JOIN
		repayplandetail ryd ON ryd.repayPlanId=ry.id
		WHERE ryd.isRepay = 0 AND
		li.is_chargedoff = 1
		<if test="responsibleCmId != null">
			AND li.responsible_cm_id=
			#{responsibleCmId,jdbcType=VARCHAR}
		</if>
		<if test="loanId != null and loanId != ''">
			AND li.uuid = #{loanId,jdbcType=VARCHAR}
		</if>
		<if test="mobile != null">
			AND li.mobile = #{mobile}
		</if>
		<if test="loanStatus != null">
			AND li.loan_status = #{loanStatus}
		</if>
		<if test="companyId != null">
			AND li.company_id = #{companyId}
		</if>
		<if test="deptId != null">
			AND li.dept_id = #{deptId}
		</if>
		<if test="endTime != null">
			AND ryd.repayDate BETWEEN DATE_FORMAT(CURDATE(),'%Y-%m-%d
			%H-%i-%s') AND
			DATE_FORMAT(DATE_ADD(CURDATE(),INTERVAL #{endTime}
			DAY),'%Y-%m-%d
			%H-%i-%s')
		</if>
		GROUP BY li.uuid
		ORDER BY ryd.repayDate ASC
	</select>


	<!-- 后台首页查询还款总数 -->
	<select id="queryRepayPlanCount" resultType="java.lang.Long">
		SELECT
		COUNT(SELECT1.id) FROM (select

		li.uuid, li.customer_id, li.id_card,
		li.mobile, li.loan_money, li.apply_money,
		li.loan_type,
		li.loan_status,
		li.loan_way, li.loan_purpose, li.repay_source, li.loan_rate,
		li.loan_limit_time,
		li.loan_limit_time_unit,
		li.repay_way,
		li.contract_num, li.pledge_num, li.guaranty_num,
		li.customer_account_num_id,
		li.customer_repayment_num_id,
		li.dept_id,
		li.company_id, li.is_ended, li.ended_at, li.is_destoryed,
		li.destoryed_at,
		li.is_extended,
		li.extend_time, li.extend_loan_id,
		li.first_repayment_at, li.withhold_money,
		li.is_chargedoff,
		li.chargedof_money,
		li.chargedoff_at, li.chargedoff_way,
		li.create_cm_id, li.responsible_cm_id,
		li.assisted_user_id,
		li.applyed_at,
		li.host_opinion, li.assisted_opinion,
		li.remark,li.created_at,
		cri.customer_name,cri.sex,

		gei.id, gei.loan_id,
		gei.vehicle_brand,
		gei.vehicle_no, gei.mileaged, gei.purchase_date,
		gei.vehicle_identification, gei.engine_no, gei.transmission,
		gei.is_examined, is_insure, gei.is_province,
		gei.indoor,
		gei.configuration,gei.color,
		gei.tire, gei.displacement,gei.tool,
		gei.dark_locks, gei.dark_locks_position,gei.engine,
		gei.price,
		gei.buy_the_way, gei.evaluate_price,
		gei.evaluate_conclusion,
		gei.evaluateBy,

		u1.realname as create_by, u2.realname as
		responsible_by, com.name company_name,
		de.name
		dept_name,ryd.repayPeriod as repayPeriod,ryd.repayDate as
		repayDate,
		ryd.repayTotal
		from loan_info li LEFT JOIN customer_register_info cri
		ON li.customer_id =
		cri.uuid
		LEFT JOIN guarantee_evaluate_info gei ON
		li.uuid = gei.loan_id
		LEFT JOIN user u1 ON li.create_cm_id = u1.uuid
		LEFT JOIN user u2 ON li.responsible_cm_id = u2.uuid
		LEFT JOIN company
		com ON li.company_id = com.id
		LEFT JOIN dept de ON li.dept_id = de.id
		LEFT JOIN repayplan ry ON ry.loanId=li.uuid
		LEFT JOIN repayplandetail
		ryd ON ryd.repayPlanId=ry.id
		WHERE 1=1 AND ryd.isRepay = 0

		GROUP BY
		li.uuid
		ORDER BY ryd.repayDate ASC) SELECT1
	</select>


	<!-- 根据时间查询需还款总数 -->
	<select id="queryRepayDayConut" parameterType="java.lang.String"
			resultType="java.lang.Long">
		SELECT IFNULL(COUNT(SELECT1.id), 0)COUNT FROM (select

		li.uuid, li.customer_id, li.id_card, li.mobile, li.loan_money,
		li.apply_money,
		li.loan_type,
		li.loan_status,
		li.loan_way,
		li.loan_purpose, li.repay_source, li.loan_rate, li.loan_limit_time,
		li.loan_limit_time_unit,
		li.repay_way, li.contract_num, li.pledge_num,
		li.guaranty_num,
		li.customer_account_num_id,
		li.customer_repayment_num_id,
		li.dept_id, li.company_id, li.is_ended,
		li.ended_at, li.is_destoryed,
		li.destoryed_at,
		li.is_extended,
		li.extend_time, li.extend_loan_id, li.first_repayment_at,
		li.withhold_money,
		li.is_chargedoff,
		li.chargedof_money,
		li.chargedoff_at, li.chargedoff_way, li.create_cm_id,
		li.responsible_cm_id,
		li.assisted_user_id,
		li.applyed_at,
		li.host_opinion, li.assisted_opinion, li.remark,li.created_at,
		cri.customer_name,cri.sex,

		gei.id, gei.loan_id, gei.vehicle_brand,
		gei.vehicle_no, gei.mileaged, gei.purchase_date,
		gei.vehicle_identification, gei.engine_no, gei.transmission,
		gei.is_examined, is_insure, gei.is_province,
		gei.indoor,
		gei.configuration,gei.color,
		gei.tire, gei.displacement,gei.tool,
		gei.dark_locks, gei.dark_locks_position,gei.engine,
		gei.price,
		gei.buy_the_way, gei.evaluate_price,
		gei.evaluate_conclusion,
		gei.evaluateBy,

		u1.realname as create_by, u2.realname as
		responsible_by, com.name company_name,
		de.name
		dept_name,ryd.repayPeriod as repayPeriod,ryd.repayDate as
		repayDate,
		ryd.repayTotal
		from loan_info li LEFT JOIN customer_register_info cri
		ON li.customer_id =
		cri.uuid
		LEFT JOIN guarantee_evaluate_info gei ON
		li.uuid = gei.loan_id
		LEFT JOIN user u1 ON li.create_cm_id = u1.uuid
		LEFT JOIN user u2 ON li.responsible_cm_id = u2.uuid
		LEFT JOIN company
		com ON li.company_id = com.id
		LEFT JOIN dept de ON li.dept_id = de.id
		LEFT JOIN repayplan ry ON ry.loanId=li.uuid
		LEFT JOIN repayplandetail
		ryd ON ryd.repayPlanId=ry.id
		WHERE 1=1 AND ryd.isRepay = 0
		AND
		ryd.repayDate BETWEEN DATE_FORMAT(CURDATE(),'%Y-%m-%d %H-%i-%s') AND
		DATE_FORMAT(DATE_ADD(CURDATE(),INTERVAL #{endTime} DAY),'%Y-%m-%d
		%H-%i-%s')
		GROUP BY li.uuid
		ORDER BY ryd.repayDate ASC) SELECT1
	</select>

	<select id="queryYestdAddLoanCount" resultType="java.lang.Long">
		SELECT
		IFNULL(count(1), 0) FROM loan_info li WHERE IFNULL(li.is_chargedoff,
		0) = 1 AND li
		.chargedoff_at
		BETWEEN DATE_FORMAT(date_sub(CURDATE(),
		INTERVAL 1 DAY),
		'%Y-%m-%d %H-%i-%s') AND DATE_FORMAT(CURDATE(),
		'%Y-%m-%d %H-%i-%s')
	</select>

	<select id="queryYestdAddLoanMoney" resultType="java.math.BigDecimal">
		SELECT
		IFNULL(sum(li.loan_money), 0) FROM loan_info li WHERE
		IFNULL(li.is_chargedoff, 0) = 1
		AND li.chargedoff_at BETWEEN
		DATE_FORMAT(date_sub(CURDATE(), INTERVAL 1
		DAY), '%Y-%m-%d %H-%i-%s')
		AND DATE_FORMAT(CURDATE(), '%Y-%m-%d %H-%i-%s')
	</select>


	<select id="queryMonthLoanCount" parameterType="java.lang.String"
			resultType="java.lang.Long">
		SELECT count(1) FROM loan_info li WHERE
		IFNULL(li.is_chargedoff, 0) = 1
		AND
		DATE_FORMAT(li.chargedoff_at,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m')
		AND
		li.responsible_cm_id= #{responsibleCmId}
	</select>

	<select id="queryMonthLoanMoney" parameterType="java.lang.String"
			resultType="java.math.BigDecimal">
		SELECT IFNULL(sum(li.loan_money), 0) FROM loan_info li
		WHERE
		IFNULL(li.is_chargedoff, 0) = 1
		AND
		DATE_FORMAT(li.chargedoff_at,'%Y-%m') = DATE_FORMAT(now(),'%Y-%m')
		AND
		li.responsible_cm_id= #{responsibleCmId}

	</select>


	<select id="getLoanContractDetail" parameterType="java.lang.String"
			resultMap="loanContractVo">
		SELECT
		li.uuid,li.customer_id,li.id_card,li.loan_money,li.apply_money,li.loan_purpose,
		li.loan_rate,li.loan_limit_time,li.loan_limit_time_unit,li.repay_way,li.contract_num,
		li.pledge_num,li.guaranty_num,li.ended_at,li.chargedof_money,li.chargedoff_at,li.pledge_type,li.depreciationFee,
		cai.account_name,cai.bank_name,cai.account_num,cri.customer_name,cri.koseki_address,
		cri.live_address,gei.vehicle_no,gei.displacement,gei.mileaged,li.mobile,gei.price,
		gei.vehicle_identification,gei.engine_no,gei.vehicle_brand,gei.evaluate_price,gei.vehicleModels,
		gei.vehicleRegisterCode,de.name
		dept_name,li.repay_source,
		gei.color, com.dialect dialect
		FROM loan_info li
		LEFT JOIN
		customer_register_info cri ON li.customer_id = cri.uuid
		LEFT JOIN
		guarantee_evaluate_info gei ON li.uuid = gei.loan_id
		LEFT JOIN
		customer_account_info cai ON cai.id =
		li.customer_account_num_id
		LEFT JOIN
		dept de ON li.dept_id = de.id
		LEFT JOIN company com ON li.company_id =
		com.id
		WHERE li.uuid=#{loanId}
		GROUP BY li.uuid
	</select>


	<select id="selectRepaymentLoanInfoByUserId" parameterType="java.lang.String"
			resultMap="ResultMapWithBLOBs">

		SELECT
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />

		FROM loan_info WHERE

		<![CDATA[
        loan_info.is_chargedoff = 1

        AND  loan_info.is_ended = 0

        AND  loan_info.loan_status <> 'badLoanApplication'

        AND loan_info.responsible_cm_id = #{userId,jdbcType=VARCHAR}
        ]]>
	</select>


	<select id="selectRepaymentLoanInfoUUidByUserId" parameterType="map"
			resultType="java.lang.String">
		SELECT
		uuid
		FROM loan_info WHERE
		loan_info.is_chargedoff = 1

		AND
		loan_info.is_ended = 0

		AND loan_info.loan_status !=
		'badLoanApplication'

		<if test="userId != null and userId !=''">
			AND loan_info.responsible_cm_id =
			#{userId,jdbcType=VARCHAR}
		</if>


	</select>


	<select id="selectRepaymentLoanInfoByProcessinsId"
			parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">

		SELECT
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />

		FROM loan_info WHERE

		loan_info.processinsId =
		#{processinsId,jdbcType=VARCHAR}

	</select>


	<select id="findEndLoanAllByConditionSize" parameterType="map"
			resultType="java.lang.Integer">
		select count(1) as pageCount
		from loan_info li left JOIN
		customer_register_info cri ON li.customer_id = cri.uuid
		left JOIN user
		ON user.uuid = li.responsible_cm_id
		LEFT JOIN guarantee_evaluate_info
		gei ON gei.loan_id = li.uuid
		where
		li.is_chargedoff = 1
		<if test="isEnded !=null and isEnded !=''">
			AND li.is_ended = #{isEnded,jdbcType=BIT}
		</if>

		<if test="loanStatus !=null and loanStatus !=''">
			AND li.loan_status = #{loanStatus,jdbcType=VARCHAR}
		</if>
		<if test="pledgeType !=null and pledgeType !=''">
			AND li.pledge_type = #{pledgeType,jdbcType=VARCHAR}
		</if>
		<if test="idCard !=null and idCard !=''">
			AND cri.id_card = #{idCard,jdbcType=VARCHAR}
		</if>
		<if test="customerName !=null and customerName !=''">
			AND cri.customer_name like
			CONCAT('%',#{customerName,jdbcType=VARCHAR},'%' )
		</if>
		<if test="criMobile !=null and criMobile !=''">
			AND cri.mobile = #{criMobile,jdbcType=VARCHAR}
		</if>
		<if test="nickname !=null and nickname !=''">
			AND user.nickname like
			CONCAT('%',#{nickname,jdbcType=VARCHAR},'%' )
		</if>
		<if test="userMobile !=null and userMobile !=''">
			AND user.mobile = #{userMobile,jdbcType=VARCHAR}
		</if>
		<if test="isExtended !=null and isExtended !=''">
			AND li.is_extended = #{isExtended,jdbcType=BIT}
		</if>
		<if test="chargedoffAt !=null and chargedoffAt !=''">
			<![CDATA[
            AND li.chargedoff_at >= #{chargedoffAt,jdbcType=DATE}
             ]]>
		</if>
		<if test="chargedoffAtEnd !=null and chargedoffAtEnd !=''">
			<![CDATA[
            AND li.chargedoff_at <=  #{chargedoffAtEnd,jdbcType=DATE}
            ]]>
		</if>

	</select>


	<select id="findEndLoanAllByCondition" parameterType="map"
			resultMap="endLoanResultMap">
		select
		*,
		user.uuid AS responsibleUserId,
		gei.id AS guaranteeId,
		cri.uuid
		as customerId,
		user.mobile as userMobile,
		(select name from dept where
		dept.id=user.dept_id) as deptName,
		(select name from company where
		company.id=user.company_id ) as companyName
		from loan_info li left JOIN
		customer_register_info cri ON li.customer_id = cri.uuid
		left JOIN user
		ON user.uuid = li.responsible_cm_id
		LEFT JOIN guarantee_evaluate_info
		gei ON gei.loan_id = li.uuid
		where
		li.is_chargedoff = 1
		<if test="isEnded !=null and isEnded !=''">
			AND li.is_ended = #{isEnded,jdbcType=BIT}
		</if>
		<if test="loanStatus !=null and loanStatus !=''">
			AND li.loan_status = #{loanStatus,jdbcType=VARCHAR}
		</if>
		<if test="pledgeType !=null and pledgeType !=''">
			AND li.pledge_type = #{pledgeType,jdbcType=VARCHAR}
		</if>
		<if test="idCard !=null and idCard !=''">
			AND cri.id_card = #{idCard,jdbcType=VARCHAR}
		</if>
		<if test="customerName !=null and customerName !=''">
			AND cri.customer_name like
			CONCAT('%',#{customerName,jdbcType=VARCHAR},'%' )
		</if>
		<if test="criMobile !=null and criMobile !=''">
			AND cri.mobile = #{criMobile,jdbcType=VARCHAR}
		</if>
		<if test="nickname !=null and nickname !=''">
			AND user.nickname like
			CONCAT('%',#{nickname,jdbcType=VARCHAR},'%' )
		</if>
		<if test="userMobile !=null and userMobile !=''">
			AND user.mobile = #{userMobile,jdbcType=VARCHAR}
		</if>
		<if test="isExtended !=null and isExtended !=''">
			AND li.is_extended = #{isExtended,jdbcType=BIT}
		</if>
		<if test="chargedoffAt !=null and chargedoffAt !=''">
			<![CDATA[
            AND li.chargedoff_at >= #{chargedoffAt,jdbcType=DATE}
             ]]>
		</if>
		<if test="chargedoffAtEnd !=null and chargedoffAtEnd !=''">
			<![CDATA[
            AND li.chargedoff_at <=  #{chargedoffAtEnd,jdbcType=DATE}
            ]]>
		</if>
		limit #{page,jdbcType=INTEGER},#{pageCount,jdbcType=INTEGER}


	</select>


	<select id="findLoanRepaymentCommission" parameterType="map"
			resultType="java.math.BigDecimal">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. sum(repaymenttransaction.actualRepaymentInterestSum)
			as interestSum -->
		select sum(repaymenttransaction.actualRepaymentInterestSum) as
		interestSum from repaymenttransaction where
		repaymenttransaction.repaymentId
		=(SELECT
		repayment.uuid
		FROM
		repayment
		where
		repayment.status = #{status,jdbcType=INTEGER}
		AND
		repayment.replanDetaiId in (SELECT
		repayplandetail.id as rid
		FROM
		repayplandetail
		LEFT JOIN repayplan ON repayplandetail.repayPlanId =
		repayplan.id
		WHERE
		repayplandetail.repayPeriod =
		#{period,jdbcType=INTEGER}

		AND repayplan.loanId =
		#{loanId,jdbcType=VARCHAR}))

	</select>


	<select id="selectByOrderIdOrOpenId" parameterType="map"
			resultType="java.lang.String">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		select
		loan_info.uuid as loanInfoId
		FROM
		loan_info
		LEFT JOIN
		customer_register_info ON loan_info.customer_id =
		customer_register_info.uuid
		WHERE
		loan_info.is_chargedoff= true
		<if test="orderId != null and orderId !=''">
			AND
			customer_register_info.order_id=#{orderId,jdbcType=VARCHAR}
		</if>
		<if test="openId != null and openId !=''">
			AND
			customer_register_info.open_id=#{openId,jdbcType=VARCHAR}
		</if>
	</select>


	<select id="notifyDistributionCharge" parameterType="string"
			resultMap="ResultMapWithBLOBs">
		SELECT
		li.uuid, li.loan_money, li.id_card, li.loan_status,
		dis.order_id
		processinsId,li
		.company_id, li.loan_limit_time
		FROM
		distribution_order dis
		LEFT JOIN customer_register_info cri ON
		dis.open_id = cri.open_id AND
		cri.order_id =
		dis.order_id
		LEFT JOIN
		loan_info li ON li.customer_id = cri.uuid
		WHERE li.uuid = #{loanId}
		ORDER BY li.applyed_at DESC
	</select>
	<select id="selectOrderById" parameterType="Integer" resultMap="ResultMapWithBLOBs">
		SELECT
		li.uuid
		FROM
		distribution_order dis
		LEFT JOIN
		customer_register_info cri ON dis.open_id = cri.open_id AND
		cri.order_id =
		dis.order_id
		LEFT JOIN loan_info li ON li.customer_id =
		cri.uuid
		WHERE dis.id = ${id}
		ORDER BY li.applyed_at DESC
	</select>

	<select id="selectEnterLoanMoney" parameterType="map"
			resultType="java.math.BigDecimal">
		select sum(li.loan_money) as sumLoanMoney from loan_info as li where
		li.is_chargedoff=true
		<if test="startDate !=null and startDate !=''">
			<![CDATA[
            AND li.chargedoff_at >= #{startDate,jdbcType=DATE}
             ]]>
		</if>
		<if test="endDate !=null and endDate !=''">
			<![CDATA[
            AND li.chargedoff_at <=  #{endDate,jdbcType=DATE}
            ]]>
		</if>
	</select>
	<select id="selectLoanOrderCount" resultType="java.lang.Integer">
		select count(1) as
		listNumber
		from loan_info
	</select>
	<select id="selectqueryLoanInfoCount" resultType="java.lang.Integer">
		SELECT
		COUNT(id) FROM loan_info li WHERE li.loan_status='vehicleAssess'
		union
		all
		select count(id) from loan_info li where li.loan_status =
		'departLeadAduit'
		union all
		select count(id) from loan_info li where
		li.loan_status = 'trialPhase'
		union all
		select count(id) from loan_info
		li where li.loan_status = 'callBack'
		union all
		select count(id) from
		loan_info li where li.loan_status = 'visiteCheck'
		union all
		select
		count(id) from loan_info li where li.loan_status = 'judgment'
		union all
		select count(id) from loan_info li where li.loan_status =
		'signContract'
		union all
		select count(id) from loan_info li where
		li.loan_status = 'dataReview'
		union all
		select count(id) from loan_info
		li where li.loan_status =
		'reuploadInformatin'
		union ALL
		SELECT count(id)
		from loan_info li where li.loan_status= 'lended';
	</select>
	<!-- 押品评估查询 -->
	<select id="selectJoinByPrimaryKeyForProduct" parameterType="map"
			resultMap="selectJoinByPrimaryKeyResultMap">
		select
		li.uuid, li.customer_id, li.id_card, li.mobile, li.loan_money,
		li.apply_money,
		li.loan_type,
		li.loan_status,
		li.loan_way,
		li.loan_purpose, li.repay_source, li.loan_rate, li.loan_limit_time,
		li.loan_limit_time_unit,
		li.repay_way, li.contract_num, li.pledge_num,
		li.guaranty_num,
		li.customer_account_num_id,
		li.customer_repayment_num_id,
		li.dept_id, li.company_id, li.is_ended,
		li.ended_at, li.is_destoryed,
		li.destoryed_at,
		li.is_extended,
		li.extend_time, li.extend_loan_id, li.first_repayment_at,
		li.withhold_money,
		li.is_chargedoff,
		li.chargedof_money,
		li.chargedoff_at, li.chargedoff_way, li.create_cm_id,
		li.responsible_cm_id,
		li.assisted_user_id,
		li.applyed_at,
		li.host_opinion, li.assisted_opinion,
		li.remark,li.created_at,li.pledge_type,li.depreciationFee,li.drunkDrive,li.cashdepositFee,li.certificatefee,
		li.orderid,
		cri.customer_name,cri.sex,

		gei.id, gei.loan_id,
		gei.vehicle_brand,
		gei.vehicle_no, gei.mileaged, gei.purchase_date,
		gei.vehicle_identification, gei.engine_no, gei.transmission,
		gei.is_examined, is_insure, gei.is_province,
		gei.indoor,
		gei.configuration,gei.color,
		gei.tire, gei.displacement,gei.tool,
		gei.dark_locks, gei.dark_locks_position,gei.engine,
		gei.price,
		gei.buy_the_way, gei.evaluate_price,
		gei.evaluate_conclusion,
		gei.evaluateBy,gei.towStatus,gei.vehicleModels,

		u1.realname as
		create_by, u2.realname as responsible_by, com.name company_name,
		de.name dept_name,
		u3.realname as principal_name
		from loan_info li LEFT
		JOIN customer_register_info cri ON li.customer_id =
		cri.uuid
		LEFT JOIN
		guarantee_evaluate_info gei ON li.uuid = gei.loan_id
		LEFT JOIN user u1
		ON li.create_cm_id = u1.uuid
		LEFT JOIN user u2 ON li.responsible_cm_id
		= u2.uuid
		LEFT JOIN company com ON li.company_id = com.id
		LEFT JOIN dept
		de ON li.dept_id = de.id
		LEFT JOIN user u3 ON u3.uuid = de.principal_id
		where 1 = 1
		<if test="orderNo != null">
			AND li.orderid LIKE CONCAT('%', #{orderNo},'%')
		</if>
		<if test="productStatus != null">
			<if test="productStatus == 0">
				AND loan_status = 'vehicleAssess'
			</if>
			<if test="productStatus == 1">
				AND loan_status <![CDATA[<>]]>
				'vehicleAssess'
			</if>
		</if>
		AND li.loan_status <![CDATA[<>]]>
		'repayment' AND li.loan_status <![CDATA[<>]]>
		'end'
		ORDER BY li.applyed_at DESC
	</select>
	<!-- 查询我的团队借款信息 -->
	<select id="selectMyTeamLoanListnew" parameterType="map"
			resultMap="selectJoinByPrimaryKeyResultMap">
		select
		cri.customer_name,li.id_card,li.orderid,li.uuid,li.pledge_type,
		li.loan_status, li.created_at,
		u1.realname as create_by,u3.realname as
		principal_name
		from loan_info li LEFT JOIN customer_register_info cri
		ON li.customer_id =
		cri.uuid
		LEFT JOIN guarantee_evaluate_info gei ON
		li.uuid = gei.loan_id
		LEFT JOIN user u1 ON li.create_cm_id = u1.uuid
		LEFT JOIN user u2 ON li.responsible_cm_id = u2.uuid
		LEFT JOIN company
		com ON li.company_id = com.id
		LEFT JOIN dept de ON li.dept_id = de.id
		LEFT JOIN user u3 ON u3.uuid = de.principal_id
		where 1 = 1
		<if test="loanId != null and loanId != ''">
			AND li.uuid = #{loanId,jdbcType=VARCHAR}
		</if>
		<if test="mobile != null">
			AND li.mobile = #{mobile}
		</if>
		<if test="customerName != null">
			AND cri.customer_name LIKE CONCAT('%',
			#{customerName},'%')
		</if>
		<if test="loanStatus != null">
			AND li.loan_status = #{loanStatus}
		</if>
		<if test="companyId != null">
			AND li.company_id = #{companyId}
		</if>
		<if test="deptId != null">
			AND li.dept_id = #{deptId}
		</if>
		<if test="responsibleCmId != null">
			AND li.responsible_cm_id = #{responsibleCmId}
		</if>
		<if test="customerManage != null">
			AND u3.realname LIKE CONCAT('%', #{customerManage},'%')
		</if>
		<if test="pledgeType != null">
			AND li.pledge_type = #{pledgeType}
		</if>
		<if test="orderNo != null">
			AND li.orderid LIKE CONCAT('%', #{orderNo},'%')
		</if>
		AND li.loan_status <![CDATA[<>]]>
		'repayment' AND li.loan_status <![CDATA[<>]]>
		'end'
		ORDER BY li.applyed_at DESC
	</select>
	<select id="selectInStockCarList" parameterType="map"
			resultMap="ResultMapOfInCarStock">
		SELECT
		cri.customer_name,li.orderid,li.uuid,li.pledge_type,
		cios.stockobjectnumber,cios.instockstuff,cios.parklot,
		cios.stockstatus,cios.instocktime,art.ID_,art.TASK_DEF_KEY_
		FROM loan_info li
		LEFT JOIN customer_register_info cri ON	li.customer_id = cri.uuid
		LEFT JOIN carinoutstore cios ON cios.orderid = li.contract_num
		LEFT JOIN act_ru_execution are ON are.BUSINESS_KEY_ = li.uuid
		LEFT JOIN act_ru_task art ON art.PROC_INST_ID_ = are.PROC_INST_ID_
		where (li.loan_status <![CDATA[=]]> 'repayment'
		OR li.loan_status <![CDATA[=]]> 'lended'
		OR li.loan_status <![CDATA[=]]> 'signContract'
		OR li.loan_status <![CDATA[=]]> 'instock'
		OR li.loan_status <![CDATA[=]]> 'dataReview'
		OR li.loan_status <![CDATA[=]]> 'reuploadInformatin'
		OR li.loan_status <![CDATA[=]]> 'judgment'
		OR li.loan_status <![CDATA[=]]> 'reloanApprove'
		OR li.loan_status <![CDATA[=]]> 'reloanE_Contract'
		OR li.loan_status <![CDATA[=]]> 'reloan_lended'
		OR li.loan_status <![CDATA[=]]> 'helploanApprove'
		OR li.loan_status <![CDATA[=]]> 'helploanReview'
		OR li.loan_status <![CDATA[=]]> 'end')
		AND li.pledge_type <![CDATA[=]]> 'vehiclePledge'
		AND (cios.stockstatus  <![CDATA[<>]]> '2' OR cios.stockstatus is NULL)
		<if test="orderid != null">
			AND li.contract_num like CONCAT('%','${orderid}','%' )
		</if>
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId,
				jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{companyId,jdbcType=INTEGER}
			</when>
		</choose>
		GROUP BY li.contract_num
		ORDER BY li.applyed_at DESC
	</select>
	<select id="selectInStockCarInfo" parameterType="map"
			resultMap="ResultMapOfCarInfoOfStock">
		select
		cri.customer_name,li.orderid,li.uuid,cios.stockobjectkind,gei.vehicle_no,gei.vehicleModels,
		gei.color,gei.mileaged, cios.stockobjectnumber, cios.stockobjectkind,
		cios.steeringlocknumber, cios.parkspace,
		cios.parklot,
		cios.instocktime, cios.instockstuff, cios.instockparkerstuff,
		cios.reviewconclusion_instock,
		cios.outstocktime, cios.outstockstuff,
		cios.outstockparkerstuff,cios.reviewconclusion_outstock,remark_outstoke,
		cios.remark_instoke, cios.stockstatus,cios.wheellocknumber
		from
		loan_info li LEFT JOIN customer_register_info cri ON li.customer_id =
		cri.uuid
		LEFT JOIN carinoutstore cios ON cios.orderid = li.orderid
		LEFT
		JOIN guarantee_evaluate_info gei ON li.uuid = gei.loan_id
		where 1=1
		<if test="uuid != null">
			AND li.uuid = #{uuid}
		</if>
	</select>
	<select id="selectOutStockCarList" parameterType="map"
			resultMap="ResultMapOfOutCarStock">
		select
		cri.customer_name,li.orderid,li.uuid,li.pledge_type,li.customer_id,
		cios.stockobjectnumber,cios.outstockstuff,cios.parklot,cios.stockstatus,cios.outstocktime
		from loan_info li LEFT JOIN customer_register_info cri ON
		li.customer_id = cri.uuid
		LEFT JOIN carinoutstore cios ON cios.orderid
		= li.orderid
		where li.is_ended <![CDATA[=]]>
		'1'
		AND cios.stockstatus <![CDATA[<>]]>
		'0'
		<if test="orderid != null">
			AND li.orderid like CONCAT('%','${orderid}','%' )
		</if>
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId,
				jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{companyId,jdbcType=INTEGER}
			</when>
		</choose>
		ORDER BY li.applyed_at DESC
	</select>
	<select id="selectIncomeInfoList" parameterType="map"
			resultMap="ResultMapOfIncomeInfo">
		select li.orderid, cai.account_name, li.loan_money,
		li.loan_limit_time, li.ended_at,
		li.applyed_at,li.state,cri.is_important,li.uuid,(SELECT COUNT(1) from
		repaymenttransaction rpt
		inner JOIN repayment rp on rp.uuid =
		rpt.repaymentId
		WHERE rp.loanId = li.uuid) as cur_period,(SELECT
		sum(rpt.actualRepaymentCaptialSum) from repaymenttransaction rpt
		inner
		JOIN repayment rp on rp.uuid = rpt.repaymentId
		WHERE rp.loanId =
		li.uuid) as cur_repaycaptialsum,(SELECT
		sum(rpt.actualRepaymentInterestSum) from repaymenttransaction rpt
		inner JOIN repayment rp on rp.uuid = rpt.repaymentId
		WHERE rp.loanId =
		li.uuid) as cur_repayinterestsum
		from loan_info li
		left join
		customer_account_info cai on cai.customer_id = li.customer_id
		LEFT JOIN
		customer_register_info cri on cri.uuid = li.customer_id
		WHERE 1=1
		<if test="uuid != null">
			AND li.uuid = #{uuid}
		</if>
		<if test="startDate != null and startDate != '' ">
			<![CDATA[
         AND date_format(li.applyed_at,'%Y-%m-%d') >= #{startDate,jdbcType=TIMESTAMP}
            ]]>
		</if>
		<if test="endDate != null and endDate != '' ">
			<![CDATA[
         AND date_format(li.applyed_at,'%Y-%m-%d') <= #{endDate,jdbcType=TIMESTAMP}
             ]]>
		</if>
		<if test="orderNo != null and orderNo != '' ">
			AND li.orderid LIKE
			CONCAT('%',#{orderNo,jdbcType=VARCHAR},'%')
		</if>
		<if test="customerName != null and customerName != '' ">
			AND customer_name LIKE
			CONCAT('%',#{customerName,jdbcType=VARCHAR},'%')
		</if>
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId,
				jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{companyId,jdbcType=INTEGER}
			</when>
		</choose>
		GROUP BY li.orderid

	</select>
	<select id="queryLoanCountByCustomerId" parameterType="java.lang.String"
			resultType="java.lang.Integer">
		SELECT count(1) FROM loan_info li
		LEFT JOIN
		customer_register_info cri on cri.uuid = li.customer_id
		WHERE cri.uuid
		= #{uuid,jdbcType=VARCHAR}
	</select>

	<select id="queryCompanyList" resultMap="queryCompanyInfo">
		SELECT id, name
		FROM
		company
		WHERE valid_flg = 1
	</select>

	<select id="queryDeptInfoList" parameterType="java.lang.String"
			resultMap="queryDeptInfo">
		SELECT company_id,name
		FROM dept
		WHERE company_id =
		#{companyId,jdbcType=INTEGER}
		AND is_valid = 1
	</select>

	<select id="queryUserManagerName" parameterType="java.lang.String"
			resultMap="queryManagerName">
		SELECT DISTINCT(u.uuid),u.realname
		FROM user u
		LEFT JOIN
		loan_info li ON u.uuid = li.responsible_cm_id
		WHERE u.company_id =
		#{companyId,jdbcType=VARCHAR}
		AND u.active_flg = 1
	</select>

	<!-- 查询坏账 -->
	<resultMap id="badLoanInfo" type="com.utonw.dealer.api.entity.erp.BadLoanInfo">
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="loan_money" jdbcType="DECIMAL" property="loanMoney" />
		<result column="orderid" jdbcType="VARCHAR" property="orderId" />
		<result column="contract_num" jdbcType="VARCHAR" property="contractNum" />
		<result column="pledge_type" jdbcType="VARCHAR" property="pledgeType" />
		<result column="realname" jdbcType="VARCHAR" property="realName" />
		<result column="company_name" jdbcType="VARCHAR" property="companyName" />
		<result column="customer_name" jdbcType="VARCHAR" property="customerName" />
		<result column="dept_name" jdbcType="VARCHAR" property="deptName" />
		<result column="loan_product" jdbcType="VARCHAR" property="loanProduct" />
		<result column="loan_type" jdbcType="VARCHAR" property="loanType" />
		<result column="loan_way" jdbcType="VARCHAR" property="loanWay" />
		<result column="rest_issue" jdbcType="INTEGER" property="restIssue" />
		<result column="rest_money" jdbcType="DECIMAL" property="restMoney" />
		<result column="loan_limit_time" jdbcType="INTEGER" property="loanLimitTime" />
		<result column="repay_money" jdbcType="DECIMAL" property="repayMoney" />
		<result column="repay_way" jdbcType="VARCHAR" property="repayWay" />
		<result column="bad_created_at" property="createdAt" jdbcType="DATE" />
		<result column="customer_id" property="customerId" jdbcType="VARCHAR" />
		<result column="is_important" property="isImportant" jdbcType="VARCHAR" />
		<result column="ended_at" property="gmtRepaymentEnded"
				jdbcType="DATE" />
		<result column="first_repayment_at" property="gmtFirstRepayment"
				jdbcType="DATE" />
	</resultMap>
	<resultMap id="badLoanInfoMap" type="com.utonw.dealer.api.entity.erp.BadLoanInfo">
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="loan_money" jdbcType="DECIMAL" property="loanMoney" />
		<result column="orderid" jdbcType="VARCHAR" property="orderId" />
		<result column="contract_num" jdbcType="VARCHAR" property="contractNum" />
		<result column="pledge_type" jdbcType="VARCHAR" property="pledgeType" />
		<result column="realname" jdbcType="VARCHAR" property="realName" />
		<result column="company_name" jdbcType="VARCHAR" property="companyName" />
		<result column="customer_name" jdbcType="VARCHAR" property="customerName" />
		<result column="dept_name" jdbcType="VARCHAR" property="deptName" />
		<result column="loan_product" jdbcType="VARCHAR" property="loanProduct" />
		<result column="loan_type" jdbcType="VARCHAR" property="loanType" />
		<result column="loan_way" jdbcType="VARCHAR" property="loanWay" />
		<result column="rest_issue" jdbcType="INTEGER" property="restIssue" />
		<result column="rest_money" jdbcType="DECIMAL" property="restMoney" />
		<result column="loan_limit_time" jdbcType="INTEGER" property="loanLimitTime" />
		<result column="repay_money" jdbcType="DECIMAL" property="repayMoney" />
		<result column="repay_interest_money" jdbcType="VARCHAR"
				property="repayInterestMoney" />
		<result column="rest_interest_money" jdbcType="VARCHAR"
				property="restInterestMoney" />
		<result column="repay_way" jdbcType="VARCHAR" property="repayWay" />
		<result column="buy_car_method" property="buyCarMethod"
				jdbcType="VARCHAR" />
		<!-- 对应的集合属性 -->
		<collection property="loanReviewInfos"
					ofType="com.utonw.dealer.api.entity.erp.LoanReviewInfo">
			<result column="review_level" property="reviewLevel" />
			<result column="reviewedByName" property="reviewedByName" />
			<result column="review_conclusion" property="reviewConclusion" />
			<result column="bad_created_at" property="createdAt" jdbcType="DATE" />
		</collection>
	</resultMap>
	<select id="queryBadLoanList"
			parameterType="com.utonw.dealer.api.dto.request.erp.BadLoanQueryRequest"
			resultMap="badLoanInfo">
		select li.uuid,li.orderid, ci.customer_name as customer_name,li.contract_num
		,loan_money,loan_product,loan_type,pledge_type,u1.realname as realname
		,d.name as dept_name,c.name as company_name
		,loan_limit_time,repay_way,
		loan_way,COALESCE(rp.arc,0)
		repay_money,COALESCE(loan_money,0)-COALESCE(rp.arc,0)
		rest_money,loan_limit_time-COALESCE(rp.rmid,0)+1 as
		rest_issue,rp.updateDate bad_created_at,
		is_important,
		ci.uuid as
		customer_id
		from loan_info li
		INNER JOIN
		user u1
		ON
		li.responsible_cm_id =
		u1.uuid
		INNER JOIN
		customer_register_info
		ci ON
		li.customer_id = ci.uuid
		INNER
		JOIN company
		c ON li.company_id=c.id
		INNER
		JOIN dept d ON
		li.dept_id=d.id

		INNER JOIN
		(select
		loanId,sum(actualRepaymentCaptialSum)
		arc,count(rmt.uuid)
		rmid,rm.uuid,rm.updateDate from
		repayment rm
		INNER JOIN repaymenttransaction
		rmt ON
		rmt.repaymentId=rm.uuid where rm.status=8 or rm.status=26 or rm.status=23 or rm.status=44 group by
		rm.loanId) rp ON
		li.uuid=rp.loanId
		where 1=1

		<if test="loanProduct != null and loanProduct != '' ">
			and li.loan_product =#{loanProduct}
		</if>
		<if test="issue != null and issue != '' ">
			and li.loan_limit_time=#{issue}
		</if>
		<if test="repayWay != null and repayWay != '' ">
			and li.repay_way=#{repayWay}
		</if>
		<if test="pledgeType != null and pledgeType != '' ">
			and li.pledge_type=#{pledgeType}
		</if>
		<if test="company != null and company != '' ">
			and li.company_id=#{company}
		</if>
		<if test="dept != null and dept != '' ">
			and li.dept_id=#{dept}
		</if>
		<if test="manager != null and manager != '' ">
			and li.responsible_cm_id=#{manager}
		</if>
		<if test="minLoanMoney != null and minLoanMoney != '' ">
			<![CDATA[
			and loan_money-rp.arc>=#{minLoanMoney} ]]>
		</if>
		<if test="maxLoanMoney != null and maxLoanMoney != '' ">
			<![CDATA[and loan_money-rp.arc<=#{maxLoanMoney} ]]>
		</if>
		<if test="dateStart != null and dateStart != '' ">
			<![CDATA[
         AND date_format(lri.created_at,'%Y-%m-%d') >= #{dateStart,jdbcType=TIMESTAMP}
            ]]>
		</if>
		<if test="dateEnd != null and dateEnd != '' ">
			<![CDATA[
         AND date_format(lri.created_at,'%Y-%m-%d') <= #{dateEnd,jdbcType=TIMESTAMP}
            ]]>
		</if>
		and li.loan_status='badLoanApplication'
		<choose>
			<when test="dataAccessLevel != null and dataAccessLevel == 0">
				and 1=0
			</when>
			<when test="dataAccessLevel != null and dataAccessLevel == 1">
				AND li.responsible_cm_id = #{uuid,jdbcType=VARCHAR}
			</when>
			<when test="dataAccessLevel != null and dataAccessLevel == 2">
				AND li.dept_id = #{deptId,jdbcType=INTEGER}
			</when>
			<when test="dataAccessLevel != null and dataAccessLevel == 3">
				AND li.company_id = #{companyId,jdbcType=INTEGER}
			</when>
		</choose>
		ORDER BY
		li.orderid
		DESC
		limit
		#{page,jdbcType=INTEGER},#{pageCount,jdbcType=INTEGER}
	</select>
	<select id="selectBadLoanInfoCount" resultType="java.util.Map"
			parameterType="com.utonw.dealer.api.dto.request.erp.BadLoanQueryRequest">
		select count(li.id) size,sum(COALESCE(li.loan_money, 0)) as
		loanMoneySum ,sum(COALESCE(rp.arc, 0)) as
		repayMoneySum,sum(COALESCE(li.loan_money, 0)-COALESCE(rp.arc, 0)) as
		badLoanSum
		from loan_info li
		LEFT JOIN
		user u1
		ON
		li.responsible_cm_id =
		u1.uuid
		LEFT JOIN
		customer_register_info
		ci ON
		li.customer_id = ci.uuid
		LEFT
		JOIN company
		c
		ON li.company_id=c.id
		LEFT
		JOIN dept d ON
		li.dept_id=d.id

		LEFT JOIN
		(select
		loanId,sum(actualRepaymentCaptialSum)
		arc,count(rmt.uuid)
		rmid,rm.uuid from
		repayment rm
		LEFT JOIN repaymenttransaction
		rmt ON
		rmt.repaymentId=rm.uuid where rm.status=8 or rm.status=26 group by
		rm.loanId) rp ON
		li.uuid=rp.loanId
		LEFT
		JOIN (select
		lrwi.created_at,lrwi.loan_id from
		loan_review_info
		lrwi
		where
		lrwi.review_level='badLoanApplication' ) lri
		on
		rp.uuid=lri.loan_id
		where 1=1

		<if test="loanProduct != null and loanProduct != '' ">
			and li.loan_product =#{loanProduct}
		</if>
		<if test="issue != null and issue != '' ">
			and li.loan_limit_time=#{issue}
		</if>
		<if test="repayWay != null and repayWay != '' ">
			and li.repay_way=#{repayWay}
		</if>
		<if test="pledgeType != null and pledgeType != '' ">
			and li.pledge_type=#{pledgeType}
		</if>
		<if test="company != null and company != '' ">
			and li.company_id=#{company}
		</if>
		<if test="dept != null and dept != '' ">
			and li.dept_id=#{dept}
		</if>
		<if test="manager != null and manager != '' ">
			and li.responsible_cm_id=#{manager}
		</if>
		<if test="minLoanMoney != null and minLoanMoney != '' ">
			<![CDATA[
			and loan_money-rp.arc>=#{minLoanMoney} ]]>
		</if>
		<if test="maxLoanMoney != null and maxLoanMoney != '' ">
			<![CDATA[and loan_money-rp.arc<=#{maxLoanMoney} ]]>
		</if>
		<if test="dateStart != null and dateStart != '' ">
			<![CDATA[
         AND date_format(lri.created_at,'%Y-%m-%d') >= #{dateStart,jdbcType=TIMESTAMP}
            ]]>
		</if>
		<if test="dateEnd != null and dateEnd != '' ">
			<![CDATA[
         AND date_format(lri.created_at,'%Y-%m-%d') <= #{dateEnd,jdbcType=TIMESTAMP}
            ]]>
		</if>
		and li.loan_status='badLoanApplication'
		<choose>
			<when test="dataAccessLevel != null and dataAccessLevel == 0">
				and 1=0
			</when>
			<when test="dataAccessLevel != null and dataAccessLevel == 1">
				AND li.responsible_cm_id = #{uuid,jdbcType=VARCHAR}
			</when>
			<when test="dataAccessLevel != null and dataAccessLevel == 2">
				AND li.dept_id = #{deptId,jdbcType=INTEGER}
			</when>
			<when test="dataAccessLevel != null and dataAccessLevel == 3">
				AND li.company_id = #{companyId,jdbcType=INTEGER}
			</when>
		</choose>
	</select>
	<select id="selectBadLoanInfoCustomerCount" resultType="int"
			parameterType="com.utonw.dealer.api.dto.request.erp.BadLoanQueryRequest">
		select count(DISTINCT customer_id) size
		from loan_info li
		LEFT JOIN
		user u1
		ON
		li.responsible_cm_id =
		u1.uuid
		LEFT JOIN
		customer_register_info
		ci ON
		li.customer_id = ci.uuid
		LEFT
		JOIN company
		c
		ON li.company_id=c.id
		LEFT
		JOIN dept d ON
		li.dept_id=d.id

		LEFT JOIN
		(select
		loanId,sum(actualRepaymentCaptialSum)
		arc,count(rmt.uuid)
		rmid,rm.uuid from
		repayment rm
		LEFT JOIN repaymenttransaction
		rmt ON
		rmt.repaymentId=rm.uuid where rm.status=8 or rm.status=26 group by
		rm.loanId) rp ON
		li.uuid=rp.loanId
		LEFT
		JOIN (select
		lrwi.created_at,lrwi.loan_id from
		loan_review_info
		lrwi
		where
		lrwi.review_level='badLoanApplication' ) lri
		on
		rp.uuid=lri.loan_id
		where 1=1
		<if test="loanProduct != null and loanProduct != '' ">
			and li.loan_product =#{loanProduct}
		</if>
		<if test="issue != null and issue != '' ">
			and li.loan_limit_time=#{issue}
		</if>
		<if test="repayWay != null and repayWay != '' ">
			and li.repay_way=#{repayWay}
		</if>
		<if test="pledgeType != null and pledgeType != '' ">
			and li.pledge_type=#{pledgeType}
		</if>
		<if test="company != null and company != '' ">
			and li.company_id=#{company}
		</if>
		<if test="dept != null and dept != '' ">
			and li.dept_id=#{dept}
		</if>
		<if test="manager != null and manager != '' ">
			and li.responsible_cm_id=#{manager}
		</if>
		<if test="minLoanMoney != null and minLoanMoney != '' ">
			<![CDATA[
			and loan_money-rp.arc>=#{minLoanMoney} ]]>
		</if>
		<if test="maxLoanMoney != null and maxLoanMoney != '' ">
			<![CDATA[and loan_money-rp.arc<=#{maxLoanMoney} ]]>
		</if>
		<if test="dateStart != null and dateStart != '' ">
			<![CDATA[
         AND date_format(lri.created_at,'%Y-%m-%d') >= #{dateStart,jdbcType=TIMESTAMP}
            ]]>
		</if>
		<if test="dateEnd != null and dateEnd != '' ">
			<![CDATA[
         AND date_format(lri.created_at,'%Y-%m-%d') <= #{dateEnd,jdbcType=TIMESTAMP}
            ]]>
		</if>
		and li.loan_status='badLoanApplication'
		<choose>
			<when test="dataAccessLevel != null and dataAccessLevel == 0">
				and 1=0
			</when>
			<when test="dataAccessLevel != null and dataAccessLevel == 1">
				AND li.responsible_cm_id = #{uuid,jdbcType=VARCHAR}
			</when>
			<when test="dataAccessLevel != null and dataAccessLevel == 2">
				AND li.dept_id = #{deptId,jdbcType=INTEGER}
			</when>
			<when test="dataAccessLevel != null and dataAccessLevel == 3">
				AND li.company_id = #{companyId,jdbcType=INTEGER}
			</when>
		</choose>
	</select>
	<select id="selectForExportBadLoanList"
			parameterType="com.utonw.dealer.api.dto.request.erp.BadLoanQueryRequest"
			resultMap="badLoanInfoMap">
		select li.uuid,orderid,
		ci.customer_name as customer_name
		,loan_money,loan_product,loan_type,pledge_type,u1.realname as realname
		,d.name as dept_name,c.name as company_name
		,loan_limit_time,repay_way,buy_car_method,
		loan_way,IFNULL(rp.arc,0)
		repay_money,IFNULL(rp.rim,0)
		repay_interest_money,IFNULL(loan_money-rp.arc,0)
		rest_money,loan_limit_time-rp.rmid+1
		rest_issue,
		IFNULL(rpl.rpit-rp.rim,0)
		rest_interest_money,
		lri.review_conclusion,
		review_level,lri.created_at
		as bad_created_at,
		reviewed_by_id,
		u.realname as reviewedByName
		from
		loan_info
		li
		LEFT JOIN
		user u1
		ON
		li.responsible_cm_id =
		u1.uuid
		LEFT JOIN
		customer_register_info ci ON li.customer_id = ci.uuid
		LEFT JOIN company
		c ON li.company_id=c.id
		LEFT JOIN dept d ON li.dept_id=d.id
		LEFT JOIN
		(select
		rm.loanId,sum(actualRepaymentCaptialSum)
		arc,sum(actualRepaymentInterestSum) rim,count(rmt.uuid)
		rmid from
		repayment rm
		LEFT JOIN repaymenttransaction
		rmt ON
		rmt.repaymentId=rm.uuid group by
		rm.loanId)
		rp ON
		li.uuid=rp.loanId
		LEFT
		JOIN
		(select sum(repayInterest) rpit ,rpp.loanId
		from
		repayplandetail rpd
		LEFT JOIN repayplan rpp ON rpp.id=rpd.repayPlanId group by rpp.loanId)
		rpl ON rpl.loanId=li.uuid
		LEFT JOIN loan_review_info lri on
		li.uuid=lri.loan_id
		LEFT JOIN user u
		on u.uuid=reviewed_by_id
		where
		1=1
		<if test="loanProduct != null and loanProduct != '' ">
			and li.loan_product =#{loanProduct}
		</if>
		<if test="issue != null and issue != '' ">
			and li.loan_limit_time=#{issue}
		</if>
		<if test="repayWay != null and repayWay != '' ">
			and li.repay_way=#{repayWay}
		</if>
		<if test="pledgeType != null and pledgeType != '' ">
			and li.pledge_type=#{pledgeType}
		</if>
		<if test="company != null and company != '' ">
			and li.company_id=#{company}
		</if>
		<if test="dept != null and dept != '' ">
			and li.dept_id=#{dept}
		</if>
		<if test="manager != null and manager != '' ">
			and li.responsible_cm_id=#{manager}
		</if>
		<if test="minLoanMoney != null and minLoanMoney != '' ">
			<![CDATA[
			and loan_money-rp.arc>=#{minLoanMoney} ]]>
		</if>
		<if test="maxLoanMoney != null and maxLoanMoney != '' ">
			<![CDATA[and loan_money-rp.arc<=#{maxLoanMoney} ]]>
		</if>
		<if test="dateStart != null and dateStart != '' ">
			<![CDATA[
         AND date_format(lri.created_at,'%Y-%m-%d') >= #{dateStart,jdbcType=TIMESTAMP}
            ]]>
		</if>
		<if test="dateEnd != null and dateEnd != '' ">
			<![CDATA[
         AND date_format(lri.created_at,'%Y-%m-%d') <= #{dateEnd,jdbcType=TIMESTAMP}
            ]]>
		</if>
		and li.loan_status='badLoanApplication'
		order by li.orderid desc
	</select>
	<select id="selectRepaymentInfoList"
			parameterType="com.utonw.dealer.api.dto.request.erp.RepaymentQueryRequest"
			resultMap="repaymentInfo">
		SELECT
		li.uuid,
		li.uuid AS loanId,
		li.loan_product,
		li.buy_car_method,
		li.repay_way,
		li.pledge_type,
		li.orderid AS order_id,
		li.contract_num AS contract_num,
		rpd.repayPeriod,
		rpd.repayDate,
		li.loan_money AS loan_money,
		li.loan_limit_time AS loan_time,
		rpm1.uuid AS repaymentId,
		rpm1. STATUS AS repaymentStatus,
		COALESCE (li.loan_money-rpt_sumC.sumCaptial, 0) AS rest_loan_money,
		COALESCE (rpd.repayCapital, 0) AS repay_captial,
		COALESCE (rpd.repayInterest, 0) AS repay_interest,
		COALESCE (rpd.overdueFee, 0) AS overdue_fee,
		COALESCE (rpd.repayTotal, 0)
		AS sum_money,
		li.ended_at AS gmtRepaymentEnded,
		li.chargedoff_at AS gmtFirstRepayment,
		COALESCE (rpmt1.actualRepaymentSum, 0) AS actual_repayment_sum,
		ci.customer_name AS customer_name,
		u1.realname AS manager_name,
		rpmt1.createDay AS gmt_actual_repay,
		COALESCE (rpd.depreciationFee, 0) + COALESCE (rpd.drunkDrive, 0) AS manage_fee_sum,
		replanDetaiId,
		rpm1.repaymentType,
		loan_status,
		rpm1.repayPlanId,
		rpm1.isRepay,li.customer_id,
		rpm2.repayDate lastRepayDate,
		flowassign.NAME_ AS workName
		FROM
		repayplandetail rpd
		LEFT JOIN repayplan rp ON rpd.repayPlanId = rp.id
		LEFT JOIN loan_info li ON rp.loanId = li.uuid
		LEFT JOIN customer_register_info ci ON li.customer_id = ci.uuid
		LEFT JOIN USER u1 ON li.responsible_cm_id = u1.uuid
		LEFT JOIN company c ON li.company_id = c.id
		LEFT JOIN dept d ON li.dept_id = d.id
		LEFT JOIN (
		SELECT
		rpm.replanDetaiId,
		rpm.uuid,
		rpm.status,
		rpm.repaymentType,
		rpd.repayPlanId,
		rpd.isRepay,
		rpd.repayDate
		FROM
		(select  replanDetaiId ,uuid, id, status,repaymentType,loanId,remark from repayment a INNER join  (select max(b.id) as ids from repayment b GROUP BY replanDetaiId) c  on c.ids=a.id) rpm
		LEFT JOIN repayplandetail rpd ON rpd.id = rpm.replanDetaiId
		WHERE
		DATE_FORMAT(rpd.repayDate, '%Y%m') =  #{dateRange} GROUP BY replanDetaiId) rpm1 ON
		rpd.id=rpm1.replanDetaiId
		LEFT JOIN repaymenttransaction rpmt1 ON	rpmt1.repaymentId = rpm1.uuid
		LEFT JOIN (
		SELECT sum(rpt.actualRepaymentCaptialSum) sumCaptial,rpd.repayPlanId
		FROM repaymenttransaction rpt
		LEFT JOIN repayment rt ON rt.uuid = rpt.repaymentId
		LEFT JOIN repayplandetail rpd ON rt.replanDetaiId = rpd.id
		where DATE_FORMAT(rpd.repayDate, '%Y%m')&lt;=#{dateRange}
		GROUP BY rpd.repayPlanId
		)rpt_sumC ON rpt_sumC.repayPlanId = rpd.repayPlanId
			LEFT JOIN(SELECT rpd.repayDate ,rpm.loanId,rpm.UUID FROM
		(SELECT  replanDetaiId ,UUID, id, STATUS,repaymentType,loanId,remark
		FROM repayment a 
		INNER JOIN   (SELECT MAX(b.id) AS ids FROM repayment b GROUP BY b.loanId) c  ON c.ids=a.id) rpm 
		INNER JOIN repayplandetail rpd  ON rpm.replanDetaiId=rpd.id)  rpm2  ON  rpm2.loanId=li.UUID
		LEFT JOIN
		(SELECT are.BUSINESS_KEY_,u3.realname, are.ACT_ID_,art.NAME_ FROM ((act_ru_execution are
		INNER JOIN act_ru_task art ON art.EXECUTION_ID_= are.ID_)
		INNER JOIN loan_info li2  ON li2.UUID = are.BUSINESS_KEY_)
		LEFT JOIN USER u3 ON u3.UUID = art.ASSIGNEE_ GROUP BY are.BUSINESS_KEY_
		UNION
		SELECT rpm.loanId,u4.realname,are2.ACT_ID_,art2.NAME_ FROM ((repayment rpm
		INNER JOIN act_ru_execution are2 ON are2.BUSINESS_KEY_= rpm.UUID)
		INNER JOIN act_ru_task art2 ON art2.EXECUTION_ID_= are2.ID_)
		LEFT JOIN USER u4 ON u4.UUID=art2.ASSIGNEE_
		) AS flowassign ON flowassign.BUSINESS_KEY_=li.UUID
		where 1=1 and li.chargedoff_at is not null and DATE_FORMAT(rpd.repayDate, '%Y%m') = #{dateRange} and date_format(li.chargedoff_at,'%Y%m')&lt;=#{dateRange}
		<!-- and date_format(DATE_ADD(li.chargedoff_at,INTERVAL li.loan_limit_time MONTH),'%Y%m') &gt;=#{dateRange}-->
		and rpd.repayPeriod>0

		<if test="company != null and company != '' ">
			and li.company_id=#{company}
		</if>
		<if test="dept != null and dept != '' ">
			and li.dept_id=#{dept}
		</if>
		<if test="manager != null and manager != '' ">
			and li.responsible_cm_id=#{manager}
		</if>
		<if test="contractNum !=null and contractNum != ''">
			AND li.contract_num LIKE CONCAT('%', #{contractNum},'%')
		</if>
		<if test="repayStatus=='true'">
		<!-- 	and rpd.id in (select replanDetaiId from repayment rpt
			left join repayplandetail rpdd on rpt.replanDetaiId=rpdd.id where
			DATE_FORMAT(rpdd.repayDate, '%Y%m') = #{dateRange} -->
			and rpmt1.actualRepaymentSum is NOT NULL
		</if>
		<if test="repayStatus=='false'">
			<!-- and rpd.id not in (select replanDetaiId from repayment rpt
			left join repayplandetail rpdd on rpt.replanDetaiId=rpdd.id where
			DATE_FORMAT(rpdd.repayDate, '%Y%m') = #{dateRange}-->
			and rpmt1.actualRepaymentSum is NULL
		</if>
		<if test="customerName!=null and customerName!=''">
			AND ci.customer_name LIKE CONCAT('%', #{customerName},'%')
		</if>

		<if test="repayPlanIds!=null and repayPlanIds.size()>0">and li.uuid not in
			<foreach collection="repayPlanIds" item="id" separator="," open="("
					 close=")">
				#{id}
			</foreach>
		</if>
		order by li.contract_num desc
		limit
		#{pageStart,jdbcType=INTEGER},#{pageEnd,jdbcType=INTEGER}
	</select>
	<select id="selectRepaymentInfoCount" resultType="java.util.Map"
			parameterType="com.utonw.dealer.api.dto.request.erp.RepaymentQueryRequest">
		SELECT
		count(*) AS size,
		sum(
		item.sum_money
		) AS repayMoneySum,
		sum(
		COALESCE (item.actual_repayment_sum, 0)
		) AS actualMoneySum
		FROM
		(
		SELECT
		li.uuid,
		li.uuid AS loanId,
		li.loan_product,
		li.buy_car_method,
		li.repay_way,
		li.pledge_type,
		li.orderid AS order_id,
		rpd.repayPeriod,
		li.loan_money AS loan_money,
		li.loan_limit_time AS loan_time,
		rpm1.uuid AS repaymentId,
		rpm1. STATUS AS repaymentStatus,
		COALESCE (rpd.surplusCapital, 0) AS rest_loan_money,
		COALESCE (rpd.repayCapital, 0) AS repay_captial,
		COALESCE (rpd.repayInterest, 0) AS repay_interest,
		COALESCE (rpd.overdueFee, 0) AS overdue_fee,
		COALESCE (rpd.repayCapital, 0)
		+ COALESCE (rpd.overdueFee, 0)
		+ COALESCE (rpd.repayInterest, 0)
		+ COALESCE (rpd.depreciationFee, 0)
		+ COALESCE (rpd.checkCost, 0)
		+ COALESCE (rpd.parkCost, 0)
		+ COALESCE (rpd.cashdepositFee, 0)
		+ COALESCE (rpd.penaltyFee, 0)
		+ COALESCE (rpd.gpsCost, 0)
		+COALESCE (rpd.manageFee, 0)
		AS sum_money,
		li.ended_at AS gmtRepaymentEnded,
		li.chargedoff_at AS gmtFirstRepayment,
		COALESCE (rpmt1.actualRepaymentSum, 0) AS actual_repayment_sum,
		ci.customer_name AS customer_name,
		u1.realname AS manager_name,
		rpmt1.createDay AS gmt_actual_repay,
		COALESCE (rpd.depreciationFee, 0) + COALESCE (rpd.drunkDrive, 0) AS manage_fee_sum,
		replanDetaiId
		FROM
		repayplandetail rpd
		LEFT JOIN repayplan rp ON rpd.repayPlanId = rp.id
		LEFT JOIN loan_info li ON rp.loanId = li.uuid
		LEFT JOIN customer_register_info ci ON li.customer_id = ci.uuid
		LEFT JOIN USER u1 ON li.responsible_cm_id = u1.uuid
		LEFT JOIN company c ON li.company_id = c.id
		LEFT JOIN dept d ON li.dept_id = d.id
		LEFT JOIN (
		SELECT
		rpm.replanDetaiId,
		rpm.uuid,
		rpm.status
		FROM
		(select  replanDetaiId ,uuid, id, status,repaymentType,loanId,remark from repayment a INNER join  (select max(b.id) as ids from repayment b GROUP BY replanDetaiId) c  on c.ids=a.id) rpm
		LEFT JOIN repayplandetail rpd ON rpd.id = rpm.replanDetaiId
		WHERE
		DATE_FORMAT(rpd.repayDate, '%Y%m') =  #{dateRange} GROUP BY replanDetaiId) rpm1 ON
		rpd.id=rpm1.replanDetaiId
		LEFT JOIN repaymenttransaction rpmt1
		ON
		rpmt1.repaymentId = rpm1.uuid
		where 1=1 and li.chargedoff_at is not null and DATE_FORMAT(rpd.repayDate, '%Y%m') = #{dateRange} and date_format(li.chargedoff_at,'%Y%m') &lt;=#{dateRange}
		<!-- and date_format(DATE_ADD(li.chargedoff_at,INTERVAL li.loan_limit_time MONTH),'%Y%m')&gt;=#{dateRange}-->
		and rpd.repayPeriod>0
		<if test="company != null and company != '' ">
			and li.company_id=#{company}
		</if>
		<if test="dept != null and dept != '' ">
			and li.dept_id=#{dept}
		</if>
		<if test="manager != null and manager != '' ">
			and li.responsible_cm_id=#{manager}
		</if>
		<if test="contractNum !=null and contractNum!= ''">
			AND li.contract_num LIKE CONCAT('%', #{contractNum},'%')
		</if>
		<if test="repayStatus=='true'">
<!-- 			and rpd.id in (select replanDetaiId from repayment rpt left join
			repayplandetail rpdd on rpt.replanDetaiId=rpdd.id where
			DATE_FORMAT(rpdd.repayDate, '%Y%m') = #{dateRange}and status =8) -->
			and rpmt1.actualRepaymentSum is NOT NULL
		</if>
		<if test="repayStatus=='false'">
			<!-- and rpd.id not in (select replanDetaiId from repayment rpt
			left join repayplandetail rpdd on rpt.replanDetaiId=rpdd.id where
			DATE_FORMAT(rpdd.repayDate, '%Y%m') = #{dateRange}and status =8) -->
			and rpmt1.actualRepaymentSum is NULL
		</if>
		<if test="customerName!=null and customerName!=''">
			AND ci.customer_name LIKE CONCAT('%', #{customerName},'%')
		</if>
		<if test="repayPlanIds!=null and repayPlanIds.size()>0">
			and li.uuid not in
			<foreach collection="repayPlanIds" item="id" separator="," open="("
					 close=")">
				#{id}
			</foreach>
		</if>
		) item
	</select>
	<resultMap type="com.utonw.dealer.api.entity.erp.RepaymentInfo"
			   id="repaymentInfo">
		<result column="customer_name" property="customerName"
				jdbcType="VARCHAR" />
		<result column="manager_name" property="managerName" jdbcType="VARCHAR" />
		<result column="order_id" property="orderId" jdbcType="VARCHAR" />
		<result column="loan_money" property="loanMoney" jdbcType="DECIMAL" />
		<result column="loan_time" property="loanTime" jdbcType="VARCHAR" />
		<result column="rest_loan_money" property="restLoanMoney"
				jdbcType="DECIMAL" />
		<result column="repay_captial" property="repayCapital"
				jdbcType="DECIMAL" />
		<result column="repay_interest" property="repayInterest"
				jdbcType="DECIMAL" />
		<result column="overdue_fee" property="overdueFee" jdbcType="DECIMAL" />
		<result column="sum_money" property="sumMoney" jdbcType="DECIMAL" />
		<result column="actual_repayment_sum" property="actualRepaymentSum"
				jdbcType="DECIMAL" />
		<result column="gmt_actual_repay" property="gmtActualRepay"
				jdbcType="DATE" />
		<result column="loan_product" property="loanProduct" jdbcType="VARCHAR" />
		<result column="buy_car_method" property="buyCarMethod"
				jdbcType="VARCHAR" />
		<result column="repay_way" property="repayWay" jdbcType="VARCHAR" />
		<result column="pledge_type" property="pledgeType" jdbcType="VARCHAR" />
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="repayPeriod" property="repayPeriod" jdbcType="VARCHAR" />
		<result column="dept_name" property="deptName" jdbcType="VARCHAR" />
		<result column="company_name" property="companyName" jdbcType="VARCHAR" />
		<result column="is_important" property="isImportant" jdbcType="VARCHAR" />
		<result column="customer_id" property="customerId" jdbcType="VARCHAR" />
		<result column="manage_fee_sum" property="manageFeeSum"
				jdbcType="DECIMAL" />
		<result column="gmtRepaymentEnded" property="gmtRepaymentEnded"
				jdbcType="DATE" />
		<result column="gmtFirstRepayment" property="gmtFirstRepayment"
				jdbcType="DATE" />
		<result column="loanId" property="loanId" jdbcType="VARCHAR" />
		<result column="repaymentId" property="repaymentId" jdbcType="VARCHAR" />
		<result column="repaymentStatus" property="repaymentStatus"
				jdbcType="INTEGER" />
		<result column="loan_status" property="loanStatus" jdbcType="VARCHAR"/>
		<result column="contract_num" property="contractNum" jdbcType="VARCHAR" />
		<result column="checkCost" property="checkCost" jdbcType="DECIMAL" />
		<result column="parkCost" property="parkCost" jdbcType="DECIMAL" />
		<result column="cashdepositFee" property="cashdepositFee" jdbcType="DECIMAL" />
		<result column="penaltyFee" property="penaltyFee" jdbcType="DECIMAL" />
		<result column="gpsCost" property="gpsCost" jdbcType="DECIMAL" />
		<result column="repayPlanId" property="repayPlanId" jdbcType="VARCHAR"/>
		<result column="isRepay" property="isRepay" jdbcType="VARCHAR"/>
		<result column="drunkDrive" property="drunkDrive" jdbcType="DECIMAL"/>
		<result column="repayDate" property="repayDate" jdbcType="DATE"/>
		<result column="lastRepayDate" property="lastRepayDate" jdbcType="DATE"/>
		<result column="workName" property="workName" jdbcType="VARCHAR"/>
 	</resultMap>
	<!--贷后订单列表-->
	<resultMap type="com.utonw.dealer.api.entity.erp.LoanInfoForRepayment"
			   id="loanInfoRepayment">
		<result column="repId" property="repId" jdbcType="VARCHAR" />
		<result column="taskId" property="taskId" jdbcType="VARCHAR" />
		<result column="activityId" property="activityId" jdbcType="VARCHAR" />
		<result column="customerId" property="customerId" jdbcType="VARCHAR" />
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="orderid" property="orderid" jdbcType="VARCHAR" />
		<result column="customer_name" property="customer_name" jdbcType="VARCHAR" />
		<result column="repayDate" property="repayDate" jdbcType="DATE" />
		<result column="repaymentSum" property="repaymentSum" jdbcType="DECIMAL" />
		<result column="loan_status" property="loan_status" jdbcType="VARCHAR" />
		<result column="is_important" property="is_important" jdbcType="TINYINT" />
		<result column="state" property="state" jdbcType="TINYINT" />
		<result column="clientManager" property="clientManager" jdbcType="VARCHAR" />
		<result column="principalName" property="principalName" jdbcType="VARCHAR" />
		<result column="repayPeriod" property="repayPeriod" jdbcType="INTEGER" />
		<result column="repaydiff" property="repaydiff" jdbcType="INTEGER" />
		<result column="taskName" property="taskName" jdbcType="VARCHAR" />
		<result column="assignee" property="assignee" jdbcType="VARCHAR" />
	</resultMap>
	<!--工作流信息查询-->
	<resultMap type="com.utonw.dealer.api.entity.erp.WorkFlowView"
			   id="WorkFlowView">
		<result column="assignee" property="assignee" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="activityId" property="activityId" jdbcType="VARCHAR" />
		<result column="groupId" property="groupId" jdbcType="VARCHAR" />
		<result column="bussinessKey" property="bussinessKey" jdbcType="VARCHAR" />
		<result column="taskId" property="taskId" jdbcType="VARCHAR" />
	</resultMap>
	<!--贷前订单列表信息-->
	<resultMap type="com.utonw.dealer.api.entity.erp.VehicleLoanInfo"
			   id="VehicleLoanInfo">
		<result column="assignee" property="assignee" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="activityId" property="activityId" jdbcType="VARCHAR" />
		<result column="loan_status" property="loan_status" jdbcType="VARCHAR" />
		<result column="taskId" property="taskId" jdbcType="VARCHAR" />
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="orderid" property="orderid" jdbcType="VARCHAR" />
		<result column="pledge_type" property="pledge_type" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="is_important" property="is_important" jdbcType="TINYINT" />
		<result column="create_by" property="create_by" jdbcType="VARCHAR" />
		<result column="principalName" property="principalName" jdbcType="VARCHAR" />
		<result column="customer_name" property="customer_name" jdbcType="VARCHAR" />
		<result column="customerId" property="customerId" jdbcType="VARCHAR" />
		<result column="created_at" property="created_at" jdbcType="DATE" />
		<result column="customerIdCard" property="customerIdCard" jdbcType="VARCHAR" />
		<result column="procKey" property="procKey" jdbcType="VARCHAR" />
		<result column="businessKey" property="businessKey" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="loanStatusCount" type="com.utonw.dealer.api.entity.erp.LoanStatusCount">
		<result column="count" property="count" jdbcType="INTEGER" />
		<result column="activityId" property="activityId" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectRepaymentInfoForExport"
			parameterType="com.utonw.dealer.api.dto.request.erp.RepaymentQueryRequest"
			resultMap="repaymentInfo">
		select
		li.uuid,li.uuid AS loanId,li.loan_product,li.buy_car_method,li.repay_way,li.pledge_type,li.orderid AS order_id,li.contract_num AS contract_num,
		rpd.repayPeriod,li.loan_money AS loan_money,li.loan_limit_time AS loan_time,COALESCE (li.loan_money-rpt_sumC.sumCaptial, 0) AS rest_loan_money,
		COALESCE (rpd.repayCapital, 0) AS repay_captial,COALESCE (rpd.repayInterest, 0) AS repay_interest,COALESCE (rpd.overdueFee,0) AS overdue_fee,
		COALESCE (rpd.checkCost,0) AS checkCost,COALESCE (rpd.parkCost,0) AS parkCost,COALESCE (rpd.towCost,0) AS towCost,
		COALESCE (rpd.cashdepositFee,0) AS cashdepositFee,COALESCE (rpd.penaltyFee,0) AS penaltyFee,COALESCE (rpd.gpsCost,0) AS gpsCost,
		COALESCE (rpd.drunkDrive,0) AS drunkDrive,
		COALESCE (rpd.repayCapital, 0) + COALESCE (rpd.overdueFee,0) + COALESCE (rpd.repayInterest, 0) + COALESCE (rpd.depreciationFee,0) +
		COALESCE (rpd.checkCost,0) + COALESCE (rpd.parkCost,0) + COALESCE (rpd.towCost,0) + COALESCE (rpd.cashdepositFee,0) +
		COALESCE (rpd.penaltyFee,0) + COALESCE (rpd.gpsCost,0) + COALESCE (rpd.manageFee,0) + COALESCE (rpd.drunkDrive,0) AS sum_money,
		COALESCE (rpmt1.actualRepaymentSum, 0) AS actual_repayment_sum,ci.customer_name AS customer_name,u1.realname AS manager_name,rpmt1.createDay AS gmt_actual_repay,
		d. NAME AS dept_name,c. NAME AS company_name,COALESCE (rpd.depreciationFee,0)  + COALESCE (rpd.manageFee,0) AS manage_fee_sum,li.ended_at AS gmtRepaymentEnded,
		li.chargedoff_at AS gmtFirstRepayment,rpm1.repayPlanId,rpm1.isRepay
		from repayplandetail rpd
		LEFT JOIN repayplan rpp ON rpd.repayPlanId = rpp.id
		LEFT JOIN loan_info li ON rpp.loanId = li.uuid and
		DATE_FORMAT(rpd.repayDate, '%Y%m') = #{dateRange}
		LEFT JOIN
		(select
		rpm.replanDetaiId,rpm.uuid,rpd.repayPlanId,rpd.isRepay from
		(select  replanDetaiId ,uuid, id, status,repaymentType,loanId,remark from repayment a INNER join  
		(select max(b.id) as ids from repayment b GROUP BY replanDetaiId) c  on c.ids=a.id) rpm  left join repayplandetail rpd on rpd.id=rpm.replanDetaiId where
		DATE_FORMAT(rpd.repayDate, '%Y%m') = #{dateRange} GROUP BY replanDetaiId)
		rpm1 ON
		rpd.id=rpm1.replanDetaiId
		LEFT JOIN repaymenttransaction  rpmt1
		ON
		rpmt1.repaymentId = rpm1.uuid
		LEFT
		JOIN customer_register_info ci ON
		li.customer_id = ci.uuid
		LEFT JOIN
		user u1 ON li.responsible_cm_id =
		u1.uuid
		LEFT JOIN company c ON li.company_id=c.id
		LEFT JOIN dept d ON li.dept_id=d.id
		LEFT JOIN
		(
		SELECT sum(rpt.actualRepaymentCaptialSum) sumCaptial,rpd.repayPlanId
		FROM repaymenttransaction rpt
		LEFT JOIN repayment rt ON rt.uuid = rpt.repaymentId
		LEFT JOIN repayplandetail rpd ON rt.replanDetaiId = rpd.id
		where	DATE_FORMAT(rpd.repayDate, '%Y%m') &lt;=#{dateRange}
		GROUP BY rpd.repayPlanId
		)rpt_sumC ON rpt_sumC.repayPlanId = rpd.repayPlanId
		where 1=1 and li.chargedoff_at is
		not null and date_format(li.chargedoff_at,'%Y%m')&lt;=#{dateRange}
		<!--  and
		date_format(DATE_ADD(li.chargedoff_at,INTERVAL li.loan_limit_time
		MONTH),'%Y%m')&gt;=#{dateRange}-->
		<if test="company != null and company != '' ">
			and li.company_id=#{company}
		</if>
		<if test="dept != null and dept != '' ">
			and li.dept_id=#{dept}
		</if>
		<if test="manager != null and manager != '' ">
			and li.responsible_cm_id=#{manager}
		</if>
		<if test="contractNum !=null and contractNum != ''">
			AND li.contract_num LIKE CONCAT('%', #{contractNum},'%')
		</if>
		<if test="repayStatus=='true'">
			and rpd.id in (select replanDetaiId from repayment rpt left join
			repayplandetail rpdd on rpt.replanDetaiId=rpdd.id where
			DATE_FORMAT(rpdd.repayDate, '%Y%m') = #{dateRange}and status =8)
		</if>
		<if test="repayStatus=='false'">
			and rpd.id not in (select replanDetaiId from repayment rpt left join
			repayplandetail rpdd on rpt.replanDetaiId=rpdd.id where
			DATE_FORMAT(rpdd.repayDate, '%Y%m') = #{dateRange}and status =8)
		</if>
		<if test="customerName!=null and customerName!=''">
			AND ci.customer_name LIKE CONCAT('%', #{customerName},'%')
		</if>
		<if test="repayPlanIds!=null and repayPlanIds.size()>0">
			and li.uuid not in
			<foreach collection="repayPlanIds" item="id" separator="," open="("
					 close=")">
				#{id}
			</foreach>
		</if>
		order by li.contract_num desc
	</select>
	<select id="selectBadReviewInfo" resultType="java.util.HashMap">
		select rp.loanId loan_id, lri.created_at createAt,review_conclusion
		reviewConclusion ,u1.realname name from repayment rp left join
		loan_review_info lri on rp.uuid=lri.loan_id left join user u1 on
		u1.uuid=reviewed_by_id where review_level='badLoanApplication'
		or lri.review_status = 'badLoanApplication' and
		rp.loanId in
		<foreach collection="list" item="id" separator="," open="("
				 close=")">
			#{id}
		</foreach>
	</select>

	<select id="selectLastRepaymentInfo" resultType="java.util.HashMap">
		select max(rpd.repayDate) as gmt,rp.loanId as uuid from repayplan rp
		left join repayplandetail rpd on rpd.repayPlanId=rp.id where rp.loanId
		in
		<foreach collection="list" item="id" separator="," open="("
				 close=")">
			#{id}
		</foreach>
		GROUP BY loanId
	</select>

	<update id="deleteByIds">
		update loan_info_attachment set is_valid=0 where 1=1
		<if test="list.size > 0">
			and id in
			<foreach collection="list" item="item" separator="," open="("
					 close=")" index="">
				#{item}
			</foreach>
		</if>
	</update>

	<select id="selectLoanB2BInfoDetail" parameterType="map"
			resultMap="loanB2BInfo">
		SELECT li.orderid,cri.customer_name,li.loan_money,co.NAME,rpb.repayStatus AS loanStatus,
		rpb.isReminder as isReminder,rpb.period,li.UUID,li.customer_id
		FROM repayplanb2b rb
		LEFT JOIN loan_info li ON rb.loanId = li.UUID
		LEFT JOIN customer_register_info cri ON cri.UUID = li.customer_id
		LEFT JOIN company co ON co.id = cri.company_id
		INNER JOIN (
		SELECT rb1.*,IF (
		NOW() > rb2.repayDate,
		'OVER_DUE',
		rb1.loanStatus
		) AS repayStatus
		FROM repayplanb2b rb1
		INNER JOIN (
		SELECT rp1.*
		FROM repayplanb2b rp1
		INNER JOIN (
		SELECT MAX(id) ids
		FROM repayplanb2b GROUP BY loanId)rp2 ON rp1.id=rp2.ids
		) rb2 ON rb1.id=rb2.id )rpb ON rpb.loanId = li.UUID
		WHERE 1=1
		<if test="orderId != null and orderId != '' ">
			AND li.orderid LIKE CONCAT('%', #{orderId},'%')
		</if>
		<if test="companyName != null and companyName != '' ">
			AND co.name LIKE CONCAT('%', #{companyName},'%')
		</if>
		<if test="loanStatus != null and loanStatus != '' ">
			AND rpb.repayStatus = #{loanStatus}
		</if>
		GROUP BY li.UUID
		ORDER BY li.orderid DESC
	</select>
	<select id="queryMainCount" parameterType="map" resultMap="mainCount">
		SELECT
		(
		SELECT
		SUM(loan_money)
		FROM
		loan_info li
		WHERE
		DATE_FORMAT(li.chargedoff_at, '%Y-%m') = DATE_FORMAT(now(), '%Y-%m')
		) AS monthReality,
		(
		SELECT
		SUM(loan_money)
		FROM
		loan_info li
		WHERE
		DATE_FORMAT(li.chargedoff_at, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
		) AS monthIncreased
	</select>
	<select id="selectRepaymentInfoByRepaymentId"
			resultMap="repaymentInfo">
		SELECT
		li.uuid,
		li.uuid AS loanId,
		li.loan_product,
		li.buy_car_method,
		li.repay_way,
		li.pledge_type,
		li.orderid AS order_id,
		li.contract_num AS contract_num,
		rpd.repayPeriod,
		li.loan_money AS loan_money,
		li.loan_limit_time AS loan_time,
		rpm1.uuid AS repaymentId,
		rpm1. STATUS AS repaymentStatus,
		COALESCE (rpd.surplusCapital, 0) AS rest_loan_money,
		COALESCE (rpd.repayCapital, 0) AS repay_captial,
		COALESCE (rpd.repayInterest, 0) AS repay_interest,
		COALESCE (rpd.overdueFee, 0) AS overdue_fee,
		COALESCE (rpd.repayTotal, 0)
		AS sum_money,
		li.ended_at AS gmtRepaymentEnded,
		li.chargedoff_at AS gmtFirstRepayment,
		COALESCE (rpmt1.actualRepaymentSum, 0) AS actual_repayment_sum,
		ci.customer_name AS customer_name,
		u1.realname AS manager_name,
		rpmt1.createDay AS gmt_actual_repay,
		COALESCE (rpd.depreciationFee, 0) + COALESCE (rpd.drunkDrive, 0) AS manage_fee_sum,
		replanDetaiId,
		rpm1.repaymentType,
		loan_status
		FROM
		repayplandetail rpd
		LEFT JOIN repayplan rp ON rpd.repayPlanId = rp.id
		LEFT JOIN loan_info li ON rp.loanId = li.uuid
		LEFT JOIN customer_register_info ci ON li.customer_id = ci.uuid
		LEFT JOIN USER u1 ON li.responsible_cm_id = u1.uuid
		LEFT JOIN company c ON li.company_id = c.id
		LEFT JOIN dept d ON li.dept_id = d.id
		LEFT JOIN  repayment rpm1 ON rpd.id=rpm1.replanDetaiId
		LEFT JOIN repaymenttransaction rpmt1 ON rpmt1.repaymentId = rpm1.uuid
		where rpm1.uuid=#{param1}
	</select>
	<select id="selectLoanInfoByLoanId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from loan_info where uuid=#{param1}
	</select>
	<select id="selectLoanStatusByLoanId" resultType="java.lang.String">
		select loan_status from loan_info where uuid=#{param1}
	</select>

	<select id="queryLoanMoneyByCompanyId" parameterType="java.lang.Integer" resultType="java.math.BigDecimal">
		SELECT
		SUM(li.loan_money)
		FROM loan_info li
		LEFT JOIN groupcompany_loaninfo gli ON gli.loanId = li.uuid
		LEFT JOIN company co ON co.id = li.company_id
		WHERE co.id = #{companyId}
		AND gli.loankind IN('helploan','reloan')
		AND li.is_chargedoff = 1
	</select>
	<select id="queryLoanAfterList" parameterType="Map" resultMap="loanInfoRepayment">
		SELECT * FROM (
		SELECT
		wv.BUSINESS_KEY_ AS repId,wv.TASKID AS taskId ,wv.TASK_DEF_KEY_ AS activityId, ry.loanId AS uuid, li.orderid,cri.customer_name,date_format(rpd.repayDate,'%Y-%m-%d') AS repayDate,rpd.repayTotal AS repaymentSum,li.loan_status,
		cri.is_important,IFNULL(ry.is_overdue,0) AS state, u1.realname AS clientManager, u2.realname AS principalName,rpd.repayPeriod,
		(TO_DAYS(rpd.repayDate)-TO_DAYS(NOW())) AS repaydiff,li.customer_id as customerId,wv.NAME_ AS taskName,wv.ASSIGNEE_ AS assignee
		FROM
		(((((((workflowview wv
		INNER JOIN repayment ry ON ry.uuid = wv.BUSINESS_KEY_)
		INNER JOIN loan_info li ON li.uuid = ry.loanId)
		INNER JOIN customer_register_info cri ON cri.uuid = li.customer_id)
		INNER JOIN repayplandetail rpd ON rpd.id = ry.replanDetaiId)
		INNER JOIN user u1 ON u1.uuid = li.responsible_cm_id)
		INNER JOIN dept d ON d.id = li.dept_id)
		INNER JOIN user u2 ON u2.uuid = d.principal_id)
		WHERE
		wv.ASSIGNEE_ = #{userId}
		<if test="orderNo !=null and orderNo !=''">
			AND li.orderid LIKE CONCAT('%',#{orderNo,jdbcType=VARCHAR},'%' )
		</if>
		<if test="customerName !=null and customerName !=''">
			AND cri.customer_name LIKE CONCAT('%',#{customerName,jdbcType=VARCHAR},'%' )
		</if>
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId,
				jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{companyId,jdbcType=INTEGER}
			</when>
		</choose>
		<choose>
			<when test="pledgeType != null and pledgeType == 'repayment'">
				AND TO_DAYS(rpd.repayDate)-TO_DAYS(NOW())>=0
			</when>
			<when test="pledgeType != null and pledgeType == 'yuqi'">
				AND TO_DAYS(rpd.repayDate)-TO_DAYS(NOW())&lt;0
			</when>
		</choose>
		<choose>
			<when test="status != null and status == 'overDueTodayOrder'">
				<![CDATA[
                AND TO_DAYS(date_format(now(),'%Y-%m-%d')) - TO_DAYS(date_format(rpd.repayDate,'%Y-%m-%d')) = 1
                ]]>
			</when>
			<when test="status != null and status ==  'overDueSevenDayOrder'">
				<![CDATA[
                AND TO_DAYS(date_format(rpd.repayDate,'%Y-%m-%d')) - TO_DAYS(date_format(now(),'%Y-%m-%d')) > 0
                AND TO_DAYS(date_format(rpd.repayDate,'%Y-%m-%d')) - TO_DAYS(date_format(now(),'%Y-%m-%d')) <= 7
                ]]>
			</when>
			<when test="status != null and status ==  'overDueUnhandledOrder'">
				<![CDATA[
                AND TO_DAYS(date_format(now(),'%Y-%m-%d')) - TO_DAYS(date_format(wv.CREATE_TIME_,'%Y-%m-%d')) > 0
                ]]>
			</when>
		</choose>
		UNION
		(SELECT
		wv.BUSINESS_KEY_ AS repId,wv.TASKID AS taskId, wv.TASK_DEF_KEY_ AS activityId, ry.loanId AS uuid,
		li.orderid,cri.customer_name,date_format(rpd.repayDate,'%Y-%m-%d') AS repayDate,rpd.repayTotal AS
		repaymentSum,li.loan_status,
		cri.is_important,IFNULL(ry.is_overdue,0) AS state, u1.realname AS clientManager, u2.realname AS
		principalName,rpd.repayPeriod,
		(TO_DAYS(rpd.repayDate)-TO_DAYS(NOW())) AS repaydiff,li.customer_id as customerId,wv.NAME_ AS
		taskName,wv.ASSIGNEE_ AS assignee
		FROM
		(((((((workflowview wv
		INNER JOIN repayment ry ON ry.uuid = wv.BUSINESS_KEY_)
		INNER JOIN loan_info li on li.uuid = ry.loanId)
		INNER JOIN customer_register_info cri ON cri.uuid = li.customer_id)
		INNER JOIN repayplandetail rpd ON rpd.id = ry.replanDetaiId)
		INNER JOIN user u1 ON u1.uuid = li.responsible_cm_id)
		INNER JOIN dept d ON d.id = li.dept_id)
		INNER JOIN user u2 ON u2.uuid = d.principal_id)
		WHERE
		wv.ASSIGNEE_ IS NULL
		AND wv.GROUP_ID_ IN (
		SELECT
		aim.GROUP_ID_
		FROM
		act_id_membership aim
		WHERE
		aim.USER_ID_ = #{userId}
		)
		<if test="orderNo !=null and orderNo !=''">
			AND li.orderid LIKE CONCAT('%',#{orderNo,jdbcType=VARCHAR},'%' )
		</if>
		<if test="customerName !=null and customerName !=''">
			AND cri.customer_name LIKE CONCAT('%',#{customerName,jdbcType=VARCHAR},'%' )
		</if>
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId,
                                jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{companyId,jdbcType=INTEGER}
			</when>
		</choose>
		<choose>
			<when test="pledgeType != null and pledgeType == 'repayment'">
				AND TO_DAYS(rpd.repayDate)-TO_DAYS(NOW())>=0
			</when>
			<when test="pledgeType != null and pledgeType == 'yuqi'">
				AND TO_DAYS(rpd.repayDate)-TO_DAYS(NOW())&lt;0
			</when>
		</choose>
		<choose>
			<when test="status != null and status == 'overDueTodayOrder'">
				<![CDATA[
                                AND TO_DAYS(date_format(now(),'%Y-%m-%d')) - TO_DAYS(date_format(rpd.repayDate,'%Y-%m-%d')) = 1
                                ]]>
			</when>
			<when test="status != null and status ==  'overDueSevenDayOrder'">
				<![CDATA[
                                AND TO_DAYS(date_format(rpd.repayDate,'%Y-%m-%d')) - TO_DAYS(date_format(now(),'%Y-%m-%d')) > 0
                                AND TO_DAYS(date_format(rpd.repayDate,'%Y-%m-%d')) - TO_DAYS(date_format(now(),'%Y-%m-%d')) <= 7
                                ]]>
			</when>
			<when test="status != null and status ==  'overDueUnhandledOrder'">
				<![CDATA[
                AND TO_DAYS(date_format(now(),'%Y-%m-%d')) - TO_DAYS(date_format(wv.CREATE_TIME_,'%Y-%m-%d')) > 0
                ]]>
			</when>
		</choose>
		)
		) AS repaymentTable
		ORDER BY orderid DESC

	</select>
	<!--查询工作流视图字段-->
	<select id="queryWorkFlowInfoByUser" parameterType="java.lang.String" resultMap="WorkFlowView">
		SELECT  wv.GROUP_ID_ AS groupId, wv.ASSIGNEE_ AS assignee, wv.NAME_ AS name,
		wv.BUSINESS_KEY_ bussinessKey, wv.TASKID AS taskId,wv.TASK_DEF_KEY_ AS activityId
		FROM workflowview wv WHERE wv.ASSIGNEE_ = #{userId,jdbcType=VARCHAR}
		UNION
		SELECT wv.GROUP_ID_ AS groupId, wv.ASSIGNEE_ AS assignee, wv.NAME_ AS name,
		wv.BUSINESS_KEY_ bussinessKey, wv.TASKID AS taskId,wv.TASK_DEF_KEY_ AS activityId
		FROM workflowview wv WHERE wv.GROUP_ID_ IN
		(
		SELECT GROUP_ID_ FROM act_id_membership aim
		WHERE aim.USER_ID_= #{userId,jdbcType=VARCHAR}
		)
	</select>
	<select id="queryVehicleLoanList" parameterType="Map" resultMap="VehicleLoanInfo">
		SELECT * FROM (SELECT wv.ASSIGNEE_ AS assignee,li.loan_status, wv.TASKID AS taskId, li.uuid, li.orderid, wv.TASK_DEF_KEY_ AS activityId,
		li.pledge_type,li.state,cri.is_important,wv.NAME_ AS name, u1.realname AS create_by, u2.realname AS principalName,
		cri.customer_name, cri.uuid AS customerId, li.created_at
		FROM workflowview wv
		INNER JOIN loan_info li ON li.uuid = wv.BUSINESS_KEY_
		LEFT JOIN customer_register_info cri ON cri.uuid = li.customer_id
		LEFT JOIN user u1 ON u1.uuid = li.responsible_cm_id
		LEFT JOIN dept de ON de.id = li.dept_id
		LEFT JOIN user u2 ON de.principal_id = u2.uuid
		WHERE
		wv.ASSIGNEE_ = #{userId}
		<if test="orderNo !=null and orderNo !=''">
			AND li.orderid LIKE CONCAT('%',#{orderNo,jdbcType=VARCHAR},'%' )
		</if>
		<if test="customerName !=null and customerName !=''">
			AND cri.customer_name LIKE CONCAT('%',#{customerName,jdbcType=VARCHAR},'%' )
		</if>
		<if test="customerManage !=null and customerManage !=''">
			AND u1.realname LIKE CONCAT('%',#{customerManage,jdbcType=VARCHAR},'%' )
		</if>
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId, jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{mycompanyId,jdbcType=INTEGER}
			</when>
		</choose>
		<if test="pledgeType !=null and pledgeType !=''">
			AND li.pledge_type = #{pledgeType,jdbcType=VARCHAR}
		</if>
		<choose>
			<when test="loanStatus != null and loanStatus == 'dataReview'">
				<![CDATA[
				AND (li.loan_status = 'dataReview'or li.loan_status = 'reuploadInformatin')
				]]>
			</when>
			<when test="loanStatus != null and loanStatus != 'dataReview'">
				<![CDATA[
				AND li.loan_status = #{loanStatus,jdbcType=VARCHAR}
				]]>
			</when>
		</choose>
		UNION (
		SELECT wv.ASSIGNEE_ AS assignee,li.loan_status, wv.TASKID AS taskId, li.uuid, li.orderid, wv.TASK_DEF_KEY_ AS
		activityId,
		li.pledge_type,li.state,cri.is_important,wv.NAME_ AS name, u1.realname AS create_by, u2.realname AS
		principalName,
		cri.customer_name, cri.uuid AS customerId, li.created_at
		FROM workflowview wv
		INNER JOIN loan_info li ON li.uuid = wv.BUSINESS_KEY_
		LEFT JOIN customer_register_info cri ON cri.uuid = li.customer_id
		LEFT JOIN user u1 ON u1.uuid = li.responsible_cm_id
		LEFT JOIN dept de ON de.id = li.dept_id
		LEFT JOIN user u2 ON de.principal_id = u2.uuid
		WHERE wv.ASSIGNEE_ IS NULL
		AND wv.GROUP_ID_ IN (
		SELECT
		aim.GROUP_ID_
		FROM
		act_id_membership aim
		WHERE
		aim.USER_ID_ = #{userId}
		)
		<if test="orderNo !=null and orderNo !=''">
			AND li.orderid LIKE CONCAT('%',#{orderNo,jdbcType=VARCHAR},'%' )
		</if>
		<if test="customerName !=null and customerName !=''">
			AND cri.customer_name LIKE CONCAT('%',#{customerName,jdbcType=VARCHAR},'%' )
		</if>
		<if test="customerManage !=null and customerManage !=''">
			AND u1.realname LIKE CONCAT('%',#{customerManage,jdbcType=VARCHAR},'%' )
		</if>
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId, jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{mycompanyId,jdbcType=INTEGER}
			</when>
		</choose>
		<if test="pledgeType !=null and pledgeType !=''">
			AND li.pledge_type = #{pledgeType,jdbcType=VARCHAR}
		</if>
		<choose>
			<when test="loanStatus != null and loanStatus == 'dataReview'">
				<![CDATA[
					AND (li.loan_status = 'dataReview'or li.loan_status = 'reuploadInformatin')
				]]>
			</when>
			<when test="loanStatus != null and loanStatus != 'dataReview'">
				<![CDATA[
					AND li.loan_status = #{loanStatus,jdbcType=VARCHAR}
				]]>
			</when>
		</choose>
		)

		) AS LoanTable
		ORDER BY orderid desc

	</select>
	<select id="queryWorkSpaceLoanList" parameterType="Map" resultMap="VehicleLoanInfo">
		SELECT * FROM (
		<!--贷前已经签收任务List-->
		SELECT wv.ASSIGNEE_ AS assignee,li.loan_status, wv.TASKID AS taskId, li.uuid, li.orderid, wv.TASK_DEF_KEY_ AS
		activityId,
		li.pledge_type,li.state,cri.is_important,wv.NAME_ AS name, u1.realname AS create_by, u2.realname AS
		principalName,
		cri.customer_name, cri.uuid AS customerId, li.created_at,li.id_card AS customerIdCard,wv.PROC_KEY as procKey,
		wv.BUSINESS_KEY_ as businessKey, li.loan_money AS loanMoney
		FROM workflowview wv
		INNER JOIN loan_info li ON li.uuid = wv.BUSINESS_KEY_
		LEFT JOIN customer_register_info cri ON cri.uuid = li.customer_id
		LEFT JOIN user u1 ON u1.uuid = li.responsible_cm_id
		LEFT JOIN dept de ON de.id = li.dept_id
		LEFT JOIN user u2 ON de.principal_id = u2.uuid
		WHERE
		wv.ASSIGNEE_ = #{userId}
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId, jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{mycompanyId,jdbcType=INTEGER}
			</when>
		</choose>
		<if test="time !=null and time == 'today'">
			AND DATE_FORMAT(wv.CREATE_TIME_,'%m-%d-%Y') = DATE_FORMAT(NOW(),'%m-%d-%Y')
		</if>
		<!--贷前待签收任务List-->
		UNION (
		SELECT wv.ASSIGNEE_ AS assignee,li.loan_status, wv.TASKID AS taskId, li.uuid, li.orderid, wv.TASK_DEF_KEY_ AS
		activityId,
		li.pledge_type,li.state,cri.is_important,wv.NAME_ AS name, u1.realname AS create_by, u2.realname AS
		principalName,
		cri.customer_name, cri.uuid AS customerId, li.created_at,li.id_card AS customerIdCard,wv.PROC_KEY as procKey,
		wv.BUSINESS_KEY_ as businessKey, li.loan_money AS loanMoney
		FROM workflowview wv
		INNER JOIN loan_info li ON li.uuid = wv.BUSINESS_KEY_
		LEFT JOIN customer_register_info cri ON cri.uuid = li.customer_id
		LEFT JOIN user u1 ON u1.uuid = li.responsible_cm_id
		LEFT JOIN dept de ON de.id = li.dept_id
		LEFT JOIN user u2 ON de.principal_id = u2.uuid
		WHERE wv.ASSIGNEE_ IS NULL
		AND wv.GROUP_ID_ IN (
		SELECT
		aim.GROUP_ID_
		FROM
		act_id_membership aim
		WHERE
		aim.USER_ID_ = #{userId}
		)
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId, jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{mycompanyId,jdbcType=INTEGER}
			</when>
		</choose>
		<if test="time !=null and time == 'today'">
			AND DATE_FORMAT(wv.CREATE_TIME_,'%m-%d-%Y') = DATE_FORMAT(NOW(),'%m-%d-%Y')
		</if>
		)
		UNION
		<!--贷后已签收任务-->
		(
		SELECT
		wv.ASSIGNEE_ AS assignee,li.loan_status,wv.TASKID AS taskId ,li.uuid,li.orderid,wv.TASK_DEF_KEY_ AS activityId,
		li.pledge_type,li.state,cri.is_important,wv.NAME_ AS name,u1.realname AS create_by, u2.realname AS principalName,
		cri.customer_name,cri.uuid AS customerId,li.created_at,li.id_card AS customerIdCard,wv.PROC_KEY as procKey,
		wv.BUSINESS_KEY_ as businessKey, li.loan_money AS loanMoney
		FROM
		(((((((workflowview wv
		INNER JOIN repayment ry ON ry.uuid = wv.BUSINESS_KEY_)
		INNER JOIN loan_info li ON li.uuid = ry.loanId)
		INNER JOIN customer_register_info cri ON cri.uuid = li.customer_id)
		INNER JOIN repayplandetail rpd ON rpd.id = ry.replanDetaiId)
		INNER JOIN user u1 ON u1.uuid = li.responsible_cm_id)
		INNER JOIN dept d ON d.id = li.dept_id)
		INNER JOIN user u2 ON u2.uuid = d.principal_id)
		WHERE
		wv.ASSIGNEE_ = #{userId}
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId,
				jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{mycompanyId,jdbcType=INTEGER}
			</when>
		</choose>
		<if test="time !=null and time == 'today'">
			AND DATE_FORMAT(wv.CREATE_TIME_,'%m-%d-%Y') = DATE_FORMAT(NOW(),'%m-%d-%Y')
		</if>
		)
		<!--贷后待签收任务-->
		UNION
		(SELECT
		wv.ASSIGNEE_ AS assignee,li.loan_status,wv.TASKID AS taskId ,li.uuid,li.orderid,wv.TASK_DEF_KEY_ AS activityId,
		li.pledge_type,li.state,cri.is_important,wv.NAME_ AS name,u1.realname AS create_by, u2.realname AS principalName,
		cri.customer_name,cri.uuid AS customerId,li.created_at,li.id_card AS customerIdCard,wv.PROC_KEY as procKey,
		wv.BUSINESS_KEY_ as businessKey, li.loan_money AS loanMoney
		FROM
		(((((((workflowview wv
		INNER JOIN repayment ry ON ry.uuid = wv.BUSINESS_KEY_)
		INNER JOIN loan_info li on li.uuid = ry.loanId)
		INNER JOIN customer_register_info cri ON cri.uuid = li.customer_id)
		INNER JOIN repayplandetail rpd ON rpd.id = ry.replanDetaiId)
		INNER JOIN user u1 ON u1.uuid = li.responsible_cm_id)
		INNER JOIN dept d ON d.id = li.dept_id)
		INNER JOIN user u2 ON u2.uuid = d.principal_id)
		WHERE
		wv.ASSIGNEE_ IS NULL
		AND wv.GROUP_ID_ IN (
		SELECT
		aim.GROUP_ID_
		FROM
		act_id_membership aim
		WHERE
		aim.USER_ID_ = #{userId}
		)
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId,
                                jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{mycompanyId,jdbcType=INTEGER}
			</when>
		</choose>
		<if test="time !=null and time == 'today'">
			AND DATE_FORMAT(wv.CREATE_TIME_,'%m-%d-%Y') = DATE_FORMAT(NOW(),'%m-%d-%Y')
		</if>
		)
		<!--排序定义-->
		) AS LoanTable
		ORDER BY orderid desc

	</select>

	<select id="queryWorkSpaceLoanCount" parameterType="Map" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM (
		<!--贷前已经签收任务List-->
		SELECT li.loan_status, wv.TASKID AS taskId, li.uuid, li.orderid
		FROM workflowview wv
		INNER JOIN loan_info li ON li.uuid = wv.BUSINESS_KEY_
		LEFT JOIN customer_register_info cri ON cri.uuid = li.customer_id
		LEFT JOIN user u1 ON u1.uuid = li.responsible_cm_id
		LEFT JOIN dept de ON de.id = li.dept_id
		LEFT JOIN user u2 ON de.principal_id = u2.uuid
		WHERE
		wv.ASSIGNEE_ = #{userId}
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId, jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{mycompanyId,jdbcType=INTEGER}
			</when>
		</choose>
		<if test="time !=null and time == 'today'">
			AND DATE_FORMAT(wv.CREATE_TIME_,'%m-%d-%Y') = DATE_FORMAT(NOW(),'%m-%d-%Y')
		</if>
		<!--贷前待签收任务List-->
		UNION (
		SELECT li.loan_status, wv.TASKID AS taskId, li.uuid, li.orderid
		FROM workflowview wv
		INNER JOIN loan_info li ON li.uuid = wv.BUSINESS_KEY_
		LEFT JOIN customer_register_info cri ON cri.uuid = li.customer_id
		LEFT JOIN user u1 ON u1.uuid = li.responsible_cm_id
		LEFT JOIN dept de ON de.id = li.dept_id
		LEFT JOIN user u2 ON de.principal_id = u2.uuid
		WHERE wv.ASSIGNEE_ IS NULL
		AND wv.GROUP_ID_ IN (
		SELECT
		aim.GROUP_ID_
		FROM
		act_id_membership aim
		WHERE
		aim.USER_ID_ = #{userId}
		)
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId, jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{mycompanyId,jdbcType=INTEGER}
			</when>
		</choose>
		<if test="time !=null and time == 'today'">
			AND DATE_FORMAT(wv.CREATE_TIME_,'%m-%d-%Y') = DATE_FORMAT(NOW(),'%m-%d-%Y')
		</if>
		)
		UNION
		<!--贷后已签收任务-->
		(
		SELECT li.loan_status,wv.TASKID AS taskId ,li.uuid,li.orderid
		FROM
		(((((((workflowview wv
		INNER JOIN repayment ry ON ry.uuid = wv.BUSINESS_KEY_)
		INNER JOIN loan_info li ON li.uuid = ry.loanId)
		INNER JOIN customer_register_info cri ON cri.uuid = li.customer_id)
		INNER JOIN repayplandetail rpd ON rpd.id = ry.replanDetaiId)
		INNER JOIN user u1 ON u1.uuid = li.responsible_cm_id)
		INNER JOIN dept d ON d.id = li.dept_id)
		INNER JOIN user u2 ON u2.uuid = d.principal_id)
		WHERE
		wv.ASSIGNEE_ = #{userId}
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId,
				jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{mycompanyId,jdbcType=INTEGER}
			</when>
		</choose>
		<if test="time !=null and time == 'today'">
			AND DATE_FORMAT(wv.CREATE_TIME_,'%m-%d-%Y') = DATE_FORMAT(NOW(),'%m-%d-%Y')
		</if>
		)
		<!--贷后待签收任务-->
		UNION
		(SELECT li.loan_status,wv.TASKID AS taskId ,li.uuid,li.orderid
		FROM
		(((((((workflowview wv
		INNER JOIN repayment ry ON ry.uuid = wv.BUSINESS_KEY_)
		INNER JOIN loan_info li on li.uuid = ry.loanId)
		INNER JOIN customer_register_info cri ON cri.uuid = li.customer_id)
		INNER JOIN repayplandetail rpd ON rpd.id = ry.replanDetaiId)
		INNER JOIN user u1 ON u1.uuid = li.responsible_cm_id)
		INNER JOIN dept d ON d.id = li.dept_id)
		INNER JOIN user u2 ON u2.uuid = d.principal_id)
		WHERE
		wv.ASSIGNEE_ IS NULL
		AND wv.GROUP_ID_ IN (
		SELECT
		aim.GROUP_ID_
		FROM
		act_id_membership aim
		WHERE
		aim.USER_ID_ = #{userId}
		)
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{userId,
                                jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{myDeptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{mycompanyId,jdbcType=INTEGER}
			</when>
		</choose>
		<if test="time !=null and time == 'today'">
			AND DATE_FORMAT(wv.CREATE_TIME_,'%m-%d-%Y') = DATE_FORMAT(NOW(),'%m-%d-%Y')
		</if>
		)
		<!--排序定义-->
		) AS LoanTable
		ORDER BY orderid desc

	</select>
	
	<select id="queryLoanStatusCountByActivityId" parameterType="Map" resultMap="loanStatusCount">
		SELECT SUM(COUNT) AS COUNT,activityId FROM (
		SELECT COUNT(1) AS COUNT,TASK_DEF_KEY_ AS activityId,NAME_,li.orderid AS od
		FROM workflowview wv
		INNER JOIN loan_info li ON li.UUID = wv.BUSINESS_KEY_
		LEFT JOIN customer_register_info cri ON cri.UUID = li.customer_id
		LEFT JOIN USER u1 ON u1.UUID = li.responsible_cm_id
		LEFT JOIN dept d ON d.id = li.dept_id
		LEFT JOIN USER u2 ON d.principal_id = u2.UUID 
		WHERE wv.ASSIGNEE_ = #{uuid,jdbcType=VARCHAR}
		GROUP BY TASK_DEF_KEY_
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{uuid,jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{deptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{companyId,jdbcType=INTEGER}
			</when>
		</choose>
		<if test="uuid !=null and uuid != ''">
			
		UNION (
		SELECT COUNT(1) AS COUNT,TASK_DEF_KEY_ AS activityId,NAME_,li.orderid AS od
		FROM workflowview wv 
		INNER JOIN loan_info li ON li.UUID = wv.BUSINESS_KEY_
		LEFT JOIN customer_register_info cri ON cri.UUID = li.customer_id
		LEFT JOIN USER u1 ON u1.UUID = li.responsible_cm_id
		LEFT JOIN dept d ON d.id = li.dept_id
		LEFT JOIN USER u2 ON u2.UUID = d.principal_id
		WHERE wv.ASSIGNEE_ IS NULL
		AND wv.GROUP_ID_ IN (
			SELECT
			aim.GROUP_ID_
			FROM
			act_id_membership aim
			WHERE
			aim.USER_ID_ = #{uuid,jdbcType=VARCHAR}
		)
		GROUP BY TASK_DEF_KEY_
		</if>
			    )
	
)AS ootable 
GROUP BY activityId
ORDER BY od
	</select>
	
	<select id="queryAfterStatusCount" parameterType="Map" resultMap="afterStatusCount">
		SELECT COUNT(1) allCount,COUNT(IF(datediff(now(), rpd.repayDate) = 1,TRUE,NULL)) todayCount,
			   COUNT(IF(datediff(rpd.repayDate,now()) &lt;= 7,IF(datediff(rpd.repayDate,NOW())>0,true,null),NULL)) weekCount,
			   COUNT(IF (datediff(now(),wv.CREATE_TIME_) > 0 ,TRUE,NULL)) overdueCount
		FROM workflowview wv
		INNER JOIN repayment rt ON rt.uuid = wv.BUSINESS_KEY_
		INNER JOIN repayplandetail rpd ON rt.replanDetaiId = rpd.id
		INNER JOIN loan_info li ON li.uuid = rt.loanId
		INNER JOIN USER u1 ON u1.uuid = li.responsible_cm_id
		INNER JOIN dept d ON d.id = li.dept_id
		WHERE 1 = 1
		AND wv.ASSIGNEE_ = #{uuid}
		OR (wv.ASSIGNEE_ IS NULL
		AND wv.GROUP_ID_ IN (
		SELECT
		aim.GROUP_ID_
		FROM
		act_id_membership aim
		WHERE
		aim.USER_ID_ = #{uuid}
		))
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{uuid,jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{deptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{companyId,jdbcType=INTEGER}
			</when>
		</choose>
	</select>
	
	<select id="selectloanMoneydaySum" parameterType="map" resultType="java.math.BigDecimal">
		SELECT 
			IFNULL(SUM(li.loan_money),0) AS summoney
		FROM
			loan_info li  
		WHERE li.is_chargedoff = '1' 
		AND DATE_FORMAT(li.chargedoff_at, '%Y%m%d')  = #{dayDate} 
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{uuid,jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{deptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{companyId,jdbcType=INTEGER}
			</when>
		</choose>
	</select>
	
	<select id="selectloanMoneymonthSum" parameterType="map" resultType="java.math.BigDecimal">
		SELECT 
			IFNULL(SUM(li.loan_money),0) AS summoney
		FROM
			loan_info li
		WHERE li.is_chargedoff = '1' 
		AND DATE_FORMAT(li.chargedoff_at, '%Y%m') = #{monthDate}
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{uuid,jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{deptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{companyId,jdbcType=INTEGER}
			</when>
		</choose>
	</select>


	<select id="queryOverDueSum" parameterType="Map" resultType="java.math.BigDecimal">
		SELECT IFNULL(SUM(rpd.repayTotal),0) repayTotal
		FROM repayplandetail rpd
		INNER JOIN repayplan rp ON rpd.repayPlanId = rp.id
		INNER JOIN loan_info li ON rp.loanId = li.uuid
		INNER JOIN dept de ON li.dept_id = de.id
		INNER JOIN USER u3 ON u3.uuid = li.responsible_cm_id
		INNER JOIN company com ON com.Id = li.company_id
		WHERE li.chargedoff_at IS NOT NULL
		AND rpd.repayPeriod != 0
		AND rpd.isRepay = 0
		AND li.is_ended = 0
		AND DATE_FORMAT(rpd.repayDate,'%Y-%m') &lt;= #{dateRange}
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{uuid,jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{deptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{companyId,jdbcType=INTEGER}
			</when>
		</choose>
	</select>

	<select id="selectOverDueList" parameterType="Map" resultMap="selectOverdueList">
		SELECT ci.customer_name,IFNULL(SUM(rpd.repayTotal),0) repayTotal,TIMESTAMPDIFF(DAY, rpd.repayDate, NOW()) AS overdueDay,
			   u3.realname,li.uuid,li.customer_id,li.loan_status
		FROM repayplandetail rpd
		LEFT JOIN repayplan rp ON rpd.repayPlanId = rp.id
		LEFT JOIN loan_info li ON rp.loanId = li.uuid
		LEFT JOIN customer_register_info ci ON li.customer_id = ci.uuid
		LEFT JOIN dept de ON li.dept_id = de.id
		LEFT JOIN USER u3 ON u3.uuid = li.responsible_cm_id
		LEFT JOIN company com ON com.Id = li.company_id
		WHERE li.chargedoff_at IS NOT NULL
		AND rpd.repayPeriod != 0
		AND rpd.isRepay = 0
		AND li.is_ended = 0
		AND DATE_FORMAT(rpd.repayDate,'%Y-%m') &lt;= #{dateRange}
		AND TIMESTAMPDIFF(DAY,rpd.repayDate,NOW()) > 0
		<choose>
			<when test="data_access_level != null and data_access_level == 0">
				and 1=0
			</when>
			<when test="data_access_level != null and data_access_level == 1">
				AND li.responsible_cm_id = #{uuid,jdbcType=VARCHAR}
			</when>
			<when test="data_access_level != null and data_access_level == 2">
				AND li.dept_id = #{deptId,jdbcType=INTEGER}
			</when>
			<when test="data_access_level != null and data_access_level == 3">
				AND li.company_id = #{companyId,jdbcType=INTEGER}
			</when>
		</choose>
		GROUP BY rpd.repayPlanId
	</select>

	<select id="selectOverDueDaysAndCount" parameterType="Map" resultMap="selectOverdueDaysAndCount">
		SELECT COUNT(DISTINCT(li.contract_num)) AS count,ROUND(IFNULL(SUM(rpd.repayCapital),0)/10000,2)AS repayCapital,'noMoreThan' AS TYPE
		FROM repayplandetail rpd
		INNER JOIN repayplan rp ON rpd.repayPlanId = rp.id
		INNER JOIN loan_info li ON rp.loanId = li.uuid
		INNER JOIN customer_register_info ci ON li.customer_id = ci.uuid
		INNER JOIN dept de ON li.dept_id = de.id
		INNER JOIN USER u3 ON u3.uuid = li.responsible_cm_id
		INNER JOIN company com ON com.Id = li.company_id
		WHERE li.chargedoff_at IS NOT NULL
		AND rpd.repayPeriod != 0
		AND rpd.isRepay = 0
		AND li.is_ended != 1
		AND DATE_FORMAT(rpd.repayDate,'%Y-%m') &lt;= #{dateRange}
		AND TIMESTAMPDIFF(DAY,rpd.repayDate,NOW()) &lt;= #{noMoreThan}
		AND TIMESTAMPDIFF(DAY,rpd.repayDate,NOW()) BETWEEN '0' AND #{noMoreThan}
        <choose>
            <when test="data_access_level != null and data_access_level == 0">
                and 1=0
            </when>
            <when test="data_access_level != null and data_access_level == 1">
                AND li.responsible_cm_id = #{uuid,jdbcType=VARCHAR}
            </when>
            <when test="data_access_level != null and data_access_level == 2">
                AND li.dept_id = #{deptId,jdbcType=INTEGER}
            </when>
            <when test="data_access_level != null and data_access_level == 3">
                AND li.company_id = #{companyId,jdbcType=INTEGER}
            </when>
        </choose>
		UNION
		SELECT COUNT(DISTINCT(li.contract_num)) AS count,ROUND(IFNULL(SUM(rpd.repayCapital),0)/10000,2) AS repayCapital,'notLessThan' AS TYPE
		FROM repayplandetail rpd
		INNER JOIN repayplan rp ON rpd.repayPlanId = rp.id
		INNER JOIN loan_info li ON rp.loanId = li.uuid
		INNER JOIN customer_register_info ci ON li.customer_id = ci.uuid
		INNER JOIN dept de ON li.dept_id = de.id
		INNER JOIN USER u3 ON u3.uuid = li.responsible_cm_id
		INNER JOIN company com ON com.Id = li.company_id
		WHERE li.chargedoff_at IS NOT NULL
		AND rpd.repayPeriod != 0
		AND rpd.isRepay = 0
		AND li.is_ended != 1
		AND DATE_FORMAT(rpd.repayDate,'%Y-%m') &lt;= #{dateRange}
		AND TIMESTAMPDIFF(DAY,rpd.repayDate,NOW()) > #{notLessThan}
        <choose>
            <when test="data_access_level != null and data_access_level == 0">
                and 1=0
            </when>
            <when test="data_access_level != null and data_access_level == 1">
                AND li.responsible_cm_id = #{uuid,jdbcType=VARCHAR}
            </when>
            <when test="data_access_level != null and data_access_level == 2">
                AND li.dept_id = #{deptId,jdbcType=INTEGER}
            </when>
            <when test="data_access_level != null and data_access_level == 3">
                AND li.company_id = #{companyId,jdbcType=INTEGER}
            </when>
        </choose>
		UNION
		SELECT COUNT(DISTINCT(li.contract_num)) AS count,ROUND(IFNULL(SUM(rpd.repayCapital),0)/10000,2) AS repayCapital,'between' AS TYPE
		FROM repayplandetail rpd
		INNER JOIN repayplan rp ON rpd.repayPlanId = rp.id
		INNER JOIN loan_info li ON rp.loanId = li.uuid
		INNER JOIN customer_register_info ci ON li.customer_id = ci.uuid
		INNER JOIN dept de ON li.dept_id = de.id
		INNER JOIN USER u3 ON u3.uuid = li.responsible_cm_id
		INNER JOIN company com ON com.Id = li.company_id
		WHERE li.chargedoff_at IS NOT NULL
		AND rpd.repayPeriod != 0
		AND rpd.isRepay = 0
		AND li.is_ended != 1
		AND DATE_FORMAT(rpd.repayDate,'%Y-%m') &lt;= #{dateRange}
		AND TIMESTAMPDIFF(DAY,rpd.repayDate,NOW()) BETWEEN #{noMoreThan} AND #{notLessThan}
        <choose>
            <when test="data_access_level != null and data_access_level == 0">
                and 1=0
            </when>
            <when test="data_access_level != null and data_access_level == 1">
                AND li.responsible_cm_id = #{uuid,jdbcType=VARCHAR}
            </when>
            <when test="data_access_level != null and data_access_level == 2">
                AND li.dept_id = #{deptId,jdbcType=INTEGER}
            </when>
            <when test="data_access_level != null and data_access_level == 3">
                AND li.company_id = #{companyId,jdbcType=INTEGER}
            </when>
        </choose>
	</select>
	
	<select id="queryLoanerInformation" parameterType="java.lang.String" resultMap="queryLoanerInformation">
		select 
  		cri.customer_name as real_name,
		li.mobile as phone,
  		li.id_card as id_card,
  		li.loan_limit_time as borrow_time,
  		li.loan_rate as borrow_apr,
		ROUND(li.apply_money,2) as borrow_money,
		(case when li.repay_way = 'AverageCapitalPlusInterest' then 0 
		      when li.repay_way  = 'InterestRatesBefore' then 3 end) as borrow_style,
		cai.account_idnum as receiptaccount_id_card,
		cai.account_name as receiptaccount_real_name,
		gei.vehicle_brand as car_brand,
		gei.vehicle_no as car_version,
		gei.color as car_color,
		gei.displacement as car_displacement,
		gei.mileaged as car_km,
	    DATE_FORMAT(gei.purchase_date,'%Y-%m-%d') as car_date,
		ROUND(gei.evaluate_price,2) as car_evaluate,
	    IFNULL(gei.evaluate_conclusion,'未评估') as car_assess,
  		1 as car_xsb,
		1 as car_card,
		1 as car_dyht,
		1 as car_cciaa,
  		1 as car_key,
		0 as car_wszm,
		0 as car_sali,
		0 as car_syx,
  		0 as car_invoice,
		substring_index(lia.attachment_title, '-', 1) as name,
		CONCAT('http://221.204.213.49:8080',lia.attachment_path )as url
	from loan_info li 
	LEFT JOIN guarantee_evaluate_info gei on gei.loan_id = li.uuid
	LEFT JOIN customer_register_info cri on cri.uuid = li.customer_id
	LEFT JOIN loan_info_attachment lia on lia.loan_id = li.uuid
	LEFT JOIN customer_account_info cai on cai.customer_id = li.customer_id
	where  1=1
	<if test="orderId != null and orderId != ''">
	AND li.orderid = #{orderId,jdbcType=VARCHAR}
	</if>
	</select>
	
</mapper>