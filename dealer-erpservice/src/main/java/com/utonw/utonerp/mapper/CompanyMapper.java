package com.utonw.utonerp.mapper;

import com.utonw.dealer.api.entity.erp.Company;
import com.utonw.dealer.api.entity.erp.CompanyWithBLOBs;
import com.utonw.dealer.api.entity.erp.CompanyWithParentSubName;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public interface CompanyMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company
     *
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company
     *
     */
    int insert(CompanyWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company
     *
     */
    int insertSelective(CompanyWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company
     *
     */
    CompanyWithBLOBs selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company
     *
     */
    int updateByPrimaryKeySelective(CompanyWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company
     *
     */
    int updateByPrimaryKeyWithBLOBs(CompanyWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company
     *
     */
    int updateByPrimaryKey(Company record);

    int insertCompamy(Company record);

    /**
     * 添加用户页面动态查询所属公司
     * @return
     */
    List<Company> queryCompanyList();
    
    /**
     * 添加客户页面根据用户ID动态查询所属公司
     * @return
     */
    List<Company> queryCompanyListByUserId(String userId);

    /**
     * 根据公司名称查询信息
     * @return
     */
    List<Company> queryCompayByName(String name);
    /**
     * 根据公司的所有的ID的list
     * @return
     */
    List<Integer> selectCompanyIds();
    /**
     * 根据客户ID查询所属的分公司的List
     * @param customerId 客户ID
     * @return
     */
    List<Company>queryCompanyListByCustomerId(String customerId);

    List<CompanyWithParentSubName> queryCompanyParentAndSubName(Integer companyId);

	/**
	 * 动态查询数据访问权限
	 * @param uuid
	 * @return
	 */
	List<Company> queryCompanyDataAccessLevel(String uuid);

    Boolean selectAccountNameExistService(String accountName);
}