package com.utonw.utonerp.mapper;

import java.math.BigDecimal;
import java.util.List;
import java.util.Map;


import com.utonw.dealer.api.dto.request.erp.BadLoanQueryRequest;
import com.utonw.dealer.api.dto.request.erp.RepaymentQueryRequest;
import com.utonw.dealer.api.entity.erp.*;
import com.utonw.dealer.api.vo.EndedLoan;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Component;


@Component
public interface LoanInfoMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table loan_info
	 *
	 * @mbggenerated
	 */
	int deleteByPrimaryKey(String uuid);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table loan_info
	 *
	 * @mbggenerated
	 */
	int insert(LoanInfoWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table loan_info
	 *
	 * @mbggenerated
	 */
	int insertSelective(LoanInfoWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table loan_info
	 *
	 * @mbggenerated
	 */
	LoanInfoWithBLOBs selectByPrimaryKey(String uuid);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table loan_info
	 *
	 * @mbggenerated
	 */
	int updateByPrimaryKeySelective(LoanInfoWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table loan_info
	 *
	 * @mbggenerated
	 */
	int updateByPrimaryKeyWithBLOBs(LoanInfoWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table loan_info
	 *
	 * @mbggenerated
	 */
	int updateByPrimaryKey(LoanInfo record);

	/**
	 * 关联查询借款信息
	 *
	 * @param map
	 *            参数
	 * @return LoanInfoWithBLOBs
	 */
	LoanInfoWithBLOBs selectJoinByPrimaryKey(Map<String, Object> map);
	/**
	 * 订单统计中订单列表查询
	 *
	 * @param map
	 *            参数
	 * @return LoanInfoWithBLOBs
	 */
	loanInfoSumary selectLoanDetailInfo(Map<String, Object> map);

	/**
	 * 根据用户id查询属于其办理的借款
	 *
	 * @param userId
	 * @return
	 */
	List<LoanInfo> queryBybelongUserId(String userId);

	/**
	 * 后台首页查询还款总数
	 *
	 * @return
	 */
	Long queryRepayPlanCount();

	/**
	 * 根据时间查询需还款总数
	 *
	 * @param endTime
	 * @return
	 */
	Long queryRepayDayConut(String endTime);

	/**
	 * 查询出昨日新增借款笔数
	 *
	 * @return long
	 */
	Long queryYestdAddLoanCount();

	/**
	 * 查询昨日新增借款金额
	 *
	 * @return BigDecimal
	 */
	BigDecimal queryYestdAddLoanMoney();

	/**
	 * 查询出本月出帐笔数
	 *
	 * @return
	 */
	Long queryMonthLoanCount(String responsibleCmId);

	/**
	 * 查询本月放款金额
	 *
	 * @param responsibleCmId
	 * @return
	 */
	BigDecimal queryMonthLoanMoney(String responsibleCmId);

	/**
	 * 历史借款
	 *
	 * @param customerId
	 * @return
	 */
	List<LoanInfo> queryHistoryLoanInfoList(@Param("customerId") String customerId, @Param("loanId") String loanId);

	/**
	 * 查询借款合同显示参数
	 * 
	 * @param loanId
	 * @return
	 */
	LoanInfoWithBLOBs getLoanContractDetail(String loanId);

	/**
	 * 查询此用户负责的所有待还款列表
	 * 
	 * @param userId
	 * @return
	 */
	List<LoanInfoWithBLOBs> selectRepaymentLoanInfoByUserId(String userId);

	/**
	 * 查询此用户负责的所有待还款列表的uuid
	 * 
	 * @param map
	 * @return
	 */
	List<String> selectRepaymentLoanInfoUUidByUserId(Map map);

	/**
	 * 通过流程实例查询
	 * 
	 * @param processinsId
	 * @return
	 */
	LoanInfoWithBLOBs selectRepaymentLoanInfoByProcessinsId(@Param("processinsId") String processinsId);

	/**
	 * 根据条件查询所有借款
	 * 
	 * @param map
	 * @return
	 */
	List<EndedLoan> findEndLoanAllByCondition(Map map);

	/**
	 * 统计贷后借款条件查询结果集
	 * 
	 * @param map
	 * @return
	 */
	Integer findEndLoanAllByConditionSize(Map map);

	/**
	 * 根据借款Id 和 期数 还款状态 查询已还款当期利息
	 * 
	 * @param period
	 * @param loanId
	 * @param status
	 * @return
	 */
	BigDecimal findLoanRepaymentCommission(@Param("status") Integer status, @Param("period") Integer period,
                                           @Param("loanId") String loanId);

	/**
	 * 根据openid 查询借款信息
	 * 
	 * @param openId
	 * @return
	 */
	List<String> selectByOrderIdOrOpenId(@Param("openId") String openId, @Param("orderId") String orderId);

	List<LoanInfoWithBLOBs> notifyDistributionCharge(@Param("loanId") String loanId);

	LoanInfoWithBLOBs selectOrderById(@Param("id") Integer id);

	BigDecimal selectEnterLoanMoney(@Param("startDate") String startDate, @Param("endDate") String endDate);

	List<Integer> selectqueryLoanInfoCount();

	/**
	 * 统计订单个数
	 * 
	 * @return Integer 订单个数
	 */
	Integer selectLoanOrderCount();

	List<CarStock> selectInStockCarList(Map map);

	/**
	 * 根据贷款id取得车辆信息及入库信息
	 * 
	 * @return CarStockInfo 车辆入库信息
	 */
	CarStockInfo selectInStockCarInfo(Map map);

	List<IncomeInfo> selectIncomeInfoList(Map map);

	/**
	 * 查询指定ID的订单数量
	 *
	 * @param uuid
	 *            customer id
	 * @return 订单的数量
	 */
	Integer queryLoanCountByCustomerId(String uuid);

	/**
	 * 查询指定条件的坏账
	 */
	List<BadLoanInfo> queryBadLoanList(BadLoanQueryRequest request);

	/**
	 * 查询坏账条数
	 * 
	 * @param request
	 * @return
	 */
	Map<String, Object> selectBadLoanInfoCount(BadLoanQueryRequest request);

	/**
	 * 为导出数据准备的sql
	 * 
	 * @param request
	 * @return
	 */
	List<BadLoanInfo> selectForExportBadLoanList(BadLoanQueryRequest request);

	/**
	 * 动态查询所属公司
	 * 
	 * @return 分公司名 ID
	 */
	List<Company_Simplification> queryCompanyList();

	/**
	 * 根据公司ID查询部门
	 * 
	 * @param companyId 分公司ID
	 * @return 部门名 部门ID
	 */
	List<Dept_Simplification> queryDeptInfoList(String companyId);

	/**
	 * 根据部门ID查询客户经理
	 * 
	 * @param deptId 部门ID
	 * @return 客户经理
	 */
	List<User_Simplification> queryUserManagerName(String deptId);

	/**
	 * 还款管理查询
	 */
	List<RepaymentInfo> selectRepaymentInfoList(RepaymentQueryRequest queryRequest);

	/**
	 * 还款管理分页查询
	 * 
	 * @param queryRequest
	 * @return
	 */
	Map<String, Object> selectRepaymentInfoCount(RepaymentQueryRequest queryRequest);

	/**
	 * 还款管理导出
	 */
	List<RepaymentInfo> selectRepaymentInfoForExport(RepaymentQueryRequest queryRequest);

	/**
	 * 查询坏账原因
	 */
	List<Map<String, Object>> selectBadReviewInfo(List<String> loanIds);

	int selectBadLoanInfoCustomerCount(BadLoanQueryRequest request);

	List<Map<String, Object>> selectLastRepaymentInfo(List<String> loanIds);

	/**
	 *根据id删除
	 */
	int deleteByIds(List<Integer> ids);
	
	/**
	 * 检索所有再助贷信息
	 */
	List<LoanB2BInfo> selectLoanB2BInfoDetail(Map<String, Object> param);
	
	/**
	 * 工作台数据总数查询
	 */
	List<String> queryMainCount(Map param);
	
	RepaymentInfo selectRepaymentInfoByRepaymentId(String repaymentId);
	/**
	 * 根据LoanId查询订单状态
	 */
	String selectLoanStatusByLoanId(String loanId);
	/**
	 * 根据loanId查询LoanInfo
	 * @param loanId
	 * @return
	 */
	LoanInfo selectLoanInfoByLoanId(String loanId);

	/**
	 * 根据companyId 查询该公司再助贷出账金额
	 */
	BigDecimal queryLoanMoneyByCompanyId(Integer companyId);
	/**
	 *  贷后订单查询
	 */
	List<LoanInfoForRepayment>queryLoanAfterList(Map param);

	/**
	 *  根据用户ID和用户工作组查询
	 *  工作流视图List数据
	 */
	List<WorkFlowView> queryWorkFlowInfoByUser(String userId);
	/**
	 *  贷前订单列表实体类定义
	 */
	List<WorkFlowView> queryVehicleLoanList(Map param);
	/**
	 *  工作平台待办事项查询
	 */
	List<VehicleLoanInfo>queryWorkSpaceLoanList(Map param);

	/**
	 * 工作平台件数查询
	 */
	Integer queryWorkSpaceLoanCount(Map param);

	/**
	 * 贷前列表状态Count
	 */
	List<LoanStatusCount> queryLoanStatusCountByActivityId(Map param);

	/**
	 * 贷后列表状态Count
	 */
	AfterStatusCount queryAfterStatusCount(Map param);
	
	/**
	 * 查询当日放款总额
	 */
	BigDecimal selectloanMoneydaySum(Map param);
	
	/**
	 * 查询当月放款总额
	 */
	BigDecimal selectloanMoneymonthSum(Map param);

	/**
	 * 逾期总量
	 */
	BigDecimal queryOverDueSum(Map param);

	/**
	 * 逾期列表
	 */
	List<OverdueList> selectOverDueList(Map param);

	/**
	 * 天数区分数据(金额 单数)
	 */
	List<OverdueCountAndMoney> selectOverDueDaysAndCount(Map param);
	
	/**
	 * 爱车帮数据推送接口
	 */
	SendDateToPlatForm queryLoanerInformation(@Param("orderId") String orderId);
	
	
}
