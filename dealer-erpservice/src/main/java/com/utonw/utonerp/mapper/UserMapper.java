package com.utonw.utonerp.mapper;

import com.utonw.dealer.api.entity.erp.User;
import com.utonw.dealer.api.vo.UserRoleIdVo;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Component;

import java.util.List;
import java.util.Map;

@Component
public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    int deleteByPrimaryKey(String uuid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    int insertSelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    User selectByPrimaryKey(String uuid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    int updateByPrimaryKeySelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    int updateByPrimaryKeyWithBLOBs(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     */
    int updateByPrimaryKey(User record);

    /**
     * 登录验证
     *
     * @param jobNumber 工号或手机号码
     * @return user对象
     */
    User verifyLogin(@Param("jobNumber") String jobNumber);

    /**
     * 获取角色用户信息列表
     *
     * @param userRoleIdVo 用户角色VO对象
     * @return <code>list<UserRoleIdVo></code>
     */
    List<UserRoleIdVo> getRoleUserExtendList(UserRoleIdVo userRoleIdVo);

    /**
     * 根据公司Id的查询名下所有员工
     *
     * @param companyId
     * @return
     */
    List<User> getUserListByCompanyId(int companyId);

    List<User> queryComIdDeptId(@Param("companyId") int companyId, @Param("deptId") int deptId);

    List<User> queryComIdDeptIds(@Param("companyId") int companyId, @Param("deptList") List<Integer> deptId);
    /**
     *  验证用户手机号码与身份证号是否存在
     * @param paramMap
     * @return
     */
    User verifyIdCard(Map<String, Object> paramMap);

    User verifyUser(String jobNumber);
    //统计用户的角色的List
    List<String> queryRoleType(String param);
    
    int updateLoanOwner(String uuid, String loanId, String deptOwnerId, Integer deptId);
    
    int updateTaskOwner(String uuid, String loanId);
    
	int modifiyTaskApplyUser(String userid, String processInstanceId);
	
	int modifiyTaskStartUser(String userid, String processInstanceId);
	
	/**
	 * 通过mobile查询
	 */
	User selectByMobile(String mobile);
	/**
	 * 通过mobile把verifiCode插入到user
	 */
	int updateverifiCode(@Param("result") int verifiCode, @Param("mobile") String mobile);
	
	int updatePasswordofmobile(@Param("mobile") String mobile, @Param("password") String password);
	
	/**
	 * 查询密码
	 */
	String selectPasswordover(String uuid);

	List<User> selectAllUser();

	User selectUserLocateByUserId(String uuid);

    List<User> getOfflineStaff(Map<String, Object> param);
    
    String selectAccountName(String uuid);
    List<String> getUserInfoList();
    String selectUUID(@Param("realname") String realname);

}